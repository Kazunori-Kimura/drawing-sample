{"version":3,"sources":["components/Canvas/popup/pins/pin_1.svg","components/Canvas/util/vector.ts","components/Canvas/util/common.ts","components/Canvas/util/structure.ts","types/shape.ts","types/note.ts","providers/AppSettingsProvider.tsx","providers/ConfigurationProvider.tsx","providers/NoteSettingsProvider.tsx","components/Version.tsx","components/Header.tsx","hooks/useContextBridge.tsx","components/Canvas/provider/CanvasProvider.tsx","types/common.ts","components/Canvas/provider/DrawProvider.tsx","components/Canvas/layer/DrawLayer.tsx","components/Canvas/layer/GridLayer.tsx","components/Canvas/shape/Beam.tsx","components/Canvas/shape/Force.tsx","components/Canvas/shape/Guide.tsx","components/Canvas/shape/Node.tsx","components/Canvas/shape/Trapezoid.tsx","components/Canvas/layer/GuideLayer.tsx","components/Canvas/provider/PopupProvider.tsx","components/Canvas/layer/ShapeLayer.tsx","components/Canvas/popup/ForceEditor.tsx","components/Canvas/popup/pins/pin_2.svg","components/Canvas/popup/pins/pin_3.svg","components/Canvas/popup/pins/pin_4.svg","components/Canvas/popup/PinSelector.tsx","components/Canvas/popup/TrapezoidEditor.tsx","components/Canvas/popup/index.tsx","components/Canvas/core.tsx","components/Canvas/index.tsx","components/Note/StrokeProvider.tsx","components/Note/layer/Draw.tsx","components/Note/nodes/CanvasHandle/HeaderMenu.tsx","components/Note/nodes/CanvasHandle/index.tsx","components/Note/layer/Frame.tsx","components/Note/layer/Grid.tsx","components/Note/Page.tsx","components/Note/index.tsx","components/MainContainer.tsx","components/Toolbox/CanvasToolbox.tsx","components/Toolbox/NoteToolbox.tsx","components/Toolbox/index.tsx","components/Layout.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["_path","vX","Vector","vY","lerp","v1","v2","alpha","dir","clone","subtract","normalize","distance","mv","multiplyScalar","add","verticalNormalizeVector","v","y","x","dot","invert","data","JSON","parse","stringify","round","value","figure","n","result","Math","snapping","snapSize","i","snap","createNode","id","uuid","NodePinTypes","isNode","item","isForce","name","beam","force","distanceI","isTrapezoid","forceI","forceJ","distanceJ","emptyStructure","unit","length","nodes","beams","forces","trapezoids","NoteModes","PageSize","A3","width","height","A4","B4","B5","MinCanvasSize","defaultCanvasProps","defaultDrawSettings","stroke","strokeWidth","eraser","AppSettingsContext","createContext","undefined","AppSettingsProvider","children","useState","mode","setMode","pageSizeType","setPageSizeType","structures","setStructures","drawings","setDrawings","selectedCanvasIndex","setCanvasIndex","canvasProps","setCanvasProps","canvasRef","useRef","editCanvas","useCallback","props","closeCanvas","current","structure","getStructure","image","toDataURL","state","addDrawing","drawing","Provider","onChangeMode","pageSize","onChangePageSize","onChangeStructures","onSelectCanvas","ConfigurationContext","ConfigurationProvider","tool","setTool","NoteSettingsContext","NoteSettingsProvider","settings","setSettings","onChangeDrawSettings","hash","process","substring","date","version","Version","Typography","variant","sx","ml","Header","AppBar","position","Toolbar","component","color","useContextBridge","contexts","cRef","React","map","context","useContext","useMemo","reduceRight","acc","Context","CanvasContext","CanvasProvider","source","size","gridSize","readonly","setNodes","setBeams","setForces","forceAverage","setForceAve","setTrapezoids","selected","setSelected","useEffect","b","f","t","ave","reduce","prev","nodeMap","forEach","node","beamMap","onChangeNode","items","index","findIndex","onCreateNode","arr","Array","isArray","push","newNodes","onDeleteNode","nodeI","nodeJ","splice","onChangeBeam","onCreateBeam","isBeam","onDeleteBeam","find","ns","Set","beamId","j","has","onChangeForce","onCreateForce","onDeleteForce","onChangeTrapezoid","onCreateTrapezoid","onDeleteTrapezoid","isSelected","some","type","select","toggleSelect","filter","clearSelection","CanvasTools","isNumberArray","every","DrawContext","DrawProvider","points","setPoints","isDrawing","beamRef","disabled","handlePointerDown","event","target","attrs","beamPoints","point","getStage","getPointerPosition","handlePointerMove","makeBeam","start","end","edgeI","edgeJ","newBeam","n1","n2","makeTrapezoid","trapezoid","pi","slice","pj","bi","bj","beamLength","beamDirection","ps","pe","disStart","disEnd","ti","angle","r","cos","tj","isGlobal","createTrapezoid","handlePointerUp","_","onPointerDown","onPointerMove","onPointerUp","DrawLayer","defaultLineProps","dash","listening","GridLayer","horizontalLines","lines","count","verticalLines","Beam","ref","onClick","labelPosition","setLabelPosition","labelWidth","setLabelWidth","labelAngle","setLabelAngle","guidePoints","setGuidePoints","viRef","vjRef","nodeI_x","nodeI_y","nodeJ_x","nodeJ_y","vi","vj","label","angleDeg","guideDir","guideI","guideJ","onTap","rotation","text","fontSize","fill","align","wrap","ellipsis","Guide","forwardRef","Force","ratio","visible","onDblClick","setDistance","setRotation","nodeIx","nodeIy","nodeJx","nodeJy","tail","vertical","arrowLength","isNaN","head","max","p","onDblTap","pointerLength","pointerWidth","offsetX","defaultGuideProps","defaultGuideArrowProps","pointerAtBeginning","GuideLine","v1Ref","v2Ref","basis","setBasis","dist","Pins","free","pin","pinX","pinZ","fixX","fix","Node","draggable","isDragging","onDragStart","onDragMove","onDragEnd","imageUrl","useImage","handleClick","cancelBubble","radius","_useStrictMode","offsetY","defaultArrowProps","defaultLabelProps","Trapezoid","arrows","setArrows","line","setLine","labelI","setLabelI","labelJ","setLabelJ","vI","vJ","ix","iy","jx","jy","vd","rotateDeg","direction","interval","getInsidePoints","slope","NaN","intercept","insideArrows","pd","pu","targetLine","slope1","intercept1","slope2","intercept2","px","rangeX","sort","a","rangeY","err","console","error","intercectPoint","arrow","guidePosition","gi","gj","GuideInterval","GuideLayer","guide","maxX","Number","MIN_SAFE_INTEGER","minX","MAX_SAFE_INTEGER","guidesX","maxY","minY","guidesY","pointsX","pointsY","array","from","key","localX","GlobalVerticalGuidePositionX","GlobalHorizontalGuidePositionY","PopupContext","PopupProvider","popupType","setPopupType","top","left","popupPosition","setPopupPosition","popupParams","setPopupParams","open","params","close","ShapeLayer","nodeRefs","beamRefs","layerRef","draggingNode","setDraggingNode","isNodeDraggable","dragPointRef","timerRef","getBeamPoints","ni","nj","getBeamPointsByBeamId","handleClickBeam","vp","createForceParams","handleDblClickNode","draw","handleDragStartNode","clearInterval","setInterval","handleDragMoveNode","handleDragEndNode","py","handleClickForce","forceId","currentTarget","handleDblClickForce","handleClickTrapezoid","handleDblClickTrapezoid","el","Boolean","ForceEditor","onChange","onClose","setValue","setError","handleSubmit","preventDefault","checkValidity","num","parseFloat","handleChange","errorMessage","Paper","Stack","spacing","autoComplete","noValidate","onSubmit","TextField","margin","required","fullWidth","InputProps","endAdornment","InputAdornment","helperText","justifyContent","Button","ConnectedForceEditor","values","_extends","Object","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPin1","_ref","svgRef","title","titleId","viewBox","xmlns","d","_circle","_circle2","_line","ForwardRef","SvgPin2","cx","cy","x1","y1","x2","y2","SvgPin3","style","_line2","_line3","_line4","_line5","SvgPin4","PinButtons","icon","SvgIcon","transform","defaultButtonProps","alignItems","PinSelector","setPin","newValue","ToggleButtonGroup","orientation","exclusive","entries","ToggleButton","ConnectedPinSelector","validateForce","val","validateAngle","parseInt","TrapezoidEditor","setValues","errors","setErrors","value1","valid1","value2","valid2","value3","valid3","valid","parseFormValues","log","error1","error2","handleChangeIsGlobal","checked","toFormValues","FormControlLabel","control","Checkbox","ConnectedTrapezoidEditor","Popup","Box","zIndex","CanvasCore","ContextBridge","useImperativeHandle","Canvas","setSize","containerRef","observer","ResizeObserver","contentRect","observe","disconnect","backgroundColor","overscrollBehavior","StrokeContext","StrokeProvider","appMode","noteMode","stage","getPosition","abs","Draw","lineProps","lineCap","lineJoin","globalCompositeOperation","Background","styled","display","padding","Spacer","flex","HeaderMenu","onEdit","onCopy","onDelete","onCancel","anchorEl","setAnchorEl","handleClickMore","handleCloseMenu","divProps","IconButton","Menu","MenuItem","CanvasHandle","onSelect","dataURL","onEditCanvas","onCloseCanvas","rectRef","tfRef","setDragging","visibleMenu","visibleTransformer","getLayer","batchDraw","rect","handleDragStart","handleDragMove","getSize","newX","newY","setPosition","handleDragEnd","newRectProps","handleChangeBoundBox","oldBox","newBox","handleTransformEnd","scale","scaleX","scaleY","handleEdit","getBoundingClientRect","onTransformEnd","rotateEnabled","boundBoxFunc","Frame","Grid","Page","stageRef","modified","Note","setViewBox","overflow","MainContainer","boxSizing","mb","border","theme","palette","divider","borderRadius","ToolboxButtons","PanToolAlt","pen","ArrowDownward","Texture","delete","Delete","CanvasToolboxCore","CanvasToolbox","DrawModes","NoteModeButtons","edit","DrawModeButtons","AutoFixNormal","NoteToolboxCore","handleChangeMode","handleChangeTool","handleChangeStrokeWidth","handleChangeStroke","mt","Slider","min","step","marks","valueLabelDisplay","NoteToolbox","Toolbox","Layout","windowRect","setWindowRect","fitWindowSize","window","innerHeight","innerWidth","addEventListener","removeEventListener","flexDirection","flexWrap","pt","createTheme","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f425fd09.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80 0 L30 80 L130 80 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin1);\nexport default __webpack_public_path__ + \"static/media/pin_1.92d54adc.svg\";\nexport { ForwardRef as ReactComponent };","import Vector from 'victor';\n\nexport { Vector };\n\n// X方向のベクトル\nexport const vX = new Vector(1, 0);\n// Y方向のベクトル\nexport const vY = new Vector(0, 1);\n\n/**\n * v1 と v2 の間にある vp を取得する\n * @param v1\n * @param v2\n * @param alpha\n * @returns\n */\nexport const lerp = (v1: Vector, v2: Vector, alpha: number): Vector => {\n    if (alpha >= 1) {\n        return v2;\n    }\n    if (alpha <= 0) {\n        return v1;\n    }\n    const dir = v2.clone().subtract(v1).normalize();\n    const distance = v1.distance(v2);\n    const mv = dir.multiplyScalar(distance * alpha);\n    return v1.clone().add(mv);\n};\n\n/**\n * v1 と v2 に直交する単位ベクトルを返す\n * @param v1\n * @param v2\n * @returns\n */\nexport const verticalNormalizeVector = (v1: Vector, v2: Vector): Vector => {\n    const dir = v2.clone().subtract(v1).normalize();\n    const v = new Vector(dir.y, dir.x * -1).normalize();\n\n    const value = vY.dot(v);\n    if (value > 0) {\n        v.invert();\n    }\n\n    return v;\n};\n","import { Point } from '../types';\nimport { lerp, Vector } from './vector';\n\nexport const clone = <T>(data: T): T => {\n    return JSON.parse(JSON.stringify(data)) as T;\n};\n\nexport const round = (value: number, figure = 3): number => {\n    const n = 10 ** figure;\n    const result = Math.round(value * n) / n;\n    return result;\n};\n\nconst snapping = (value: number, snapSize = 25): number => {\n    const n = value / snapSize;\n    const i = Math.round(n) * snapSize;\n    return i;\n};\n\nexport const DEFAULT_SNAP_SIZE = 25;\n\nexport const snap = ([x, y]: [number, number], snapSize = DEFAULT_SNAP_SIZE): [number, number] => {\n    return [snapping(x, snapSize), snapping(y, snapSize)];\n};\n\nconst InsideArrowCount = 10;\nconst InsideArrowInterval = 25;\nconst InsideArrowMinInterval = 10;\n\n/**\n * 開始点から終了点まで等間隔に点を取る\n * @param start\n * @param end\n * @param direction\n * @returns\n */\nexport const getInsidePoints = (start: Vector, end: Vector, direction: Vector): Vector[] => {\n    const points: Vector[] = [];\n    // 2点間の距離\n    const distance = start.distance(end);\n    // 分割数\n    let count = InsideArrowCount;\n    // 間隔\n    let interval = distance / (count + 1);\n    while (interval < InsideArrowInterval && count > 0) {\n        count--;\n        interval = distance / (count + 1);\n    }\n\n    if (count > 0) {\n        // 始点から interval の間隔で count 個 点を取る\n        for (let i = 1; i <= count; i++) {\n            const point = start.clone().add(direction.clone().multiplyScalar(interval * i));\n            points.push(point);\n        }\n    } else {\n        // 半分にしてみる\n        interval = distance / 2;\n        if (interval >= InsideArrowMinInterval) {\n            // 半分の位置に点を置く\n            const point = lerp(start, end, 0.5);\n            points.push(point);\n        }\n    }\n\n    return points;\n};\n\n/**\n * 開始点からある方向に伸ばした線が対象となる線と交わる点を取得する\n * @param targetLine 対象となる Line [始点、終点、傾き、切片]\n * @param start 開始点\n * @param dir 方向\n * @returns 交点（なければ null）\n */\nexport const intercectPoint = (\n    targetLine: [Vector, Vector, number, number],\n    start: Vector,\n    dir: Vector\n): Point | null => {\n    const [pi, pj, slope1, intercept1] = targetLine;\n    let point: Point | null = null;\n    try {\n        // dir の傾き\n        const end: Vector = start.clone().add(dir);\n        const slope2 = end.x - start.x !== 0 ? (end.y - start.y) / (end.x - start.x) : NaN;\n        // dir の切片\n        const intercept2 = isNaN(slope2) ? NaN : start.y - slope2 * start.x;\n\n        if (slope1 === slope2) {\n            // 平行なので交点なし\n            return null;\n        }\n\n        if (!isNaN(slope1) && !isNaN(slope2)) {\n            // どちらも垂直でない\n            const px = (intercept2 - intercept1) / (slope1 - slope2);\n            const py = slope1 * px + intercept1;\n\n            point = [px, py];\n        } else if (isNaN(slope1)) {\n            // 対象の Line が垂直\n            const px = pi.x;\n            const py = px * slope2 + intercept2;\n\n            point = [px, py];\n        } else if (isNaN(slope2)) {\n            // dir が垂直\n            const px = start.x;\n            const py = px * slope1 + intercept1;\n\n            point = [px, py];\n        }\n\n        // 交点が Line の内側？\n        if (point) {\n            const [x, y] = point;\n            const rangeX = [pi.x, pj.x].sort((a, b) => a - b);\n            const rangeY = [pi.y, pj.y].sort((a, b) => a - b);\n            if (x >= rangeX[0] && x <= rangeX[1] && y >= rangeY[0] && y <= rangeY[1]) {\n                return point;\n            }\n        }\n        return null;\n    } catch (err) {\n        console.error(err);\n    }\n\n    return null;\n};\n","import { v4 as uuid } from 'uuid';\nimport { Beam, Force, Node, Structure, Trapezoid } from '../../../types/shape';\nimport { round } from './common';\nimport { Vector } from './vector';\n\n/**\n * 節点の作成\n * @param x\n * @param y\n * @returns\n */\nexport const createNode = (x: number, y: number): Node => {\n    return {\n        id: uuid(),\n        x,\n        y,\n    };\n};\n\nexport const createBeam = (name: string, nodeI: string, nodeJ: string): Omit<Beam, 'id'> => {\n    return {\n        name,\n        nodeI,\n        nodeJ,\n    };\n};\n\ntype CreateForceParams = Omit<Force, 'id'>;\n\nexport const createForce = (params: CreateForceParams): Force => {\n    return {\n        ...params,\n        id: uuid(),\n    };\n};\n\nexport const createForceParams = (\n    beam: string,\n    vi: Vector,\n    vj: Vector,\n    vp: Vector\n): Omit<Force, 'id' | 'name'> => {\n    const beamLength = vi.distance(vj);\n    // クリック位置までの距離\n    const distance = vi.distance(vp);\n\n    return {\n        beam,\n        force: 10,\n        distanceI: round(distance / beamLength),\n    };\n};\n\nexport const replaceNode = (structure: Structure, targetId: string, newId: string): Structure => {\n    structure.beams.forEach((beam) => {\n        if (beam.nodeI === targetId) {\n            beam.nodeI = newId;\n        }\n        if (beam.nodeJ === targetId) {\n            beam.nodeJ = newId;\n        }\n    });\n    return structure;\n};\n\nexport const createTrapezoid = (\n    start: number[],\n    end: number[],\n    beamId: string,\n    beamPoints: number[]\n): Trapezoid => {\n    // 梁要素の情報\n    const pi = beamPoints.slice(0, 2);\n    const pj = beamPoints.slice(-2);\n    const bi = new Vector(pi[0], pi[1]);\n    const bj = new Vector(pj[0], pj[1]);\n    const beamLength = bi.distance(bj);\n    const beamDirection = bj.clone().subtract(bi).normalize();\n\n    // ドラッグ開始点/終了点\n    let ps = new Vector(start[0], start[1]);\n    let pe = new Vector(end[0], end[1]);\n    // 開始点と終了点のどちらが i端に近い？\n    let disStart = bi.distance(ps);\n    let disEnd = bi.distance(pe);\n    if (disStart > disEnd) {\n        // 終了点の方が i端に近ければ入れ替える\n        [ps, pe] = [pe, ps];\n        [disStart, disEnd] = [disEnd, disStart];\n    }\n\n    // 分布荷重の開始点を梁要素上の座標に取り直す\n    const ti = bi.clone().add(beamDirection.clone().multiplyScalar(disStart));\n    // ドラッグ方向\n    const dir = pe.clone().subtract(ti).normalize();\n    // 梁要素とドラッグ方向が成す角度\n    const angle = beamDirection.angle() - dir.angle();\n    // 開始点からドラッグ終了点までの長さ\n    const dragLength = ti.distance(pe);\n    // 角度と長さから分布荷重の終了点を計算する\n    const r = dragLength * Math.cos(angle);\n    const tj = ti.clone().add(beamDirection.clone().multiplyScalar(r));\n    // j端から分布荷重の終了点までの距離を取り直す\n    disEnd = bj.distance(tj);\n\n    // i端から開始点までの比率\n    const distanceI = round(disStart / beamLength, 3);\n    const distanceJ = round(disEnd / beamLength, 3);\n\n    const trapezoid: Trapezoid = {\n        id: uuid(),\n        name: 'Trapezoid_N', //仮に名前を設定\n        beam: beamId,\n        forceI: 10,\n        forceJ: 10,\n        distanceI,\n        distanceJ,\n        angle: 90,\n        isGlobal: false,\n    };\n\n    return trapezoid;\n};\n","/**\n * 単位: 力\n */\nexport const ForceUnitValues = ['N', 'kN'] as const;\n\n/**\n * 単位: 長さ\n */\nexport const LengthUnitValues = ['mm', 'cm', 'm'] as const;\n\nexport type ForceUnitType = typeof ForceUnitValues[number];\nexport type LengthUnitType = typeof LengthUnitValues[number];\n\n/**\n * 単位\n */\nexport interface Unit {\n    force: ForceUnitType;\n    length: LengthUnitType;\n}\n\nexport const NodePinTypes = ['free', 'pin', 'pinX', 'pinZ', 'fixX', 'fix'] as const;\nexport type NodePinType = typeof NodePinTypes[number];\n\nexport const isNodePinType = (item: unknown): item is NodePinType => {\n    if (typeof item === 'string') {\n        return NodePinTypes.some((type) => type === item);\n    }\n    return false;\n};\n\nexport interface Node {\n    id: string;\n    x: number;\n    y: number;\n    pin?: NodePinType;\n}\n\nexport const isNode = (item: unknown): item is Node => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.x === 'number' &&\n            typeof value.y === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Beam {\n    id: string;\n    name: string;\n    nodeI: string;\n    nodeJ: string;\n}\n\nexport const isBeam = (item: unknown): item is Beam => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.name === 'string' &&\n            typeof value.nodeI === 'string' &&\n            typeof value.nodeJ === 'string'\n        );\n    }\n    return false;\n};\n\nexport interface Force {\n    id: string;\n    name: string;\n    beam: string;\n    force: number;\n    // i端からの距離 (0 〜 1)\n    distanceI: number;\n}\nexport const isForce = (item: unknown): item is Force => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.name === 'string' &&\n            typeof value.beam === 'string' &&\n            typeof value.force === 'number' &&\n            typeof value.distanceI === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Trapezoid {\n    id: string;\n    name: string;\n    beam: string;\n    // kN/m\n    forceI: number;\n    // kN/m\n    forceJ: number;\n    // i端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceI: number;\n    // j端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceJ: number;\n    // 角度、デフォルト 90度、-179 〜 180 度の間で指定 (-180 = 180)\n    angle?: number;\n    // 全体座標系に垂直か、部材に垂直か デフォルト false\n    isGlobal?: boolean;\n}\n\nexport const isTrapezoid = (item: unknown): item is Trapezoid => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.name === 'string' &&\n            typeof value.beam === 'string' &&\n            typeof value.forceI === 'number' &&\n            typeof value.distanceI === 'number' &&\n            typeof value.forceJ === 'number' &&\n            typeof value.distanceJ === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Structure {\n    unit: Unit;\n    nodes: Node[];\n    beams: Beam[];\n    forces: Force[];\n    trapezoids: Trapezoid[];\n}\n\nexport type StructureFieldType = keyof Omit<Structure, 'unit'>;\n\nexport const defaultUnit: Unit = {\n    force: 'kN',\n    length: 'm',\n};\n\nexport const emptyStructure: Structure = {\n    unit: defaultUnit,\n    nodes: [],\n    beams: [],\n    forces: [],\n    trapezoids: [],\n};\n","import { DOMSize } from './common';\nimport { emptyStructure, Structure } from './shape';\n\nconst NoteModes = ['select', 'edit'] as const;\nexport type NoteMode = typeof NoteModes[number];\nexport const isNoteMode = (item: unknown): item is NoteMode => {\n    if (typeof item === 'string') {\n        return NoteModes.some((mode) => mode === item);\n    }\n    return false;\n};\n\nexport const PageSizeTypes = ['A4', 'A3', 'B5', 'B4'] as const;\nexport type PageSizeType = typeof PageSizeTypes[number];\n\nexport const PageSize: Record<PageSizeType, DOMSize> = {\n    A3: {\n        width: 0,\n        height: 0,\n    },\n    A4: {\n        width: 2970,\n        height: 2100,\n    },\n    B4: {\n        width: 0,\n        height: 0,\n    },\n    B5: {\n        width: 0,\n        height: 0,\n    },\n};\n\nexport interface StructureCanvasProps {\n    id: string;\n    data: Structure;\n    image?: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport const MinCanvasSize: DOMSize = {\n    width: 160,\n    height: 90,\n};\n\nexport const defaultCanvasProps: StructureCanvasProps = {\n    id: 'Canvas_1',\n    data: emptyStructure,\n    x: 100,\n    y: 100,\n    ...MinCanvasSize,\n};\n\nexport interface DrawingProps {\n    stroke: string;\n    strokeWidth: number;\n    eraser?: boolean;\n    points: number[];\n}\nexport type DrawSettings = Omit<DrawingProps, 'points'>;\nexport const defaultDrawSettings: DrawSettings = {\n    stroke: '#000000',\n    strokeWidth: 4,\n    eraser: false,\n};\n\nexport interface PageProps {\n    size: PageSizeType;\n    drawings: DrawingProps[];\n    structures: StructureCanvasProps[];\n}\n\nexport const defaultPageProps: PageProps = {\n    size: 'A4',\n    drawings: [],\n    structures: [\n        {\n            ...defaultCanvasProps,\n        },\n    ],\n};\n","import {\n    createContext,\n    Dispatch,\n    RefObject,\n    SetStateAction,\n    useCallback,\n    useRef,\n    useState,\n} from 'react';\nimport { CanvasHandler } from '../components/Canvas';\nimport { clone } from '../components/Canvas/util';\nimport { AppMode, DOMSize, ShapeBaseProps } from '../types/common';\nimport {\n    defaultCanvasProps,\n    DrawingProps,\n    PageSize,\n    PageSizeType,\n    StructureCanvasProps,\n} from '../types/note';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface IAppSettingsContext {\n    mode: AppMode;\n    onChangeMode: Dispatch<SetStateAction<AppMode>>;\n    pageSizeType: PageSizeType;\n    pageSize: DOMSize;\n    onChangePageSize: Dispatch<SetStateAction<PageSizeType>>;\n    structures: StructureCanvasProps[];\n    onChangeStructures: Dispatch<SetStateAction<StructureCanvasProps[]>>;\n    drawings: DrawingProps[];\n    addDrawing: (drawing: DrawingProps) => void;\n    selectedCanvasIndex?: number;\n    onSelectCanvas: Dispatch<SetStateAction<number | undefined>>;\n    canvasProps?: ShapeBaseProps;\n    editCanvas: (props: ShapeBaseProps) => void;\n    closeCanvas: VoidFunction;\n    canvasRef: RefObject<CanvasHandler>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const AppSettingsContext = createContext<IAppSettingsContext>(undefined!);\n\nconst AppSettingsProvider: React.VFC<Props> = ({ children }) => {\n    const [mode, setMode] = useState<AppMode>('note');\n    // ノートのサイズ\n    const [pageSizeType, setPageSizeType] = useState<PageSizeType>('A4');\n    // ページに含まれる構造データ\n    const [structures, setStructures] = useState<StructureCanvasProps[]>([defaultCanvasProps]);\n    // ノートの描画データ\n    const [drawings, setDrawings] = useState<DrawingProps[]>([]);\n\n    const [selectedCanvasIndex, setCanvasIndex] = useState<number>();\n    const [canvasProps, setCanvasProps] = useState<ShapeBaseProps>();\n    const canvasRef = useRef<CanvasHandler>(null);\n\n    /**\n     * キャンバスの編集開始\n     */\n    const editCanvas = useCallback((props: ShapeBaseProps) => {\n        setMode('canvas');\n        setCanvasProps(props);\n    }, []);\n\n    /**\n     * キャンバスの編集完了\n     */\n    const closeCanvas = useCallback(() => {\n        if (canvasRef.current) {\n            // 更新した構造データを取得する\n            const structure = canvasRef.current.getStructure();\n            const image = canvasRef.current.toDataURL();\n\n            // 選択中のキャンバスのデータを更新\n            if (typeof selectedCanvasIndex === 'number') {\n                setStructures((state) => {\n                    const data = clone(state);\n                    data[selectedCanvasIndex].data = structure;\n                    data[selectedCanvasIndex].image = image;\n                    return data;\n                });\n            }\n        }\n\n        // 状態をリセット\n        setMode('note');\n        setCanvasProps(undefined);\n    }, [selectedCanvasIndex]);\n\n    /**\n     * 線の追加\n     */\n    const addDrawing = useCallback((drawing: DrawingProps) => {\n        setDrawings((data) => [...data, drawing]);\n    }, []);\n\n    return (\n        <AppSettingsContext.Provider\n            value={{\n                mode,\n                onChangeMode: setMode,\n                pageSizeType,\n                pageSize: PageSize[pageSizeType],\n                onChangePageSize: setPageSizeType,\n                structures,\n                onChangeStructures: setStructures,\n                drawings,\n                addDrawing,\n                selectedCanvasIndex,\n                onSelectCanvas: setCanvasIndex,\n                canvasProps,\n                editCanvas,\n                closeCanvas,\n                canvasRef,\n            }}\n        >\n            {children}\n        </AppSettingsContext.Provider>\n    );\n};\n\nexport default AppSettingsProvider;\n","import { createContext, useState } from 'react';\nimport { CanvasTool } from '../types/common';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface IConfigurationContext {\n    tool: CanvasTool;\n    setTool: (tool: CanvasTool) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const ConfigurationContext = createContext<IConfigurationContext>(undefined!);\n\nconst ConfigurationProvider: React.VFC<Props> = ({ children }) => {\n    const [tool, setTool] = useState<CanvasTool>('select');\n\n    return (\n        <ConfigurationContext.Provider value={{ tool, setTool }}>\n            {children}\n        </ConfigurationContext.Provider>\n    );\n};\n\nexport default ConfigurationProvider;\n","import { createContext, Dispatch, SetStateAction, useState } from 'react';\nimport { defaultDrawSettings, DrawSettings, NoteMode } from '../types/note';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface INoteSettingsContext {\n    mode: NoteMode;\n    settings: DrawSettings;\n    onChangeMode: Dispatch<SetStateAction<NoteMode>>;\n    onChangeDrawSettings: Dispatch<SetStateAction<DrawSettings>>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const NoteSettingsContext = createContext<INoteSettingsContext>(undefined!);\n\nconst NoteSettingsProvider: React.VFC<Props> = ({ children }) => {\n    const [mode, setMode] = useState<NoteMode>('select');\n    const [settings, setSettings] = useState<DrawSettings>(defaultDrawSettings);\n\n    return (\n        <NoteSettingsContext.Provider\n            value={{ mode, settings, onChangeMode: setMode, onChangeDrawSettings: setSettings }}\n        >\n            {children}\n        </NoteSettingsContext.Provider>\n    );\n};\n\nexport default NoteSettingsProvider;\n","import { Typography } from '@mui/material';\n\nconst hash = process.env.REACT_APP_GIT_COMMIT_HASH?.substring(0, 7) ?? '';\nconst date = process.env.REACT_APP_GIT_COMMIT_DATE ?? '';\nconst version = process.env.REACT_APP_PACKAGE_VERSION ?? '';\n\nconst Version: React.VFC = () => {\n    return (\n        <Typography\n            variant=\"caption\"\n            sx={{ ml: 2 }}\n        >{`ver ${version} (${hash}: ${date})`}</Typography>\n    );\n};\n\nexport default Version;\n","import { AppBar, Toolbar, Typography } from '@mui/material';\nimport Version from './Version';\n\nconst Header: React.VFC = () => {\n    return (\n        <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\">\n                    Drawing Sample\n                </Typography>\n                <Version />\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Header;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react';\n\n// https://github.com/pmndrs/drei/blob/master/src/core/useContextBridge.tsx\nexport const useContextBridge = (...contexts: Array<React.Context<any>>) => {\n    const cRef = React.useRef<Array<React.Context<any>>>([]);\n    cRef.current = contexts.map((context) => React.useContext(context));\n\n    return React.useMemo(\n        () =>\n            ({ children }: { children: React.ReactNode }): JSX.Element =>\n                contexts.reduceRight(\n                    (acc, Context, i) => (\n                        <Context.Provider value={cRef.current[i]} children={acc} />\n                    ),\n                    children\n                ) as unknown as JSX.Element,\n        [contexts]\n    );\n};\n","import { createContext, useCallback, useEffect, useMemo, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { CanvasTool, DOMSize } from '../../../types/common';\nimport {\n    Beam,\n    Force,\n    isBeam,\n    isForce,\n    isNode,\n    isTrapezoid,\n    Node,\n    Structure,\n    Trapezoid,\n} from '../../../types/shape';\nimport { Shape } from '../types';\nimport { clone } from '../util';\n\ninterface Props {\n    children: React.ReactNode;\n    size: DOMSize;\n    structure: Structure;\n    gridSize?: number;\n    snapSize?: number;\n    tool?: CanvasTool;\n    readonly?: boolean;\n}\n\ninterface ICanvasContext {\n    size: DOMSize;\n    gridSize: number;\n    snapSize: number;\n    tool: CanvasTool;\n    readonly: boolean;\n    nodes: Node[];\n    nodeMap: Record<string, Node>;\n    beams: Beam[];\n    beamMap: Record<string, Beam>;\n    forces: Force[];\n    trapezoids: Trapezoid[];\n    forceAverage: number;\n    onChangeNode: (value: Node) => void;\n    onCreateNode: (value: Partial<Node> | Partial<Node>[]) => void;\n    onDeleteNode: (id: string) => void;\n    onChangeBeam: (value: Beam) => void;\n    onCreateBeam: (value: Partial<Beam>) => void;\n    onDeleteBeam: (id: string) => void;\n    onChangeForce: (value: Force) => void;\n    onCreateForce: (value: Partial<Force>) => void;\n    onDeleteForce: (id: string) => void;\n    onChangeTrapezoid: (value: Trapezoid) => void;\n    onCreateTrapezoid: (value: Partial<Trapezoid>) => void;\n    onDeleteTrapezoid: (id: string) => void;\n    selected: Shape[];\n    isSelected: (item: Shape) => boolean;\n    select: (item: Shape) => void;\n    toggleSelect: (item: Shape) => void;\n    clearSelection: VoidFunction;\n    getStructure: () => Structure;\n}\n\n// Context | React TypeScript Cheatsheets\n// https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/context/\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const CanvasContext = createContext<ICanvasContext>(undefined!);\n\nconst CanvasProvider: React.VFC<Props> = ({\n    children,\n    structure: source,\n    size,\n    gridSize = 25,\n    snapSize = 25,\n    tool = 'select',\n    readonly = false,\n}) => {\n    const [nodes, setNodes] = useState<Node[]>([]);\n    const [beams, setBeams] = useState<Beam[]>([]);\n    const [forces, setForces] = useState<Force[]>([]);\n    const [forceAverage, setForceAve] = useState<number>(0);\n    const [trapezoids, setTrapezoids] = useState<Trapezoid[]>([]);\n    // 選択要素\n    const [selected, setSelected] = useState<Shape[]>([]);\n\n    // props に渡された構造データから nodes, beams, forces, trapezoids を\n    // 抜き出し、表示用に整形する\n    useEffect(() => {\n        const { nodes: n, beams: b, forces: f, trapezoids: t } = source;\n        setNodes(n);\n        setBeams(b);\n        setForces(f);\n        setTrapezoids(t);\n    }, [source]);\n\n    // 構造データを再生成する\n    const getStructure = useCallback(() => {\n        return {\n            unit: source.unit,\n            nodes,\n            beams,\n            forces,\n            trapezoids,\n        };\n    }, [beams, forces, nodes, source.unit, trapezoids]);\n\n    // 集中荷重の平均値を取得する\n    useEffect(() => {\n        // forces\n        let ave = 0;\n        if (forces.length > 0) {\n            const { force: total } = forces.reduce((prev, current) => {\n                const item: Force = {\n                    ...prev,\n                    force: prev.force + current.force,\n                };\n                return item;\n            });\n            ave = total / forces.length;\n        }\n        setForceAve(ave);\n    }, [forces]);\n\n    const nodeMap = useMemo(() => {\n        const map: Record<string, Node> = {};\n        nodes.forEach((node) => {\n            map[node.id] = node;\n        });\n        return map;\n    }, [nodes]);\n\n    const beamMap = useMemo(() => {\n        const map: Record<string, Beam> = {};\n        beams.forEach((beam) => {\n            map[beam.id] = beam;\n        });\n        return map;\n    }, [beams]);\n\n    const onChangeNode = useCallback(\n        (value: Node) => {\n            if (readonly) {\n                return;\n            }\n\n            setNodes((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === value.id);\n                if (index >= 0) {\n                    const item = items[index];\n                    items[index] = {\n                        ...item,\n                        ...value,\n                    };\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onCreateNode = useCallback(\n        (value: Partial<Node> | Partial<Node>[]) => {\n            if (readonly) {\n                return;\n            }\n\n            const arr: Partial<Node>[] = [];\n\n            if (Array.isArray(value)) {\n                arr.push(...value);\n            } else {\n                arr.push(value);\n            }\n\n            const newNodes: Node[] = [];\n            arr.forEach((item) => {\n                if (typeof item.id === 'undefined') {\n                    item.id = uuid();\n                }\n                if (isNode(item)) {\n                    newNodes.push(item);\n                }\n            });\n\n            setNodes((items) => [...items, ...newNodes]);\n        },\n        [readonly]\n    );\n\n    const onDeleteNode = useCallback(\n        (id: string) => {\n            if (readonly) {\n                return;\n            }\n\n            // 削除対象 node に紐づく beam を削除する\n            setBeams((state) => {\n                const items = clone(state);\n                let index = items.findIndex(({ nodeI, nodeJ }) => nodeI === id || nodeJ === id);\n                while (index >= 0) {\n                    items.splice(index, 1);\n                    index = items.findIndex(({ nodeI, nodeJ }) => nodeI === id || nodeJ === id);\n                }\n                return items;\n            });\n\n            setNodes((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === id);\n                if (index >= 0) {\n                    items.splice(index, 1);\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onChangeBeam = useCallback(\n        (value: Beam) => {\n            if (readonly) {\n                return;\n            }\n\n            setBeams((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === value.id);\n                if (index >= 0) {\n                    const item = items[index];\n                    items[index] = {\n                        ...item,\n                        ...value,\n                    };\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onCreateBeam = useCallback(\n        (value: Partial<Beam>) => {\n            if (readonly) {\n                return;\n            }\n\n            const item: Partial<Beam> = { ...value };\n\n            if (typeof item.id === 'undefined') {\n                item.id = uuid();\n            }\n            if (isBeam(item)) {\n                setBeams((items) => [...items, item]);\n            }\n        },\n        [readonly]\n    );\n\n    const onDeleteBeam = useCallback(\n        (id: string) => {\n            if (readonly) {\n                return;\n            }\n\n            // 該当 beam に紐づく Node を削除する\n            const beam = beams.find((item) => item.id === id);\n            if (beam) {\n                // 削除対象 beam に紐づく Node\n                const { nodeI, nodeJ } = beam;\n                // 使用 node の Set\n                const ns = new Set<string>();\n                beams.forEach(({ id: beamId, nodeI: i, nodeJ: j }) => {\n                    if (beamId !== id) {\n                        ns.add(i);\n                        ns.add(j);\n                    }\n                });\n\n                setNodes((state) => {\n                    const items = clone(state);\n                    [nodeI, nodeJ].forEach((node) => {\n                        if (!ns.has(node)) {\n                            // 使用されていない node なので削除\n                            const index = items.findIndex((item) => item.id === node);\n                            if (index >= 0) {\n                                items.splice(index, 1);\n                            }\n                        }\n                    });\n                    return items;\n                });\n            }\n\n            // 該当 beam に紐づく Force, Trapezoids を削除する\n            setForces((state) => {\n                const items = clone(state);\n                let index = items.findIndex((item) => item.beam === id);\n                while (index >= 0) {\n                    items.splice(index, 1);\n                    index = items.findIndex((item) => item.beam === id);\n                }\n                return items;\n            });\n            setTrapezoids((state) => {\n                const items = clone(state);\n                let index = items.findIndex((item) => item.beam === id);\n                while (index >= 0) {\n                    items.splice(index, 1);\n                    index = items.findIndex((item) => item.beam === id);\n                }\n                return items;\n            });\n\n            // beam を削除\n            setBeams((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === id);\n                if (index >= 0) {\n                    items.splice(index, 1);\n                }\n                return items;\n            });\n        },\n        [beams, readonly]\n    );\n\n    const onChangeForce = useCallback(\n        (value: Force) => {\n            if (readonly) {\n                return;\n            }\n\n            setForces((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === value.id);\n                if (index >= 0) {\n                    const item = items[index];\n                    items[index] = {\n                        ...item,\n                        ...value,\n                    };\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onCreateForce = useCallback(\n        (value: Partial<Force>) => {\n            if (readonly) {\n                return;\n            }\n\n            const item: Partial<Force> = {\n                ...value,\n            };\n\n            if (typeof item.id === 'undefined') {\n                item.id = uuid();\n            }\n            if (isForce(item)) {\n                setForces((items) => [...items, item]);\n            }\n        },\n        [readonly]\n    );\n\n    const onDeleteForce = useCallback(\n        (id: string) => {\n            if (readonly) {\n                return;\n            }\n\n            setForces((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === id);\n                if (index >= 0) {\n                    items.splice(index, 1);\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onChangeTrapezoid = useCallback(\n        (value: Trapezoid) => {\n            if (readonly) {\n                return;\n            }\n\n            setTrapezoids((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === value.id);\n                if (index >= 0) {\n                    const item = items[index];\n                    items[index] = {\n                        ...item,\n                        ...value,\n                    };\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onCreateTrapezoid = useCallback(\n        (value: Partial<Trapezoid>) => {\n            if (readonly) {\n                return;\n            }\n\n            const item: Partial<Trapezoid> = {\n                ...value,\n            };\n            if (typeof item.id === 'undefined') {\n                item.id = uuid();\n            }\n            if (isTrapezoid(item)) {\n                setTrapezoids((items) => [...items, item]);\n            }\n        },\n        [readonly]\n    );\n\n    const onDeleteTrapezoid = useCallback(\n        (id: string) => {\n            if (readonly) {\n                return;\n            }\n\n            setTrapezoids((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === id);\n                if (index >= 0) {\n                    items.splice(index, 1);\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const isSelected = useCallback(\n        (item: Shape) => {\n            return selected.some(({ type, id }) => type === item.type && id === item.id);\n        },\n        [selected]\n    );\n\n    const select = useCallback(\n        (item: Shape) => {\n            if (!isSelected(item)) {\n                setSelected((state) => [...state, item]);\n            }\n        },\n        [isSelected, setSelected]\n    );\n\n    const toggleSelect = useCallback(\n        (item: Shape) => {\n            if (isSelected(item)) {\n                // 削除\n                setSelected((state) =>\n                    state.filter(({ type, id }) => !(type === item.type && id === item.id))\n                );\n            } else {\n                // 追加\n                setSelected((state) => [...state, item]);\n            }\n        },\n        [isSelected, setSelected]\n    );\n\n    const clearSelection = useCallback(() => {\n        setSelected([]);\n    }, []);\n\n    return (\n        <CanvasContext.Provider\n            value={{\n                size,\n                gridSize,\n                snapSize,\n                tool,\n                readonly,\n                nodes,\n                beams,\n                forces,\n                trapezoids,\n                nodeMap,\n                beamMap,\n                forceAverage,\n                onChangeNode,\n                onCreateNode,\n                onDeleteNode,\n                onChangeBeam,\n                onCreateBeam,\n                onDeleteBeam,\n                onChangeForce,\n                onCreateForce,\n                onDeleteForce,\n                onChangeTrapezoid,\n                onCreateTrapezoid,\n                onDeleteTrapezoid,\n                selected,\n                isSelected,\n                select,\n                toggleSelect,\n                clearSelection,\n                getStructure,\n            }}\n        >\n            {children}\n        </CanvasContext.Provider>\n    );\n};\n\nexport default CanvasProvider;\n","// --- app 共通 ---\nexport interface DOMSize {\n    width: number;\n    height: number;\n}\n\nexport interface ShapePosition {\n    x: number;\n    y: number;\n}\n\nexport type ShapeBaseProps = DOMSize & ShapePosition;\n\nexport const AppModes = ['note', 'canvas'] as const;\nexport type AppMode = typeof AppModes[number];\n\n// --- canvas関係 ---\n\nexport const CanvasTools = ['select', 'pen', 'force', 'trapezoid', 'delete'] as const;\nexport type CanvasTool = typeof CanvasTools[number];\nexport const isCanvasTool = (item: unknown): item is CanvasTool => {\n    if (typeof item === 'string') {\n        return CanvasTools.some((tool) => tool === item);\n    }\n    return false;\n};\n\nexport const isNumberArray = (item: unknown): item is number[] => {\n    if (Array.isArray(item)) {\n        if (item.length === 0) {\n            return true;\n        }\n\n        return item.every((value) => typeof value === 'number');\n    }\n    return false;\n};\n\nexport const isLinePoints = (item: unknown): item is [number, number, number, number] => {\n    if (isNumberArray(item)) {\n        return item.length === 4;\n    }\n    return false;\n};\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport {\n    createContext,\n    ReactNode,\n    useCallback,\n    useContext,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { isNumberArray } from '../../../types/common';\nimport { Beam, Node } from '../../../types/shape';\nimport { createNode, createTrapezoid, DEFAULT_SNAP_SIZE, snap } from '../util';\nimport { CanvasContext } from './CanvasProvider';\n\ninterface IDrawContext {\n    points: number[];\n    onPointerDown: (event: KonvaEventObject<Event>) => void;\n    onPointerMove: (event: KonvaEventObject<Event>) => void;\n    onPointerUp: (event: KonvaEventObject<Event>) => void;\n}\n\ninterface Props {\n    children: ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const DrawContext = createContext<IDrawContext>(undefined!);\n\ntype BeamAttrs = {\n    id: string;\n    points: number[];\n};\n\nconst DrawProvider: React.VFC<Props> = ({ children }) => {\n    const {\n        tool,\n        readonly = false,\n        nodes,\n        beams,\n        trapezoids,\n        onCreateNode,\n        onCreateBeam,\n        onCreateTrapezoid,\n    } = useContext(CanvasContext);\n    // 描画する点\n    const [points, setPoints] = useState<number[]>([]);\n\n    const isDrawing = useRef<boolean>();\n    const beamRef = useRef<BeamAttrs>();\n\n    const disabled = useMemo(() => {\n        if (!readonly) {\n            return !(tool === 'pen' || tool === 'trapezoid');\n        }\n        return true;\n    }, [readonly, tool]);\n\n    const handlePointerDown = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n\n            if (tool === 'trapezoid') {\n                // 梁要素の選択でなければ無視する\n                if (event.target.attrs['type'] !== 'beam') {\n                    return;\n                }\n                const beamId = event.target.attrs['id'];\n                const beamPoints = event.target.attrs['points'];\n                if (isNumberArray(beamPoints) && typeof beamId === 'string') {\n                    beamRef.current = {\n                        id: beamId,\n                        points: beamPoints,\n                    };\n                }\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                isDrawing.current = true;\n                setPoints([point.x, point.y]);\n            }\n        },\n        [disabled, tool]\n    );\n\n    const handlePointerMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                setPoints((state) => [...state, point.x, point.y]);\n            }\n        },\n        [disabled]\n    );\n\n    const makeBeam = useCallback(\n        (start: number[], end: number[]) => {\n            // スナップさせる\n            let edgeI = snap([start[0], start[1]], DEFAULT_SNAP_SIZE);\n            let edgeJ = snap([end[0], end[1]], DEFAULT_SNAP_SIZE);\n\n            if (edgeI[0] === edgeJ[0] && edgeI[1] === edgeJ[1]) {\n                // 始点と終点が同一座標になる場合は beam を作成しない\n                return;\n            }\n\n            const newNodes: Node[] = [];\n            const newBeam: Partial<Beam> = {\n                name: `Beam_${beams.length + 1}`,\n            };\n\n            if (edgeI[0] > edgeJ[0]) {\n                // 右 -> 左 に移動した場合は始点と終点を入れ替え\n                [edgeI, edgeJ] = [edgeJ, edgeI];\n            } else if (edgeI[0] === edgeJ[0] && edgeI[1] > edgeJ[1]) {\n                // 下 -> 上 に移動した場合は始点と終点を入れ替え\n                [edgeI, edgeJ] = [edgeJ, edgeI];\n            }\n\n            const nodeI = createNode(...edgeI);\n            // 同一座標の節点が存在するか？\n            const n1 = nodes.find((node) => node.x === nodeI.x && node.y === nodeI.y);\n            if (n1) {\n                // 既存の節点を使用する\n                newBeam.nodeI = n1.id;\n            } else {\n                // 新規追加\n                newNodes.push(nodeI);\n                newBeam.nodeI = nodeI.id;\n            }\n\n            const nodeJ = createNode(...edgeJ);\n            const n2 = nodes.find((node) => node.x === nodeJ.x && node.y === nodeJ.y);\n            if (n2) {\n                // 既存の節点を使用する\n                newBeam.nodeJ = n2.id;\n            } else {\n                // 新規追加\n                newNodes.push(nodeJ);\n                newBeam.nodeJ = nodeJ.id;\n            }\n\n            // 追加\n            onCreateNode(newNodes);\n            onCreateBeam(newBeam);\n        },\n        [beams.length, nodes, onCreateBeam, onCreateNode]\n    );\n\n    const makeTrapezoid = useCallback(\n        (start: number[], end: number[], attrs: BeamAttrs) => {\n            // 分布荷重の登録\n            const trapezoid = createTrapezoid(start, end, attrs.id, attrs.points);\n            const name = `Trapezoid_${trapezoids.length + 1}`;\n            trapezoid.name = name;\n            onCreateTrapezoid(trapezoid);\n        },\n        [onCreateTrapezoid, trapezoids.length]\n    );\n\n    const handlePointerUp = useCallback(\n        (_: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n\n            if (isDrawing.current) {\n                isDrawing.current = false;\n\n                if (points.length >= 4) {\n                    // 開始点\n                    const start = points.slice(0, 2);\n                    // 終了点\n                    const end = points.slice(-2);\n\n                    if (tool === 'pen') {\n                        // 梁要素の生成\n                        makeBeam(start, end);\n                    } else if (tool === 'trapezoid' && beamRef.current) {\n                        // 分布荷重の生成\n                        makeTrapezoid(start, end, beamRef.current);\n                    }\n\n                    setPoints([]);\n                    beamRef.current = undefined;\n                }\n            }\n        },\n        [disabled, makeBeam, makeTrapezoid, points, setPoints, tool]\n    );\n\n    return (\n        <DrawContext.Provider\n            value={{\n                points,\n                onPointerDown: handlePointerDown,\n                onPointerMove: handlePointerMove,\n                onPointerUp: handlePointerUp,\n            }}\n        >\n            {children}\n        </DrawContext.Provider>\n    );\n};\n\nexport default DrawProvider;\n","import { useContext, useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { CanvasContext } from '../provider/CanvasProvider';\nimport { DrawContext } from '../provider/DrawProvider';\n\nconst DrawLayer: React.VFC = () => {\n    const { tool } = useContext(CanvasContext);\n    const { points } = useContext(DrawContext);\n\n    const color = useMemo(() => {\n        switch (tool) {\n            case 'pen':\n                return 'blue';\n            case 'trapezoid':\n                return 'red';\n            default:\n                return 'black';\n        }\n    }, [tool]);\n\n    return (\n        <Layer>\n            <Line points={points} strokeWidth={3} stroke={color} />\n        </Layer>\n    );\n};\n\nexport default DrawLayer;\n","import { useContext, useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { CanvasContext } from '../provider/CanvasProvider';\n\ninterface LineProps {\n    id: string;\n    points: number[];\n    stroke: string;\n    strokeWidth: number;\n    dash: [number, number];\n    listening: boolean;\n}\n\nconst defaultLineProps: LineProps = {\n    id: '',\n    points: [],\n    stroke: '#c9e1ff',\n    strokeWidth: 1,\n    dash: [5, 3],\n    listening: false,\n};\n\nconst GridLayer: React.VFC = () => {\n    // キャンバスサイズ, グリッドの幅\n    const { size, gridSize } = useContext(CanvasContext);\n\n    const horizontalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let y = 0; y <= size.height; y += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Horizontal_${count}`,\n                points: [0, y, size.width, y],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    const verticalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let x = 0; x <= size.width; x += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Vertical_${count}`,\n                points: [x, 0, x, size.height],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    return (\n        <Layer listening={false}>\n            {/* horizontal */}\n            {horizontalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n            {/* vertical */}\n            {verticalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GridLayer;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { forwardRef, useEffect, useRef, useState } from 'react';\nimport { Line, Text } from 'react-konva';\nimport { Guide } from '.';\nimport { BeamProps, Point } from '../types';\nimport { Vector, verticalNormalizeVector } from '../util';\n\ninterface Props extends BeamProps {\n    selected?: boolean;\n    onClick: (event: KonvaEventObject<Event>) => void;\n}\n\nconst Beam: React.ForwardRefRenderFunction<Konva.Line, Props> = (\n    { id, name, nodeI, nodeJ, points, selected = false, onClick },\n    ref\n) => {\n    const [labelPosition, setLabelPosition] = useState<Point>([0, 0]);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const [labelAngle, setLabelAngle] = useState(0);\n    const [guidePoints, setGuidePoints] = useState<[Point, Point]>([\n        [0, 0],\n        [0, 0],\n    ]);\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    useEffect(() => {\n        if (selected) {\n            const [nodeI_x, nodeI_y, nodeJ_x, nodeJ_y] = points;\n            viRef.current.x = nodeI_x;\n            viRef.current.y = nodeI_y;\n            vjRef.current.x = nodeJ_x;\n            vjRef.current.y = nodeJ_y;\n\n            // 必ず左から右になるようにする\n            let vi = viRef.current;\n            let vj = vjRef.current;\n            if (vi.x > vj.x) {\n                [vi, vj] = [vj, vi];\n            }\n\n            // 梁要素の長さ\n            const distance = vi.distance(vj);\n            // 梁要素に対して垂直なベクトル\n            const dir = verticalNormalizeVector(vi, vj);\n            // ラベル位置\n            const label = vi.clone().add(dir.clone().multiplyScalar(16));\n            // ラベル方向\n            const angle = vj.clone().subtract(vi).angleDeg();\n            // 寸法線位置\n            const guideDir = dir.clone().multiplyScalar(75);\n            const guideI = vi.clone().add(guideDir);\n            const guideJ = vj.clone().add(guideDir);\n\n            setLabelWidth(distance);\n            setLabelPosition([label.x, label.y]);\n            setLabelAngle(angle);\n            setGuidePoints([\n                [guideI.x, guideI.y],\n                [guideJ.x, guideJ.y],\n            ]);\n        }\n    }, [points, selected]);\n\n    return (\n        <>\n            <Line\n                ref={ref}\n                type=\"beam\"\n                id={id}\n                name={name}\n                nodeI={nodeI}\n                nodeJ={nodeJ}\n                points={points}\n                stroke={selected ? 'blue' : 'black'}\n                strokeWidth={4}\n                onClick={onClick}\n                onTap={onClick}\n            />\n            {selected && (\n                <>\n                    {/* ラベル */}\n                    <Text\n                        x={labelPosition[0]}\n                        y={labelPosition[1]}\n                        rotation={labelAngle}\n                        text={name}\n                        fontSize={12}\n                        width={labelWidth}\n                        fill=\"blue\"\n                        align=\"center\"\n                        wrap=\"none\"\n                        ellipsis\n                        listening={false}\n                    />\n                    {/* 寸法線 */}\n                    <Guide start={guidePoints[0]} end={guidePoints[1]} />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default forwardRef(Beam);\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { Arrow, Group, Text } from 'react-konva';\nimport { ForceProps, Point } from '../types';\nimport { lerp, Vector, verticalNormalizeVector, vX } from '../util';\n\ninterface Props extends ForceProps {\n    ratio: number;\n    visible?: boolean;\n    selected?: boolean;\n    onClick: (event: KonvaEventObject<Event>) => void;\n    onDblClick: (event: KonvaEventObject<Event>) => void;\n}\n\nconst BaseLength = 30;\n\nconst Force: React.VFC<Props> = ({\n    points: beamPoints,\n    id,\n    distanceI,\n    force,\n    ratio,\n    visible = false,\n    selected = false,\n    onClick,\n    onDblClick,\n}) => {\n    const [points, setPoints] = useState<number[]>([]);\n    const [distance, setDistance] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    const [labelPosition, setLabelPosition] = useState<Point>([0, 0]);\n\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    useEffect(() => {\n        const [nodeIx, nodeIy, nodeJx, nodeJy] = beamPoints;\n\n        // i端、j端\n        viRef.current.x = nodeIx;\n        viRef.current.y = nodeIy;\n        vjRef.current.x = nodeJx;\n        vjRef.current.y = nodeJy;\n\n        // 矢印の先端\n        const tail = lerp(viRef.current, vjRef.current, distanceI);\n        // 梁に直交する単位ベクトル\n        const vertical = verticalNormalizeVector(viRef.current, vjRef.current);\n        // 矢印の開始点\n        const arrowLength = isNaN(ratio) ? BaseLength : BaseLength * ratio;\n        const head = tail.clone().add(vertical.multiplyScalar(arrowLength));\n\n        setPoints([head.x, head.y, tail.x, tail.y]);\n\n        // ラベル描画用\n        setDistance(Math.max(arrowLength, 140));\n        const angle = vertical.clone().angleDeg();\n        setRotation(angle);\n        const dir = viRef.current.clone().subtract(vjRef.current).normalize();\n        if (vX.dot(dir) < 0) {\n            dir.invert();\n        }\n        const p = tail.clone().add(dir.multiplyScalar(6));\n        setLabelPosition([p.x, p.y]);\n    }, [beamPoints, distanceI, ratio]);\n\n    const color = useMemo(() => {\n        return selected ? 'red' : 'orange';\n    }, [selected]);\n\n    return (\n        <Group\n            type=\"force\"\n            id={id}\n            visible={visible}\n            onClick={onClick}\n            onTap={onClick}\n            onDblClick={onDblClick}\n            onDblTap={onDblClick}\n        >\n            <Arrow\n                points={points}\n                pointerLength={6}\n                pointerWidth={6}\n                fill={color}\n                stroke={color}\n                strokeWidth={2}\n            />\n            {selected && (\n                <Text\n                    x={labelPosition[0]}\n                    y={labelPosition[1]}\n                    offsetX={-6}\n                    text={`${force}kN`}\n                    fontSize={12}\n                    width={distance}\n                    rotation={rotation}\n                    fill={color}\n                    wrap=\"none\"\n                    ellipsis\n                />\n            )}\n        </Group>\n    );\n};\n\nexport default Force;\n","import { useEffect, useRef, useState } from 'react';\nimport { Arrow, Group, Line, Text } from 'react-konva';\nimport { Point } from '../types';\nimport { Vector } from '../util';\n\ninterface Props {\n    start: Point;\n    end: Point;\n}\n\ninterface GuideProps {\n    fill: string;\n    stroke: string;\n    strokeWidth: number;\n    listening: boolean;\n}\n\ninterface GuideArrowProps extends GuideProps {\n    pointerLength: number;\n    pointerWidth: number;\n    pointerAtBeginning: boolean;\n}\n\nconst defaultGuideProps: GuideProps = {\n    fill: 'silver',\n    stroke: 'silver',\n    strokeWidth: 1,\n    listening: false,\n};\n\nconst defaultGuideArrowProps: GuideArrowProps = {\n    pointerLength: 6,\n    pointerWidth: 6,\n    pointerAtBeginning: true,\n    ...defaultGuideProps,\n};\n\nconst GuideLine: React.VFC<Props> = ({ start, end }) => {\n    const v1Ref = useRef<Vector>(new Vector(0, 0));\n    const v2Ref = useRef<Vector>(new Vector(0, 0));\n\n    const [distance, setDistance] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    const [basis, setBasis] = useState<Point>([0, 0]);\n\n    useEffect(() => {\n        v1Ref.current.x = start[0];\n        v1Ref.current.y = start[1];\n        v2Ref.current.x = end[0];\n        v2Ref.current.y = end[1];\n\n        const dist = v1Ref.current.distance(v2Ref.current);\n        const dir = v2Ref.current.clone().subtract(v1Ref.current).normalize();\n        const angle = dir.angleDeg();\n\n        setDistance(Math.round(dist));\n        setRotation(angle === 90 ? -90 : angle);\n        setBasis(angle === 90 ? end : start);\n    }, [end, start]);\n\n    return (\n        <Group x={basis[0]} y={basis[1]} rotation={rotation}>\n            {/* 左端 */}\n            <Line points={[0, 0, 0, 10]} {...defaultGuideProps} />\n            {/* 矢印部分 */}\n            <Arrow points={[0, 5, distance, 5]} {...defaultGuideArrowProps} />\n            {/* 右端 */}\n            <Line points={[distance, 0, distance, 10]} {...defaultGuideProps} />\n            {/* ラベル */}\n            <Text\n                x={0}\n                y={-8}\n                text={`${distance}px`}\n                fontSize={12}\n                fill=\"silver\"\n                width={distance}\n                align=\"center\"\n                listening={false}\n                wrap=\"none\"\n                ellipsis\n            />\n        </Group>\n    );\n};\n\nexport default GuideLine;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { forwardRef, useCallback, useMemo } from 'react';\nimport { Circle, Image } from 'react-konva';\nimport useImage from 'use-image';\nimport { Node as NodeProps, NodePinType } from '../../../types/shape';\n\ninterface Props extends NodeProps {\n    draggable?: boolean;\n    isDragging?: boolean;\n    onDblClick: (event: KonvaEventObject<Event>) => void;\n    onDragStart: (event: KonvaEventObject<Event>) => void;\n    onDragMove: (event: KonvaEventObject<Event>) => void;\n    onDragEnd: (event: KonvaEventObject<Event>) => void;\n}\n\nconst Pins: Record<NodePinType, string> = {\n    free: '/assets/images/pins/pin_1.svg', // とりあえずダミーで指定\n    pin: '/assets/images/pins/pin_1.svg',\n    pinX: '/assets/images/pins/pin_2.svg',\n    pinZ: '/assets/images/pins/pin_2.svg',\n    fixX: '/assets/images/pins/pin_3.svg',\n    fix: '/assets/images/pins/pin_4.svg',\n};\n\nconst Node: React.ForwardRefRenderFunction<Konva.Circle, Props> = (\n    {\n        id,\n        x,\n        y,\n        pin,\n        draggable = false,\n        isDragging = false,\n        onDblClick,\n        onDragStart,\n        onDragMove,\n        onDragEnd,\n    },\n    ref\n) => {\n    const imageUrl = useMemo(() => {\n        return `${process.env.PUBLIC_URL}${Pins[pin ?? 'free']}`;\n    }, [pin]);\n    const [image] = useImage(imageUrl);\n\n    const handleClick = useCallback((event: KonvaEventObject<Event>) => {\n        // ダブルクリック時にはクリックイベントも発生する\n        // 何もバインドしていないと Stage のクリックイベント（選択解除）が発生するので\n        // イベントの伝播を止めるだけのイベントハンドラを設定する\n        event.cancelBubble = true;\n    }, []);\n\n    return (\n        <>\n            <Circle\n                ref={ref}\n                type=\"node\"\n                id={id}\n                x={x}\n                y={y}\n                pin={pin}\n                fill={isDragging ? 'blue' : 'black'}\n                radius={4}\n                draggable={draggable}\n                onDragStart={onDragStart}\n                onDragMove={onDragMove}\n                onDragEnd={onDragEnd}\n                onClick={handleClick}\n                onTap={handleClick}\n                onDblClick={onDblClick}\n                onDblTap={onDblClick}\n                _useStrictMode\n            />\n            {!isDragging && pin && pin !== 'free' && (\n                <Image\n                    x={x}\n                    y={y}\n                    offsetX={12}\n                    offsetY={-4}\n                    rotation={pin === 'pinZ' ? -90 : 0}\n                    image={image}\n                    width={24}\n                    height={24}\n                    listening={false}\n                />\n            )}\n        </>\n    );\n};\n\nexport default forwardRef(Node);\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { Arrow, Group, Line, Text } from 'react-konva';\nimport { Point, TrapezoidProps } from '../types';\nimport { getInsidePoints, intercectPoint, Vector, vX } from '../util';\nimport Guide from './Guide';\n\ninterface Props extends TrapezoidProps {\n    visible?: boolean;\n    selected?: boolean;\n    onClick: (event: KonvaEventObject<Event>) => void;\n    onDblClick: (event: KonvaEventObject<Event>) => void;\n}\n\ntype LinePoints = [number, number, number, number];\n\ninterface LineProps {\n    stroke: string;\n    strokeWidth: number;\n}\n\ninterface ArrowProps extends LineProps {\n    pointerLength: number;\n    pointerWidth: number;\n    fill: string;\n}\n\nconst defaultLineProps: LineProps = {\n    stroke: 'pink',\n    strokeWidth: 2,\n};\n\nconst defaultArrowProps: ArrowProps = {\n    pointerLength: 6,\n    pointerWidth: 6,\n    fill: 'pink',\n    ...defaultLineProps,\n};\n\ninterface LabelProps {\n    offsetX: number;\n    offsetY: number;\n    fontSize: number;\n    wrap: string;\n    ellipsis: boolean;\n}\nconst defaultLabelProps: LabelProps = {\n    offsetX: -6,\n    offsetY: 14,\n    fontSize: 12,\n    wrap: 'none',\n    ellipsis: true,\n};\n\ninterface LabelAttrs {\n    x: number;\n    y: number;\n    text: string;\n    width: number;\n    rotation: number;\n}\n\nconst Trapezoid: React.VFC<Props> = ({\n    points: beamPoints,\n    id,\n    beam,\n    forceI,\n    forceJ,\n    distanceI,\n    distanceJ,\n    angle = 90,\n    isGlobal = false,\n    visible = false,\n    selected = false,\n    onClick,\n    onDblClick,\n}) => {\n    // 分布荷重の矢印\n    const [arrows, setArrows] = useState<LinePoints[]>([]);\n    // 分布荷重の上端\n    const [line, setLine] = useState<LinePoints>([0, 0, 0, 0]);\n    // ラベル\n    const [labelI, setLabelI] = useState<LabelAttrs>();\n    const [labelJ, setLabelJ] = useState<LabelAttrs>();\n    // 寸法線\n    const [guidePoints, setGuidePoints] = useState<[Point, Point]>([\n        [0, 0],\n        [0, 0],\n    ]);\n\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    useEffect(() => {\n        const vI = viRef.current;\n        const vJ = vjRef.current;\n\n        // 梁要素\n        const [ix, iy, jx, jy] = beamPoints;\n        vI.x = ix;\n        vI.y = iy;\n        vJ.x = jx;\n        vJ.y = jy;\n\n        // 梁要素の方向\n        const vd = vJ.clone().subtract(vI).normalize();\n        // 分布荷重の方向\n        let dir: Vector;\n        if (isGlobal) {\n            dir = vX.clone().rotateDeg(angle * -1);\n        } else {\n            dir = vd\n                .clone()\n                .rotateDeg(angle * -1)\n                .normalize();\n        }\n        // 梁要素の長さ\n        const beamLength = vI.distance(vJ);\n        // 分布荷重の下端の位置\n        const bi = vI.clone().add(vd.clone().multiplyScalar(beamLength * distanceI));\n        const bj = vJ.clone().add(\n            vd\n                .clone()\n                .invert()\n                .multiplyScalar(beamLength * distanceJ)\n        );\n        // 分布荷重の上端の位置\n        const pi = bi.clone().add(dir.clone().multiplyScalar(forceI * 10));\n        const pj = bj.clone().add(dir.clone().multiplyScalar(forceJ * 10));\n\n        // 下端を等間隔に分割する点を取得\n        const points = getInsidePoints(bi, bj, vd);\n        // 上端の傾き\n        const slope = pj.x - pi.x !== 0 ? (pj.y - pi.y) / (pj.x - pi.x) : NaN;\n        // 上端の切片\n        const intercept = isNaN(slope) ? NaN : pi.y - slope * pi.x;\n\n        // 内側の矢印\n        const insideArrows: LinePoints[] = [];\n        points.forEach((pd) => {\n            // pd から分布荷重の方向に線を伸ばして上端と交差する点\n            const pu = intercectPoint([pi, pj, slope, intercept], pd, dir);\n            if (pu) {\n                const arrow: LinePoints = [pu[0], pu[1], pd.x, pd.y];\n                insideArrows.push(arrow);\n            }\n        });\n\n        const labelAngle = dir.angleDeg();\n        // ラベル (i端)\n        setLabelI({\n            x: bi.x,\n            y: bi.y,\n            text: `${forceI}kN/m`,\n            width: bi.distance(pi),\n            rotation: labelAngle,\n        });\n        // ラベル (j端)\n        setLabelJ({\n            x: bj.x,\n            y: bj.y,\n            text: `${forceJ}kN/m`,\n            width: bj.distance(pj),\n            rotation: labelAngle,\n        });\n\n        // 寸法線の位置\n        const force = Math.max(forceI, forceJ) * 10;\n        const guidePosition = dir.clone().multiplyScalar(force + 50);\n        const gi = bi.clone().add(guidePosition);\n        const gj = bj.clone().add(guidePosition);\n        setGuidePoints([\n            [gi.x, gi.y],\n            [gj.x, gj.y],\n        ]);\n\n        // 上端\n        setLine([pi.x, pi.y, pj.x, pj.y]);\n        // 矢印\n        setArrows([\n            // 左端\n            [pi.x, pi.y, bi.x, bi.y],\n            // 内側の矢印\n            ...insideArrows,\n            // 右端\n            [pj.x, pj.y, bj.x, bj.y],\n        ]);\n    }, [angle, beamPoints, distanceI, distanceJ, forceI, forceJ, isGlobal]);\n\n    const color = useMemo(() => {\n        return selected ? 'red' : 'pink';\n    }, [selected]);\n\n    return (\n        <Group\n            type=\"trapezoid\"\n            id={id}\n            beam={beam}\n            visible={visible}\n            onClick={onClick}\n            onTap={onClick}\n            onDblClick={onDblClick}\n            onDblTap={onDblClick}\n        >\n            {/* 上端 */}\n            <Line points={line} {...defaultLineProps} stroke={color} />\n            {/* 矢印 */}\n            {arrows.map((arrow, index) => (\n                <Arrow\n                    key={`arrow_${index}`}\n                    points={arrow}\n                    {...defaultArrowProps}\n                    stroke={color}\n                    fill={color}\n                />\n            ))}\n            {/* ラベルと寸法線 */}\n            {selected && (\n                <>\n                    {/* I端側ラベル */}\n                    <Text {...defaultLabelProps} {...labelI} fill={color} />\n                    {/* J端側ラベル */}\n                    <Text {...defaultLabelProps} {...labelJ} fill={color} />\n                    {/* 寸法線 */}\n                    <Guide start={guidePoints[0]} end={guidePoints[1]} />\n                </>\n            )}\n        </Group>\n    );\n};\n\nexport default Trapezoid;\n","import { useContext, useMemo } from 'react';\nimport { Layer } from 'react-konva';\nimport { CanvasContext } from '../provider/CanvasProvider';\nimport { Guide as GuideLine } from '../shape';\n\ninterface GuideLineProps {\n    key: string;\n    start: [number, number];\n    end: [number, number];\n}\n\ninterface GuidePoint {\n    minX: number;\n    maxX: number;\n    guidesX: GuideLineProps[];\n    minY: number;\n    maxY: number;\n    guidesY: GuideLineProps[];\n}\n\nconst GuideInterval = 25;\n\nconst GuideLayer: React.VFC = () => {\n    const { nodes } = useContext(CanvasContext);\n\n    const { minX, maxX, guidesX, minY, maxY, guidesY }: GuidePoint = useMemo(() => {\n        const guide: GuidePoint = {\n            maxX: Number.MIN_SAFE_INTEGER,\n            minX: Number.MAX_SAFE_INTEGER,\n            guidesX: [],\n            maxY: Number.MIN_SAFE_INTEGER,\n            minY: Number.MAX_SAFE_INTEGER,\n            guidesY: [],\n        };\n\n        const pointsX = new Set<number>();\n        const pointsY = new Set<number>();\n        nodes.forEach(({ x, y }) => {\n            if (guide.maxX < x) {\n                guide.maxX = x;\n            }\n            if (guide.minX > x) {\n                guide.minX = x;\n            }\n            if (!pointsX.has(x)) {\n                pointsX.add(x);\n            }\n            if (guide.maxY < y) {\n                guide.maxY = y;\n            }\n            if (guide.minY > y) {\n                guide.minY = y;\n            }\n            if (!pointsY.has(y)) {\n                pointsY.add(y);\n            }\n        });\n\n        // ガイドの生成\n        if (pointsX.size > 1) {\n            const array = Array.from(pointsX).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideX_${i}`,\n                    start: [prev, guide.maxY + GuideInterval * 4],\n                    end: [current, guide.maxY + GuideInterval * 4],\n                };\n                prev = current;\n                guide.guidesX.push(props);\n            }\n        }\n        if (pointsY.size > 1) {\n            const array = Array.from(pointsY).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            const localX = Math.max(guide.minX - GuideInterval * 4, GuideInterval * 2);\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideY_${i}`,\n                    start: [localX, prev],\n                    end: [localX, current],\n                };\n                prev = current;\n                guide.guidesY.push(props);\n            }\n        }\n\n        return guide;\n    }, [nodes]);\n\n    const GlobalVerticalGuidePositionX = useMemo(() => {\n        if (minX !== Number.MAX_SAFE_INTEGER) {\n            return Math.max(GuideInterval, minX - GuideInterval * 5);\n        }\n        return 0;\n    }, [minX]);\n\n    const GlobalHorizontalGuidePositionY = useMemo(() => {\n        if (maxY !== Number.MIN_SAFE_INTEGER) {\n            return maxY + GuideInterval * 5;\n        }\n        return 0;\n    }, [maxY]);\n\n    return (\n        <Layer listening={false}>\n            {/* Horizontal */}\n            {minX !== Number.MAX_SAFE_INTEGER && maxX !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[minX, GlobalHorizontalGuidePositionY]}\n                    end={[maxX, GlobalHorizontalGuidePositionY]}\n                />\n            )}\n            {guidesX.map((props) => (\n                <GuideLine {...props} />\n            ))}\n            {/* Vertical */}\n            {minY !== Number.MAX_SAFE_INTEGER && maxY !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[GlobalVerticalGuidePositionX, minY]}\n                    end={[GlobalVerticalGuidePositionX, maxY]}\n                />\n            )}\n            {guidesY.map((props) => (\n                <GuideLine {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GuideLayer;\n","import { createContext, Dispatch, ReactNode, SetStateAction, useCallback, useState } from 'react';\nimport { PopupParams, PopupPosition, PopupType } from '../popup/types';\n\ninterface IPopupContext {\n    popupType?: PopupType;\n    setPopupType: Dispatch<SetStateAction<PopupType | undefined>>;\n    popupPosition: PopupPosition;\n    setPopupPosition: Dispatch<SetStateAction<PopupPosition>>;\n    open: (popup: PopupType, position: PopupPosition, popupParams?: PopupParams) => void;\n    close: VoidFunction;\n    popupParams?: PopupParams;\n}\n\ninterface Props {\n    children: ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const PopupContext = createContext<IPopupContext>(undefined!);\n\nconst PopupProvider: React.VFC<Props> = ({ children }) => {\n    // ポップアップの種類\n    const [popupType, setPopupType] = useState<PopupType>();\n    // ポップアップの位置\n    const [popupPosition, setPopupPosition] = useState<PopupPosition>({ top: 0, left: 0 });\n    // パラメータ\n    const [popupParams, setPopupParams] = useState<PopupParams>({});\n\n    const open = useCallback(\n        (type: PopupType, position: PopupPosition, params?: PopupParams) => {\n            setPopupType(type);\n            setPopupPosition(position);\n            if (params) {\n                setPopupParams(params);\n            }\n        },\n        [setPopupPosition, setPopupType]\n    );\n\n    const close = useCallback(() => {\n        setPopupType(undefined);\n        setPopupPosition({ top: 0, left: 0 });\n        setPopupParams({});\n    }, [setPopupPosition, setPopupType]);\n\n    return (\n        <PopupContext.Provider\n            value={{\n                popupType,\n                setPopupType,\n                popupPosition,\n                setPopupPosition,\n                open,\n                close,\n                popupParams,\n            }}\n        >\n            {children}\n        </PopupContext.Provider>\n    );\n};\n\nexport default PopupProvider;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Layer } from 'react-konva';\nimport { isLinePoints } from '../../../types/common';\nimport { PopupParams } from '../popup/types';\nimport { CanvasContext } from '../provider/CanvasProvider';\nimport { PopupContext } from '../provider/PopupProvider';\nimport { Beam, Force, Node, Trapezoid } from '../shape';\nimport { BeamPoints } from '../types';\nimport { createForceParams, snap, Vector } from '../util';\n\nexport const ShapeLayer: React.VFC = () => {\n    const {\n        tool,\n        readonly,\n        nodes,\n        nodeMap,\n        beams,\n        beamMap,\n        forces,\n        forceAverage,\n        trapezoids,\n        snapSize,\n        onChangeNode,\n        onCreateForce,\n        onDeleteBeam,\n        onDeleteForce,\n        onDeleteTrapezoid,\n        select,\n        isSelected,\n    } = useContext(CanvasContext);\n    const { open } = useContext(PopupContext);\n\n    const nodeRefs = useRef<Array<Konva.Circle | null>>([]);\n    const beamRefs = useRef<Array<Konva.Line | null>>([]);\n    const layerRef = useRef<Konva.Layer>(null);\n\n    // nodes, beams の数が変わったら refs の配列を詰める\n    useEffect(() => {\n        nodeRefs.current = nodeRefs.current.slice(0, nodes.length);\n    }, [nodes.length]);\n    useEffect(() => {\n        beamRefs.current = beamRefs.current.slice(0, beams.length);\n    }, [beams.length]);\n\n    const [draggingNode, setDraggingNode] = useState<string>();\n\n    const isNodeDraggable = useMemo(() => {\n        return !readonly && tool === 'select';\n    }, [readonly, tool]);\n\n    // ドラッグ位置\n    const dragPointRef = useRef<Vector>(new Vector(0, 0));\n    // ドラッグ中の描画タイマー\n    const timerRef = useRef<NodeJS.Timer>();\n\n    /**\n     * beam の座標を返す\n     */\n    const getBeamPoints = useCallback(\n        (nodeI: string, nodeJ: string): BeamPoints => {\n            const ni = nodeMap[nodeI];\n            const nj = nodeMap[nodeJ];\n            return [ni.x, ni.y, nj.x, nj.y];\n        },\n        [nodeMap]\n    );\n    const getBeamPointsByBeamId = useCallback(\n        (beamId) => {\n            const beam = beamMap[beamId];\n            return getBeamPoints(beam.nodeI, beam.nodeJ);\n        },\n        [beamMap, getBeamPoints]\n    );\n\n    /**\n     * 梁要素のクリック\n     */\n    const handleClickBeam = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            let cancelBubble = false;\n            if (tool === 'select') {\n                // 梁要素の選択\n                select({ type: 'beams', id: event.target.id() });\n                cancelBubble = true;\n            } else if (tool === 'delete') {\n                // 梁要素の削除\n                onDeleteBeam(event.target.id());\n                cancelBubble = true;\n            } else if (tool === 'force') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                // 梁要素の位置\n                const points = event.target.attrs.points;\n                if (point && isLinePoints(points)) {\n                    // 集中荷重の追加\n                    const params = createForceParams(\n                        event.target.id(),\n                        new Vector(points[0], points[1]),\n                        new Vector(points[2], points[3]),\n                        new Vector(point.x, point.y)\n                    );\n                    const name = `Force_${forces.length}`;\n                    onCreateForce({ ...params, name });\n                    cancelBubble = true;\n                }\n            }\n\n            event.cancelBubble = cancelBubble;\n        },\n        [forces.length, onCreateForce, onDeleteBeam, select, tool]\n    );\n\n    /**\n     * 節点のダブルクリック（ピン選択ダイアログの表示）\n     */\n    const handleDblClickNode = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                // 対象 node\n                const node = nodes.find(({ id }) => id === event.target.id());\n                if (point && node) {\n                    // Node を Record<string, unknown> にキャストするために\n                    // 一旦 unknown にキャストする\n                    open('nodes', { top: point.y, left: point.x }, node as unknown as PopupParams);\n                }\n            }\n        },\n        [nodes, open, tool]\n    );\n\n    /**\n     * node ドラッグ時の描画処理\n     */\n    const draw = useCallback(() => {\n        if (draggingNode) {\n            const { x, y } = dragPointRef.current;\n            // ドラッグ中の node に紐づく beam を更新する\n            beamRefs.current.forEach((beam) => {\n                if (beam) {\n                    const { nodeI, nodeJ } = beam.attrs;\n                    const points = beam.points();\n                    if (nodeI === draggingNode) {\n                        beam.points([x, y, points[2], points[3]]);\n                    }\n                    if (nodeJ === draggingNode) {\n                        beam.points([points[0], points[1], x, y]);\n                    }\n                }\n            });\n        }\n    }, [draggingNode]);\n\n    /**\n     * 節点のドラッグ開始\n     */\n    const handleDragStartNode = useCallback((event: KonvaEventObject<Event>) => {\n        // ポインタ位置\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            // ドラッグ中の節点ID\n            setDraggingNode(event.target.id());\n            // ドラッグ開始位置を保持\n            dragPointRef.current.x = point.x;\n            dragPointRef.current.y = point.y;\n        }\n    }, []);\n\n    useEffect(() => {\n        if (typeof draggingNode !== 'undefined') {\n            if (timerRef.current) {\n                // もし実行中のタイマーがあったらキャンセル\n                clearInterval(timerRef.current);\n            }\n\n            timerRef.current = setInterval(draw, 100);\n        }\n    }, [draggingNode, draw]);\n\n    /**\n     * ドラッグによる node 移動\n     */\n    const handleDragMoveNode = useCallback((event: KonvaEventObject<Event>) => {\n        // ポインタ位置\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            // ドラッグ開始位置を保持\n            dragPointRef.current.x = point.x;\n            dragPointRef.current.y = point.y;\n        }\n    }, []);\n\n    /**\n     * node のドラッグ終了\n     */\n    const handleDragEndNode = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            // ポインタ位置\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                if (timerRef.current) {\n                    // 描画終了\n                    clearInterval(timerRef.current);\n                }\n                // ドラッグ開始位置をリセット\n                dragPointRef.current.x = 0;\n                dragPointRef.current.y = 0;\n                // ドラッグ対象 node をリセット\n                setDraggingNode(undefined);\n\n                // 更新処理\n                const [px, py] = snap([point.x, point.y], snapSize);\n                onChangeNode({\n                    id: event.target.id(),\n                    x: px,\n                    y: py,\n                    pin: event.target.attrs.pin,\n                });\n            }\n        },\n        [onChangeNode, snapSize]\n    );\n\n    /**\n     * force のクリック\n     */\n    const handleClickForce = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            const forceId = event.currentTarget.id();\n            let cancelBubble = false;\n\n            if (tool === 'select') {\n                select({ type: 'forces', id: forceId });\n                cancelBubble = true;\n            } else if (tool === 'delete') {\n                onDeleteForce(forceId);\n                cancelBubble = true;\n            }\n\n            event.cancelBubble = cancelBubble;\n        },\n        [onDeleteForce, select, tool]\n    );\n\n    /**\n     * 集中荷重のダブルクリック（荷重値の入力ダイアログを表示）\n     */\n    const handleDblClickForce = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                // 対象 force\n                const force = forces.find(({ id }) => id === event.currentTarget.id());\n                if (point && force) {\n                    open(\n                        'forces',\n                        { top: point.y, left: point.x },\n                        force as unknown as PopupParams\n                    );\n                }\n            }\n        },\n        [forces, open, tool]\n    );\n\n    /**\n     * 分布荷重のクリック\n     */\n    const handleClickTrapezoid = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            const id = event.currentTarget.id();\n            let cancelBubble = false;\n\n            if (tool === 'select') {\n                select({ type: 'trapezoids', id });\n                cancelBubble = true;\n            } else if (tool === 'delete') {\n                onDeleteTrapezoid(id);\n                cancelBubble = true;\n            }\n\n            event.cancelBubble = cancelBubble;\n        },\n        [onDeleteTrapezoid, select, tool]\n    );\n\n    /**\n     * 分布荷重のダブルクリック（編集ダイアログの表示）\n     */\n    const handleDblClickTrapezoid = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                // 対象要素\n                const trapezoid = trapezoids.find(({ id }) => id === event.currentTarget.id());\n                if (point && trapezoid) {\n                    open(\n                        'trapezoids',\n                        { top: point.y, left: point.x },\n                        trapezoid as unknown as PopupParams\n                    );\n                }\n            }\n        },\n        [open, tool, trapezoids]\n    );\n\n    return (\n        <Layer ref={layerRef}>\n            {beams.map((beam, i) => (\n                <Beam\n                    key={beam.id}\n                    ref={(el) => (beamRefs.current[i] = el)}\n                    {...beam}\n                    points={getBeamPoints(beam.nodeI, beam.nodeJ)}\n                    selected={isSelected({ type: 'beams', id: beam.id })}\n                    onClick={handleClickBeam}\n                />\n            ))}\n            {nodes.map((node, i) => (\n                <Node\n                    key={node.id}\n                    ref={(el) => (nodeRefs.current[i] = el)}\n                    {...node}\n                    draggable={isNodeDraggable}\n                    isDragging={draggingNode === node.id}\n                    onDblClick={handleDblClickNode}\n                    onDragStart={handleDragStartNode}\n                    onDragMove={handleDragMoveNode}\n                    onDragEnd={handleDragEndNode}\n                />\n            ))}\n            {forces.map((force) => (\n                <Force\n                    key={force.id}\n                    {...force}\n                    ratio={force.force / forceAverage}\n                    points={getBeamPointsByBeamId(force.beam)}\n                    visible={!Boolean(draggingNode)}\n                    selected={isSelected({ type: 'forces', id: force.id })}\n                    onClick={handleClickForce}\n                    onDblClick={handleDblClickForce}\n                />\n            ))}\n            {trapezoids.map((trapezoid) => (\n                <Trapezoid\n                    key={trapezoid.id}\n                    {...trapezoid}\n                    points={getBeamPointsByBeamId(trapezoid.beam)}\n                    visible={!Boolean(draggingNode)}\n                    selected={isSelected({ type: 'trapezoids', id: trapezoid.id })}\n                    onClick={handleClickTrapezoid}\n                    onDblClick={handleDblClickTrapezoid}\n                />\n            ))}\n        </Layer>\n    );\n};\n\nexport default ShapeLayer;\n","import { Button, InputAdornment, Paper, Stack, TextField } from '@mui/material';\nimport { ChangeEvent, FormEvent, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Force, isForce } from '../../../types/shape';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (force: Force) => void;\n}\n\ninterface ForceEditorProps extends Omit<Props, 'values'> {\n    force: Force;\n}\n\nconst ForceEditor: React.VFC<ForceEditorProps> = ({ force, onChange, onClose }) => {\n    const [value, setValue] = useState('');\n    const [error, setError] = useState<string>();\n\n    const handleSubmit = useCallback(\n        (event: FormEvent<HTMLFormElement>) => {\n            event.preventDefault();\n\n            if (event.currentTarget.checkValidity() && typeof error === 'undefined') {\n                const num = parseFloat(value);\n                if (!isNaN(num)) {\n                    // 更新\n                    onChange({\n                        ...force,\n                        force: num,\n                    });\n                    // ポップアップ閉じる\n                    onClose();\n                }\n            }\n        },\n        [error, onChange, onClose, value, force]\n    );\n\n    const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.currentTarget;\n        let errorMessage: string | undefined;\n        setValue(value);\n\n        // 必須\n        if (value.length === 0) {\n            errorMessage = '数値を入力してください';\n        }\n        // 数値？\n        const num = parseFloat(value);\n        if (isNaN(num)) {\n            errorMessage = '数値を入力してください';\n        }\n        if (0 > num || num > Number.MAX_SAFE_INTEGER) {\n            errorMessage = '0 より大きい値を入力してください';\n        }\n\n        setError(errorMessage);\n    }, []);\n\n    useEffect(() => {\n        setValue(`${force.force}`);\n        setError(undefined);\n    }, [force]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"集中荷重\"\n                    value={value}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN</InputAdornment>,\n                    }}\n                    error={Boolean(error)}\n                    helperText={error}\n                />\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedForceEditor: React.VFC<Props> = ({ values, ...props }) => {\n    const force = useMemo(() => {\n        if (isForce(values)) {\n            return values;\n        }\n        // 空の force を渡す\n        return {\n            id: '',\n            name: '',\n            beam: '',\n            force: 0,\n            distanceI: 0,\n        };\n    }, [values]);\n\n    return <ForceEditor {...props} force={force} />;\n};\n\nexport default ConnectedForceEditor;\n","var _path, _circle, _circle2, _line;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80 0 L30 80 L130 80 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 45,\n    cy: 115,\n    r: 20\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 115,\n    cy: 115,\n    r: 20\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 30,\n    y1: 150,\n    x2: 130,\n    y2: 150,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin2);\nexport default __webpack_public_path__ + \"static/media/pin_2.2b2bb714.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _circle, _circle2, _line;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin3(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    style: {\n      width: 64\n    },\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30 3 L30 80 L130 80 L130 3 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 45,\n    cy: 115,\n    r: 20\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 115,\n    cy: 115,\n    r: 20\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 30,\n    y1: 150,\n    x2: 130,\n    y2: 150,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin3);\nexport default __webpack_public_path__ + \"static/media/pin_3.d7b6571b.svg\";\nexport { ForwardRef as ReactComponent };","var _line, _line2, _line3, _line4, _line5;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin4(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    style: {\n      width: 64\n    },\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 0,\n    y1: 3,\n    x2: 160,\n    y2: 3,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 20,\n    y1: 0,\n    x2: 0,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line3 || (_line3 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 60,\n    y1: 0,\n    x2: 40,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line4 || (_line4 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 100,\n    y1: 0,\n    x2: 80,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line5 || (_line5 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 140,\n    y1: 0,\n    x2: 120,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin4);\nexport default __webpack_public_path__ + \"static/media/pin_4.4442f3d6.svg\";\nexport { ForwardRef as ReactComponent };","import CircleOutlinedIcon from '@mui/icons-material/CircleOutlined';\nimport {\n    Button,\n    Paper,\n    Stack,\n    SvgIcon,\n    ToggleButton,\n    ToggleButtonGroup,\n    ToggleButtonProps,\n    Typography,\n} from '@mui/material';\nimport {\n    FormEvent,\n    MouseEvent,\n    ReactElement,\n    useCallback,\n    useEffect,\n    useMemo,\n    useState,\n} from 'react';\nimport { isNode, isNodePinType, Node, NodePinType } from '../../../types/shape';\nimport { ReactComponent as PinIcon1 } from './pins/pin_1.svg';\nimport { ReactComponent as PinIcon2 } from './pins/pin_2.svg';\nimport { ReactComponent as PinIcon3 } from './pins/pin_3.svg';\nimport { ReactComponent as PinIcon4 } from './pins/pin_4.svg';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (node: Node) => void;\n}\n\ninterface PinSelectorProps extends Omit<Props, 'values'> {\n    node: Node;\n}\n\ninterface PinButtonProps {\n    type: NodePinType;\n    icon: ReactElement;\n    label: string;\n}\n\nconst PinButtons: Readonly<Record<NodePinType, PinButtonProps>> = {\n    free: {\n        type: 'free',\n        icon: <CircleOutlinedIcon />,\n        label: '完全フリー',\n    },\n    pin: {\n        type: 'pin',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon1 />\n            </SvgIcon>\n        ),\n        label: '完全ピン',\n    },\n    pinX: {\n        type: 'pinX',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon2 />\n            </SvgIcon>\n        ),\n        label: 'ピンXローラー',\n    },\n    pinZ: {\n        type: 'pinZ',\n        icon: (\n            <SvgIcon sx={{ width: 24, transform: 'rotate(-90deg)' }} viewBox=\"0 0 160 160\">\n                <PinIcon2 />\n            </SvgIcon>\n        ),\n        label: 'ピンZローラー',\n    },\n    fixX: {\n        type: 'fixX',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon3 />\n            </SvgIcon>\n        ),\n        label: '固定Xローラー',\n    },\n    fix: {\n        type: 'fix',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon4 />\n            </SvgIcon>\n        ),\n        label: '完全固定',\n    },\n};\n\nconst defaultButtonProps: Partial<ToggleButtonProps> = {\n    sx: { justifyContent: 'flex-start', alignItems: 'center' },\n};\n\nconst PinSelector: React.VFC<PinSelectorProps> = ({ node, onChange, onClose }) => {\n    const [pin, setPin] = useState<NodePinType>();\n\n    const handleSubmit = useCallback(\n        (event: FormEvent) => {\n            event.preventDefault();\n\n            const values: Node = {\n                ...node,\n                pin,\n            };\n            onChange(values);\n            onClose();\n        },\n        [node, onChange, onClose, pin]\n    );\n\n    const handleChange = useCallback((_: MouseEvent<HTMLElement>, newValue: string | null) => {\n        if (newValue !== null && isNodePinType(newValue)) {\n            setPin(newValue);\n        }\n    }, []);\n\n    useEffect(() => {\n        setPin(node.pin ?? 'free');\n    }, [node.pin]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                <ToggleButtonGroup\n                    orientation=\"vertical\"\n                    value={pin}\n                    size=\"small\"\n                    exclusive\n                    fullWidth\n                    onChange={handleChange}\n                >\n                    {Object.entries(PinButtons).map(([key, { icon, label }]) => (\n                        <ToggleButton key={key} value={key} {...defaultButtonProps}>\n                            {icon}\n                            <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                                {label}\n                            </Typography>\n                        </ToggleButton>\n                    ))}\n                </ToggleButtonGroup>\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedPinSelector: React.VFC<Props> = ({ values, ...props }) => {\n    const node = useMemo(() => {\n        if (isNode(values)) {\n            return values;\n        }\n        return {\n            id: '',\n            x: 0,\n            y: 0,\n        };\n    }, [values]);\n\n    return <PinSelector {...props} node={node} />;\n};\n\nexport default ConnectedPinSelector;\n","import {\n    Button,\n    Checkbox,\n    FormControlLabel,\n    InputAdornment,\n    Paper,\n    Stack,\n    TextField,\n} from '@mui/material';\nimport { ChangeEvent, FormEvent, useCallback, useEffect, useMemo, useState } from 'react';\nimport { isTrapezoid, Trapezoid } from '../../../types/shape';\nimport { round } from '../util';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (trapezoid: Trapezoid) => void;\n}\n\ninterface FormProps extends Omit<Props, 'values'> {\n    trapezoid: Trapezoid;\n}\n\ninterface TrapezoidAttrs {\n    forceI: number;\n    forceJ: number;\n    angle: number;\n    isGlobal: boolean;\n}\ninterface FormValues {\n    forceI: string;\n    forceJ: string;\n    angle: string;\n    isGlobal: boolean;\n}\n\ntype ValidateTuple = [value: number, valid: boolean, error: string];\n\n/**\n * 必須かつ 0以上の数値\n * @param value\n */\nconst validateForce = (value: string): ValidateTuple => {\n    if (value.length === 0) {\n        // 必須\n        return [NaN, false, '数値を入力してください'];\n    } else {\n        const val = parseFloat(value);\n        if (isNaN(val)) {\n            // 数値でない\n            return [NaN, false, '数値を入力してください'];\n        } else if (0 >= val && val > Number.MAX_SAFE_INTEGER) {\n            // 数値が範囲外\n            return [val, false, '0 以上の数値を入力してください'];\n        }\n        // OK\n        return [round(val, 3), true, ''];\n    }\n};\n\n/**\n * -180 から 180 の範囲の数値\n * -180 の場合は 180 とする\n * @param value\n */\nconst validateAngle = (value: string): ValidateTuple => {\n    if (value.length > 0) {\n        let val = parseInt(value, 10);\n        if (isNaN(val) || value.indexOf('.') >= 0) {\n            // 整数でない\n            return [NaN, false, '整数を入力してください'];\n        } else if (-180 > val || 180 < val) {\n            // 180 から 180 の範囲外\n            return [val, false, '-180 〜 180 で入力してください'];\n        }\n        if (val === -180) {\n            // -180 の場合は 180 とする\n            val = 180;\n        }\n        // OK\n        return [val, true, ''];\n    }\n    // 未指定の場合は 90 を返す\n    return [90, true, ''];\n};\n\nconst parseFormValues = (values: Partial<FormValues>): [boolean, TrapezoidAttrs] => {\n    const attrs: TrapezoidAttrs = {\n        forceI: 0,\n        forceJ: 0,\n        angle: 90,\n        isGlobal: false,\n    };\n\n    // forceI\n    const [value1, valid1] = validateForce(values.forceI ?? '');\n    const [value2, valid2] = validateForce(values.forceJ ?? '');\n    const [value3, valid3] = validateAngle(values.angle ?? '');\n    const valid = valid1 && valid2 && valid3;\n\n    attrs.forceI = value1;\n    attrs.forceJ = value2;\n    attrs.angle = value3;\n    attrs.isGlobal = values.isGlobal ?? false;\n\n    return [valid, attrs];\n};\n\nconst toFormValues = (trapezoid: Trapezoid): Partial<FormValues> => {\n    const values: Partial<FormValues> = {};\n\n    values.forceI = `${trapezoid.forceI}`;\n    values.forceJ = `${trapezoid.forceJ}`;\n    values.angle = `${trapezoid.angle ?? ''}`;\n    values.isGlobal = trapezoid.isGlobal;\n\n    return values;\n};\n\nconst TrapezoidEditor: React.VFC<FormProps> = ({ trapezoid, onChange, onClose }) => {\n    const [values, setValues] = useState<Partial<FormValues>>({});\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    const handleSubmit = useCallback(\n        (event: FormEvent<HTMLFormElement>) => {\n            event.preventDefault();\n\n            if (event.currentTarget.checkValidity()) {\n                // エラーがあれば更新しない\n                const invalid = Object.values(errors).some((error) => error.length > 0);\n                if (!invalid) {\n                    // values を TrapezoidAttrs に変換する\n                    const [valid, attrs] = parseFormValues(values);\n                    console.log(valid, attrs);\n                    if (valid) {\n                        // 更新\n                        onChange({\n                            ...trapezoid,\n                            ...attrs,\n                        });\n                    }\n                    // ポップアップ閉じる\n                    onClose();\n                }\n            }\n        },\n        [errors, onChange, onClose, trapezoid, values]\n    );\n\n    const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target;\n        let errorMessage = '';\n        switch (name) {\n            case 'forceI':\n            case 'forceJ':\n                // 必須かつ 0以上の数値\n                const [, valid1, error1] = validateForce(value);\n                if (!valid1) {\n                    errorMessage = error1;\n                }\n                break;\n            case 'angle':\n                const [, valid2, error2] = validateAngle(value);\n                if (!valid2) {\n                    errorMessage = error2;\n                }\n                break;\n        }\n\n        // エラー情報の更新\n        setErrors((state) => ({\n            ...state,\n            [name]: errorMessage,\n        }));\n\n        // 値を更新\n        setValues((state) => ({\n            ...state,\n            [name]: value,\n        }));\n    }, []);\n\n    const handleChangeIsGlobal = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { checked } = event.target;\n        setValues((state) => ({\n            ...state,\n            isGlobal: checked,\n        }));\n    }, []);\n\n    useEffect(() => {\n        setValues(toFormValues(trapezoid));\n        setErrors({});\n    }, [trapezoid]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                {/* forceI */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"I端側の荷重\"\n                    name=\"forceI\"\n                    value={values['forceI'] ?? ''}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN/m</InputAdornment>,\n                    }}\n                    error={Boolean(errors['forceI'])}\n                    helperText={errors['forceI'] ?? ''}\n                />\n                {/* forceJ */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"J端側の荷重\"\n                    name=\"forceJ\"\n                    value={values['forceJ'] ?? ''}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN/m</InputAdornment>,\n                    }}\n                    error={Boolean(errors['forceJ'])}\n                    helperText={errors['forceJ'] ?? ''}\n                />\n                {/* angle */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"角度\"\n                    name=\"angle\"\n                    value={values['angle'] ?? ''}\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">°</InputAdornment>,\n                    }}\n                    error={Boolean(errors['angle'])}\n                    helperText={errors['angle'] ?? ''}\n                />\n                {/* isGlobal */}\n                <FormControlLabel\n                    label=\"全体座標系\"\n                    control={\n                        <Checkbox\n                            name=\"isGlobal\"\n                            size=\"small\"\n                            checked={values.isGlobal ?? false}\n                            onChange={handleChangeIsGlobal}\n                        />\n                    }\n                />\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedTrapezoidEditor: React.VFC<Props> = ({ values, ...props }) => {\n    const trapezoid = useMemo(() => {\n        if (isTrapezoid(values)) {\n            return values;\n        }\n        // 空データを返す\n        return {\n            id: '',\n            name: '',\n            beam: '',\n            forceI: 0,\n            distanceI: 0,\n            forceJ: 0,\n            distanceJ: 0,\n        };\n    }, [values]);\n\n    return <TrapezoidEditor {...props} trapezoid={trapezoid} />;\n};\n\nexport default ConnectedTrapezoidEditor;\n","import { Box } from '@mui/material';\nimport { useContext } from 'react';\nimport { CanvasContext } from '../provider/CanvasProvider';\nimport { PopupContext } from '../provider/PopupProvider';\nimport ForceEditor from './ForceEditor';\nimport PinSelector from './PinSelector';\nimport TrapezoidEditor from './TrapezoidEditor';\n\nconst Popup: React.VFC = () => {\n    const { popupType, popupPosition, popupParams, close } = useContext(PopupContext);\n    const { onChangeNode, onChangeForce, onChangeTrapezoid } = useContext(CanvasContext);\n\n    if (typeof popupType === 'undefined') {\n        return null;\n    }\n\n    return (\n        <Box\n            sx={{\n                position: 'absolute',\n                zIndex: 5000,\n                ...popupPosition,\n            }}\n        >\n            {popupType === 'forces' && (\n                <ForceEditor values={popupParams ?? {}} onClose={close} onChange={onChangeForce} />\n            )}\n            {popupType === 'trapezoids' && (\n                <TrapezoidEditor\n                    values={popupParams ?? {}}\n                    onClose={close}\n                    onChange={onChangeTrapezoid}\n                />\n            )}\n            {popupType === 'nodes' && (\n                <PinSelector values={popupParams ?? {}} onClose={close} onChange={onChangeNode} />\n            )}\n        </Box>\n    );\n};\n\nexport default Popup;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { forwardRef, useCallback, useContext, useImperativeHandle, useRef } from 'react';\nimport { Stage } from 'react-konva';\nimport { useContextBridge } from '../../hooks/useContextBridge';\nimport { AppSettingsContext } from '../../providers/AppSettingsProvider';\nimport DrawLayer from './layer/DrawLayer';\nimport GridLayer from './layer/GridLayer';\nimport GuideLayer from './layer/GuideLayer';\nimport ShapeLayer from './layer/ShapeLayer';\nimport Popup from './popup';\nimport { CanvasContext } from './provider/CanvasProvider';\nimport { DrawContext } from './provider/DrawProvider';\nimport { PopupContext } from './provider/PopupProvider';\nimport { CanvasCoreHandler } from './types';\n\nconst CanvasCore: React.ForwardRefRenderFunction<CanvasCoreHandler> = (_, ref) => {\n    const { mode } = useContext(AppSettingsContext);\n    const { tool, size, getStructure, clearSelection } = useContext(CanvasContext);\n    const { close } = useContext(PopupContext);\n    const { onPointerDown, onPointerMove, onPointerUp } = useContext(DrawContext);\n\n    const ContextBridge = useContextBridge(CanvasContext, PopupContext, DrawContext);\n\n    const canvasRef = useRef<Konva.Stage>(null);\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            toDataURL: () => {\n                if (canvasRef.current) {\n                    return canvasRef.current.toDataURL();\n                }\n            },\n            getStructure,\n        }),\n        [getStructure]\n    );\n\n    /**\n     * Stage のクリック\n     */\n    const handleClick = useCallback(\n        (_: KonvaEventObject<PointerEvent>) => {\n            // ポップオーバーを閉じる\n            close();\n\n            if (tool === 'select') {\n                // 選択解除\n                clearSelection();\n            }\n        },\n        [clearSelection, close, tool]\n    );\n\n    return (\n        <>\n            <Stage\n                ref={canvasRef}\n                width={size.width}\n                height={size.height}\n                listening={mode === 'canvas'}\n                onClick={handleClick}\n                onTap={handleClick}\n                {...{ onPointerDown, onPointerMove, onPointerUp }}\n            >\n                <ContextBridge>\n                    <GridLayer />\n                    <GuideLayer />\n                    <ShapeLayer />\n                    <DrawLayer />\n                </ContextBridge>\n            </Stage>\n            {/* ポップアップ */}\n            <Popup />\n        </>\n    );\n};\n\nexport default forwardRef(CanvasCore);\n","import { Box } from '@mui/material';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasTool, DOMSize } from '../../types/common';\nimport { emptyStructure, Structure } from '../../types/shape';\nimport CanvasCore from './core';\nimport CanvasProvider from './provider/CanvasProvider';\nimport DrawProvider from './provider/DrawProvider';\nimport PopupProvider from './provider/PopupProvider';\nimport { CanvasCoreHandler } from './types';\n\ninterface Props {\n    structure: Structure;\n    tool?: CanvasTool;\n    readonly?: boolean;\n}\n\nexport type CanvasHandler = CanvasCoreHandler;\n\nconst Canvas: React.ForwardRefRenderFunction<CanvasHandler, Props> = (\n    { tool = 'select', structure: source, readonly = false },\n    ref\n) => {\n    // キャンバス表示領域\n    const [size, setSize] = useState<DOMSize>({ width: 0, height: 0 });\n    // キャンバスの親要素\n    const containerRef = useRef<HTMLDivElement>(null);\n    // キャンバス本体\n    const canvasRef = useRef<CanvasCoreHandler>(null);\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            toDataURL: () => {\n                if (canvasRef.current) {\n                    return canvasRef.current.toDataURL();\n                }\n            },\n            getStructure: () => {\n                if (canvasRef.current) {\n                    return canvasRef.current.getStructure();\n                }\n                return emptyStructure;\n            },\n        }),\n        []\n    );\n\n    // 要素のリサイズを監視\n    useEffect(() => {\n        const observer = new ResizeObserver((entries) => {\n            const { width, height } = entries[0].contentRect;\n            setSize({\n                width,\n                height,\n            });\n        });\n\n        if (containerRef.current) {\n            observer.observe(containerRef.current);\n        }\n\n        return () => {\n            observer.disconnect();\n        };\n    }, []);\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{\n                width: 'auto',\n                height: '100%',\n                backgroundColor: '#ffffff',\n                overscrollBehavior: 'contain',\n            }}\n        >\n            <CanvasProvider tool={tool} size={size} structure={source} readonly={readonly}>\n                <DrawProvider>\n                    <PopupProvider>\n                        <CanvasCore ref={canvasRef} />\n                    </PopupProvider>\n                </DrawProvider>\n            </CanvasProvider>\n        </Box>\n    );\n};\n\nexport default forwardRef(Canvas);\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { createContext, ReactNode, useCallback, useContext, useRef, useState } from 'react';\nimport { AppSettingsContext } from '../../providers/AppSettingsProvider';\nimport { NoteSettingsContext } from '../../providers/NoteSettingsProvider';\n\ninterface Props {\n    children: ReactNode;\n}\n\ninterface IStrokeContext {\n    points: number[];\n    onPointerDown: (event: KonvaEventObject<Event>) => void;\n    onPointerMove: (event: KonvaEventObject<Event>) => void;\n    onPointerUp: (event: KonvaEventObject<Event>) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const StrokeContext = createContext<IStrokeContext>(undefined!);\n\nconst StrokeProvider: React.VFC<Props> = ({ children }) => {\n    const isDrawing = useRef<boolean>();\n    const [points, setPoints] = useState<number[]>([]);\n\n    const { mode: appMode, addDrawing } = useContext(AppSettingsContext);\n    const { mode: noteMode, settings } = useContext(NoteSettingsContext);\n\n    /**\n     * 描画の開始\n     */\n    const handlePointerDown = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (appMode !== 'note') {\n                return;\n            }\n            if (noteMode !== 'edit') {\n                return;\n            }\n\n            const stage = event.target.getStage();\n            if (stage) {\n                isDrawing.current = true;\n                const { x, y } = stage.getPosition();\n                const point = stage.getPointerPosition();\n                if (point) {\n                    setPoints([point.x + Math.abs(x), point.y + Math.abs(y)]);\n                }\n            }\n        },\n        [appMode, noteMode]\n    );\n\n    /**\n     * ポインタの移動時に位置を取得\n     */\n    const handlePointerMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (noteMode !== 'edit') {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            const stage = event.target.getStage();\n            if (stage) {\n                const { x, y } = stage.getPosition();\n                const point = stage.getPointerPosition();\n                if (point) {\n                    setPoints((state) => [...state, point.x + Math.abs(x), point.y + Math.abs(y)]);\n                }\n            }\n        },\n        [noteMode]\n    );\n\n    /**\n     * 描画の確定\n     */\n    const handlePointerUp = useCallback(\n        (_: KonvaEventObject<Event>) => {\n            if (appMode !== 'note') {\n                return;\n            }\n            if (noteMode !== 'edit') {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            isDrawing.current = false;\n            // 更新を確定\n            addDrawing({\n                points,\n                ...settings,\n            });\n\n            // 現在の描画データをクリア\n            setPoints([]);\n        },\n        [addDrawing, appMode, noteMode, points, settings]\n    );\n\n    return (\n        <StrokeContext.Provider\n            value={{\n                points,\n                onPointerDown: handlePointerDown,\n                onPointerMove: handlePointerMove,\n                onPointerUp: handlePointerUp,\n            }}\n        >\n            {children}\n        </StrokeContext.Provider>\n    );\n};\n\nexport default StrokeProvider;\n","import { useContext } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { AppSettingsContext } from '../../../providers/AppSettingsProvider';\nimport { NoteSettingsContext } from '../../../providers/NoteSettingsProvider';\nimport { StrokeContext } from '../StrokeProvider';\n\nconst Draw: React.VFC = () => {\n    const { drawings } = useContext(AppSettingsContext);\n    const { settings } = useContext(NoteSettingsContext);\n    const { points } = useContext(StrokeContext);\n    return (\n        <Layer>\n            {drawings.map(({ eraser = false, ...lineProps }, index) => (\n                <Line\n                    key={`note-drawing-${index}`}\n                    lineCap=\"round\"\n                    lineJoin=\"round\"\n                    {...lineProps}\n                    globalCompositeOperation={eraser ? 'destination-out' : 'source-over'}\n                />\n            ))}\n            {/* 現在描画中の線 */}\n            {points && (\n                <Line\n                    lineCap=\"round\"\n                    lineJoin=\"round\"\n                    points={points}\n                    {...settings}\n                    globalCompositeOperation={settings.eraser ? 'destination-out' : 'source-over'}\n                />\n            )}\n        </Layer>\n    );\n};\n\nexport default Draw;\n","import CloseIcon from '@mui/icons-material/Close';\nimport EditIcon from '@mui/icons-material/Edit';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { IconButton, Menu, MenuItem, styled } from '@mui/material';\nimport { MouseEvent, MouseEventHandler, useCallback, useState } from 'react';\nimport { Html } from 'react-konva-utils';\nimport { AppMode } from '../../../../types/common';\n\ninterface Props {\n    visible?: boolean;\n    mode: AppMode;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    onEdit?: MouseEventHandler<HTMLButtonElement>;\n    onCopy?: VoidFunction;\n    onDelete?: VoidFunction;\n    onCancel?: VoidFunction;\n}\n\nconst Background = styled('div')({\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    padding: '0 8',\n});\nconst Spacer = styled('div')({\n    flex: 1,\n});\n\nconst HeaderMenu: React.VFC<Props> = ({\n    visible = false,\n    mode,\n    y: top,\n    x: left,\n    width,\n    onEdit,\n    onCopy,\n    onDelete,\n    onCancel,\n}) => {\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n    const handleClickMore = useCallback((event: MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    }, []);\n    const handleCloseMenu = useCallback(() => {\n        setAnchorEl(null);\n    }, []);\n\n    if (!visible) {\n        return null;\n    }\n\n    return (\n        <Html\n            divProps={{\n                style: {\n                    top: `${top - 42}px`,\n                    left: `${left}px`,\n                    width: `${width}px`,\n                },\n            }}\n        >\n            <Background>\n                {mode === 'canvas' && (\n                    <IconButton size=\"small\" onClick={onCancel}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n                {mode === 'note' && (\n                    <>\n                        <IconButton size=\"small\" onClick={onEdit}>\n                            <EditIcon />\n                        </IconButton>\n                        <Spacer />\n                        <IconButton size=\"small\" onClick={handleClickMore}>\n                            <MoreVertIcon />\n                        </IconButton>\n                    </>\n                )}\n            </Background>\n            <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleCloseMenu}>\n                <MenuItem onClick={onCopy}>コピー</MenuItem>\n                <MenuItem onClick={onDelete}>削除</MenuItem>\n            </Menu>\n        </Html>\n    );\n};\n\nexport default HeaderMenu;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { Box } from 'konva/lib/shapes/Transformer';\nimport {\n    Dispatch,\n    MouseEvent,\n    SetStateAction,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { Image, Rect, Transformer } from 'react-konva';\nimport useImage from 'use-image';\nimport { AppMode, DOMSize, ShapeBaseProps } from '../../../../types/common';\nimport { MinCanvasSize, NoteMode, StructureCanvasProps } from '../../../../types/note';\nimport { clone } from '../../../Canvas/util';\nimport HeaderMenu from './HeaderMenu';\n\ninterface Props extends StructureCanvasProps {\n    // 状態\n    appMode: AppMode;\n    noteMode: NoteMode;\n    // ページ情報\n    pageSize: DOMSize;\n    draggable?: boolean;\n    // キャンバス情報\n    index: number;\n    onChange: Dispatch<SetStateAction<StructureCanvasProps[]>>;\n    // 選択状態\n    selected?: boolean;\n    onSelect: VoidFunction;\n    // 編集の開始・終了\n    onEditCanvas: (props: ShapeBaseProps) => void;\n    onCloseCanvas: VoidFunction;\n}\n\nconst CanvasHandle: React.VFC<Props> = ({\n    appMode,\n    noteMode,\n    pageSize,\n    draggable = false,\n    index,\n    onChange,\n    selected = false,\n    onSelect,\n    data,\n    image: dataURL,\n    onEditCanvas,\n    onCloseCanvas,\n    ...props\n}) => {\n    const rectRef = useRef<Konva.Rect>(null);\n    const tfRef = useRef<Konva.Transformer>(null);\n    const [isDragging, setDragging] = useState(false);\n    const [image] = useImage(dataURL ?? '');\n\n    const visibleMenu = useMemo(() => {\n        return selected && !isDragging && noteMode === 'select';\n    }, [isDragging, noteMode, selected]);\n\n    const visibleTransformer = useMemo(() => {\n        return draggable && selected;\n    }, [draggable, selected]);\n\n    // 選択時にサイズ変更を可能にする\n    useEffect(() => {\n        if (selected && tfRef.current && rectRef.current) {\n            tfRef.current.nodes([rectRef.current]);\n            // 強制描画\n            tfRef.current.getLayer()?.batchDraw();\n        }\n    }, [selected]);\n\n    /**\n     * 位置/サイズ変更の確定\n     */\n    const handleChange = useCallback(\n        (rect: ShapeBaseProps) => {\n            onChange((state) => {\n                const data = clone(state);\n                const structure = data[index];\n                data[index] = {\n                    ...structure,\n                    ...rect,\n                };\n\n                return data;\n            });\n        },\n        [index, onChange]\n    );\n\n    /**\n     * ドラッグ開始\n     */\n    const handleDragStart = useCallback(() => {\n        setDragging(true);\n    }, []);\n\n    /**\n     * 移動\n     */\n    const handleDragMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            // イベントを伝播させない\n            event.cancelBubble = true;\n\n            if (rectRef.current) {\n                // ドラッグした位置\n                const { x, y } = event.target.attrs;\n                if (typeof x === 'number' && typeof y === 'number') {\n                    // 位置がページサイズの範囲内になるように x, y を補正\n                    const { width, height } = rectRef.current.getSize();\n                    let [newX, newY] = [x, y];\n\n                    if (newX < 0) {\n                        newX = 0;\n                    } else if (newX > pageSize.width - width) {\n                        newX = pageSize.width - width;\n                    }\n                    if (newY < 0) {\n                        newY = 0;\n                    } else if (newY > pageSize.height - height) {\n                        newY = pageSize.height - height;\n                    }\n\n                    if (x !== newX || y !== newY) {\n                        rectRef.current.setPosition({ x: newX, y: newY });\n                    }\n                }\n            }\n        },\n        [pageSize.height, pageSize.width]\n    );\n\n    /**\n     * 移動の確定\n     */\n    const handleDragEnd = useCallback(\n        (_: KonvaEventObject<Event>) => {\n            if (rectRef.current) {\n                // 現在位置を取得\n                const { x, y } = rectRef.current.getPosition();\n                const { width, height } = rectRef.current.getSize();\n                const newRectProps: ShapeBaseProps = {\n                    x,\n                    y,\n                    width,\n                    height,\n                };\n                // ドラッグ終了\n                setDragging(false);\n                // 更新\n                handleChange(newRectProps);\n            }\n        },\n        [handleChange]\n    );\n\n    /**\n     * サイズを最小値以下にできないように制限\n     */\n    const handleChangeBoundBox = useCallback((oldBox: Box, newBox: Box) => {\n        if (newBox.width < MinCanvasSize.width || newBox.height < MinCanvasSize.height) {\n            return oldBox;\n        }\n        return newBox;\n    }, []);\n\n    /**\n     * サイズ変更の確定\n     */\n    const handleTransformEnd = useCallback(() => {\n        if (rectRef.current) {\n            const rect = rectRef.current;\n            const { x: scaleX, y: scaleY } = rect.scale();\n            // reset scale\n            rect.scale({ x: 1, y: 1 });\n            const newRectProps: ShapeBaseProps = {\n                x: rect.x(),\n                y: rect.y(),\n                width: Math.max(MinCanvasSize.width, rect.width() * scaleX),\n                height: Math.max(MinCanvasSize.height, rect.height() * scaleY),\n            };\n\n            handleChange(newRectProps);\n        }\n    }, [handleChange]);\n\n    /**\n     * 編集ボタンのクリック\n     */\n    const handleEdit = useCallback(\n        (event: MouseEvent<HTMLButtonElement>) => {\n            // ボタンの位置\n            const { top, left } = event.currentTarget.getBoundingClientRect();\n\n            // 編集開始\n            const canvasProps: ShapeBaseProps = {\n                x: left,\n                y: top + 42,\n                width: props.width,\n                height: props.height,\n            };\n            onEditCanvas(canvasProps);\n        },\n        [onEditCanvas, props.height, props.width]\n    );\n\n    return (\n        <>\n            <Rect {...props} fill=\"white\" />\n            {image && <Image {...props} image={image} />}\n            <Rect\n                ref={rectRef}\n                stroke=\"black\"\n                strokeWidth={2}\n                draggable={draggable}\n                {...props}\n                onClick={onSelect}\n                onTap={onSelect}\n                onDragStart={handleDragStart}\n                onDragMove={handleDragMove}\n                onDragEnd={handleDragEnd}\n                onTransformEnd={handleTransformEnd}\n            />\n            <HeaderMenu\n                visible={visibleMenu}\n                mode={appMode}\n                {...props}\n                onEdit={handleEdit}\n                onCancel={onCloseCanvas}\n            />\n            <Transformer\n                ref={tfRef}\n                visible={visibleTransformer}\n                rotateEnabled={false}\n                boundBoxFunc={handleChangeBoundBox}\n            />\n        </>\n    );\n};\n\nexport default CanvasHandle;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useCallback, useContext } from 'react';\nimport { Layer, Rect } from 'react-konva';\nimport { AppSettingsContext } from '../../../providers/AppSettingsProvider';\nimport { NoteSettingsContext } from '../../../providers/NoteSettingsProvider';\nimport CanvasHandle from '../nodes/CanvasHandle';\n\ninterface Props {\n    draggable?: boolean;\n}\n\nconst Frame: React.VFC<Props> = ({ draggable = false }) => {\n    const { mode: noteMode } = useContext(NoteSettingsContext);\n    const {\n        mode: appMode,\n        pageSize,\n        structures,\n        onChangeStructures,\n        selectedCanvasIndex,\n        onSelectCanvas,\n        editCanvas,\n        closeCanvas,\n    } = useContext(AppSettingsContext);\n\n    /**\n     * canvas 以外がクリックされた場合に選択解除する\n     */\n    const handleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (appMode !== 'note') {\n                // canvas モード時はクリックを無視\n                return;\n            }\n\n            if (event.target.attrs.type === 'background') {\n                onSelectCanvas(undefined);\n            }\n        },\n        [appMode, onSelectCanvas]\n    );\n\n    return (\n        <Layer>\n            {/* クリックが空振りしたときに選択解除する */}\n            <Rect\n                x={0}\n                y={0}\n                {...pageSize}\n                attrs={{ type: 'background' }}\n                onClick={handleClick}\n                onTap={handleClick}\n            />\n            {structures.map((structure, index) => (\n                <CanvasHandle\n                    key={`handle-${index}`}\n                    appMode={appMode}\n                    noteMode={noteMode}\n                    pageSize={pageSize}\n                    draggable={draggable}\n                    index={index}\n                    onChange={onChangeStructures}\n                    selected={index === selectedCanvasIndex}\n                    onSelect={() => onSelectCanvas(index)}\n                    onEditCanvas={editCanvas}\n                    onCloseCanvas={closeCanvas}\n                    {...structure}\n                />\n            ))}\n        </Layer>\n    );\n};\n\nexport default Frame;\n","import { useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { DOMSize } from '../../../types/common';\n\ninterface LineProps {\n    id: string;\n    points: number[];\n    stroke: string;\n    strokeWidth: number;\n    dash: [number, number];\n    listening: boolean;\n}\n\nconst defaultLineProps: LineProps = {\n    id: '',\n    points: [],\n    stroke: '#c9e1ff',\n    strokeWidth: 1,\n    dash: [5, 3],\n    listening: false,\n};\n\nconst GridSize = 50;\n\ninterface Props {\n    pageSize: DOMSize;\n}\n\nconst Grid: React.VFC<Props> = ({ pageSize }) => {\n    const horizontalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let y = 0; y <= pageSize.height; y += GridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Horizontal_${count}`,\n                points: [0, y, pageSize.width, y],\n            });\n            count++;\n        }\n        return lines;\n    }, [pageSize]);\n\n    const verticalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let x = 0; x <= pageSize.width; x += GridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Vertical_${count}`,\n                points: [x, 0, x, pageSize.height],\n            });\n            count++;\n        }\n        return lines;\n    }, [pageSize]);\n\n    return (\n        <Layer>\n            {/* horizontal */}\n            {horizontalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n            {/* vertical */}\n            {verticalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default Grid;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { useCallback, useContext, useMemo, useRef } from 'react';\nimport { Stage } from 'react-konva';\nimport { useContextBridge } from '../../hooks/useContextBridge';\nimport { AppSettingsContext } from '../../providers/AppSettingsProvider';\nimport { ConfigurationContext } from '../../providers/ConfigurationProvider';\nimport { NoteSettingsContext } from '../../providers/NoteSettingsProvider';\nimport { DOMSize } from '../../types/common';\nimport Draw from './layer/Draw';\nimport Frame from './layer/Frame';\nimport Grid from './layer/Grid';\nimport { StrokeContext } from './StrokeProvider';\n\ninterface Props {\n    viewBox: DOMSize;\n}\n\nconst Page: React.VFC<Props> = ({ viewBox }) => {\n    const stageRef = useRef<Konva.Stage>(null);\n    const { mode: noteMode } = useContext(NoteSettingsContext);\n    const { mode: appMode, pageSize } = useContext(AppSettingsContext);\n    const { onPointerDown, onPointerUp, onPointerMove } = useContext(StrokeContext);\n\n    // Stage 以降で使用する Context を Bridge する\n    const ContextBridge = useContextBridge(\n        AppSettingsContext,\n        ConfigurationContext,\n        NoteSettingsContext,\n        StrokeContext\n    );\n\n    const draggable = useMemo(() => {\n        return appMode === 'note' && noteMode === 'select';\n    }, [appMode, noteMode]);\n\n    /**\n     * ページサイズの範囲で表示領域を移動する\n     */\n    const handleDragMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            const { x, y } = event.target.attrs;\n            if (stageRef.current && typeof x === 'number' && typeof y === 'number') {\n                let [newX, newY] = [x, y];\n                let modified = false;\n\n                if (newX > 0) {\n                    newX = 0;\n                    modified = true;\n                } else if (Math.abs(newX) + viewBox.width > pageSize.width) {\n                    newX = viewBox.width - pageSize.width;\n                    modified = true;\n                }\n\n                if (newY > 0) {\n                    newY = 0;\n                    modified = true;\n                } else if (Math.abs(newY) + viewBox.height > pageSize.height) {\n                    newY = viewBox.height - pageSize.height;\n                    modified = true;\n                }\n\n                if (modified) {\n                    stageRef.current.setPosition({ x: newX, y: newY });\n                }\n            }\n        },\n        [pageSize.height, pageSize.width, viewBox.height, viewBox.width]\n    );\n\n    return (\n        <Stage\n            ref={stageRef}\n            width={viewBox.width}\n            height={viewBox.height}\n            draggable={draggable}\n            onDragMove={handleDragMove}\n            onPointerDown={onPointerDown}\n            onPointerMove={onPointerMove}\n            onPointerUp={onPointerUp}\n            listening={appMode === 'note'}\n        >\n            <ContextBridge>\n                <Grid pageSize={pageSize} />\n                <Frame draggable={draggable} />\n                <Draw />\n            </ContextBridge>\n        </Stage>\n    );\n};\n\nexport default Page;\n","import { Box } from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\nimport { DOMSize } from '../../types/common';\nimport Page from './Page';\nimport StrokeProvider from './StrokeProvider';\n\nconst Note: React.VFC = () => {\n    // キャンバスの親要素\n    const containerRef = useRef<HTMLDivElement>(null);\n    // 表示領域\n    const [viewBox, setViewBox] = useState<DOMSize>({ width: 0, height: 0 });\n\n    // 要素のリサイズを監視\n    useEffect(() => {\n        const observer = new ResizeObserver((entries) => {\n            const { width, height } = entries[0].contentRect;\n            setViewBox({\n                width,\n                height,\n            });\n        });\n\n        if (containerRef.current) {\n            observer.observe(containerRef.current);\n        }\n\n        return () => {\n            observer.disconnect();\n        };\n    }, []);\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{\n                width: 'auto',\n                height: '100%',\n                backgroundColor: '#ffffff',\n                overscrollBehavior: 'contain',\n                overflow: 'hidden',\n            }}\n        >\n            <StrokeProvider>\n                <Page viewBox={viewBox} />\n            </StrokeProvider>\n        </Box>\n    );\n};\n\nexport default Note;\n","import { Box } from '@mui/material';\nimport { useContext, useMemo } from 'react';\nimport { AppSettingsContext } from '../providers/AppSettingsProvider';\nimport { ConfigurationContext } from '../providers/ConfigurationProvider';\nimport { emptyStructure } from '../types/shape';\nimport Canvas from './Canvas';\nimport Note from './Note';\n\nconst MainContainer: React.VFC = () => {\n    const { structures, selectedCanvasIndex, canvasProps, canvasRef } =\n        useContext(AppSettingsContext);\n    const { tool } = useContext(ConfigurationContext);\n\n    const structure = useMemo(() => {\n        if (typeof selectedCanvasIndex === 'number') {\n            return structures[selectedCanvasIndex].data;\n        }\n    }, [selectedCanvasIndex, structures]);\n\n    return (\n        <>\n            <Box\n                sx={{\n                    boxSizing: 'border-box',\n                    ml: 1,\n                    mb: 1,\n                    flex: 1,\n                    border: (theme) => `1px solid ${theme.palette.divider}`,\n                    borderRadius: 1,\n                    overflow: 'hidden',\n                }}\n            >\n                <Note />\n            </Box>\n            {canvasProps && (\n                <Box\n                    sx={{\n                        position: 'absolute',\n                        top: canvasProps.y,\n                        left: canvasProps.x,\n                        width: canvasProps.width,\n                        height: canvasProps.height,\n                    }}\n                >\n                    <Canvas ref={canvasRef} tool={tool} structure={structure ?? emptyStructure} />\n                </Box>\n            )}\n        </>\n    );\n};\n\nexport default MainContainer;\n","import { ArrowDownward, Delete, Edit, PanToolAlt, Texture } from '@mui/icons-material';\nimport { Stack, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { MouseEvent, ReactElement, useCallback, useContext } from 'react';\nimport { ConfigurationContext } from '../../providers/ConfigurationProvider';\nimport { CanvasTool, isCanvasTool } from '../../types/common';\n\ninterface Props {\n    tool: CanvasTool;\n    onChange: (tool: CanvasTool) => void;\n}\n\ninterface ButtonProps {\n    tool: CanvasTool;\n    icon: ReactElement;\n    label: string;\n}\n\nconst ToolboxButtons: Readonly<Record<CanvasTool, ButtonProps>> = {\n    select: {\n        tool: 'select',\n        icon: <PanToolAlt />,\n        label: '選択',\n    },\n    pen: {\n        tool: 'pen',\n        icon: <Edit />,\n        label: '梁要素の描画',\n    },\n    force: {\n        tool: 'force',\n        icon: <ArrowDownward />,\n        label: '集中荷重の追加',\n    },\n    trapezoid: {\n        tool: 'trapezoid',\n        icon: <Texture />,\n        label: '分布荷重の追加',\n    },\n    delete: {\n        tool: 'delete',\n        icon: <Delete />,\n        label: '要素の削除',\n    },\n};\n\nconst CanvasToolboxCore: React.VFC<Props> = ({ tool, onChange }) => {\n    /**\n     * ツールの変更\n     */\n    const handleChange = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isCanvasTool(newValue)) {\n                onChange(newValue);\n            }\n        },\n        [onChange]\n    );\n\n    return (\n        <Stack sx={{ width: 160 }} alignItems=\"flex-start\">\n            <Typography variant=\"caption\">Toolbox</Typography>\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={tool}\n                exclusive\n                fullWidth\n                onChange={handleChange}\n            >\n                {Object.entries(ToolboxButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n        </Stack>\n    );\n};\n\nconst CanvasToolbox: React.VFC = () => {\n    const { tool, setTool } = useContext(ConfigurationContext);\n    return <CanvasToolboxCore tool={tool} onChange={setTool} />;\n};\n\nexport default CanvasToolbox;\n","import { AutoFixNormal, Edit, PanToolAlt } from '@mui/icons-material';\nimport {\n    Slider,\n    Stack,\n    TextField,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography,\n} from '@mui/material';\nimport {\n    ChangeEvent,\n    Dispatch,\n    MouseEvent,\n    ReactElement,\n    SetStateAction,\n    useCallback,\n    useContext,\n} from 'react';\nimport { NoteSettingsContext } from '../../providers/NoteSettingsProvider';\nimport { DrawSettings, isNoteMode, NoteMode } from '../../types/note';\n\ninterface Props {\n    mode: NoteMode;\n    settings: DrawSettings;\n    onChangeMode: Dispatch<SetStateAction<NoteMode>>;\n    onChangeDrawSettings: Dispatch<SetStateAction<DrawSettings>>;\n}\n\nconst DrawModes = ['pen', 'eraser'] as const;\ntype DrawMode = typeof DrawModes[number];\nconst isDrawMode = (item: unknown): item is DrawMode => {\n    if (typeof item === 'string') {\n        return DrawModes.some((mode) => mode === item);\n    }\n    return false;\n};\n\ninterface ButtonProps {\n    mode: NoteMode | DrawMode;\n    icon: ReactElement;\n    label: string;\n}\n\nconst NoteModeButtons: Readonly<Record<NoteMode, ButtonProps>> = {\n    select: {\n        mode: 'select',\n        icon: <PanToolAlt />,\n        label: '選択',\n    },\n    edit: {\n        mode: 'edit',\n        icon: <Edit />,\n        label: '描画',\n    },\n};\n\nconst DrawModeButtons: Readonly<Record<DrawMode, ButtonProps>> = {\n    pen: {\n        mode: 'pen',\n        icon: <Edit />,\n        label: 'ペンツール',\n    },\n    eraser: {\n        mode: 'eraser',\n        icon: <AutoFixNormal />,\n        label: '消しゴム',\n    },\n};\n\nconst MinStrokeWidth = 4;\nconst MaxStrokeWidth = 20;\nconst StrokeWidthStep = 4;\n\nconst NoteToolboxCore: React.VFC<Props> = ({\n    mode,\n    settings,\n    onChangeMode,\n    onChangeDrawSettings,\n}) => {\n    /**\n     * モードの変更\n     */\n    const handleChangeMode = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isNoteMode(newValue)) {\n                onChangeMode(newValue);\n            }\n        },\n        [onChangeMode]\n    );\n\n    /**\n     * 描画ツールの選択\n     */\n    const handleChangeTool = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isDrawMode(newValue)) {\n                onChangeDrawSettings((state) => ({\n                    ...state,\n                    eraser: newValue === 'eraser',\n                }));\n            }\n        },\n        [onChangeDrawSettings]\n    );\n\n    const handleChangeStrokeWidth = useCallback(\n        (_: Event, value: number | number[]) => {\n            if (typeof value === 'number') {\n                onChangeDrawSettings((state) => ({\n                    ...state,\n                    strokeWidth: value,\n                }));\n            }\n        },\n        [onChangeDrawSettings]\n    );\n\n    const handleChangeStroke = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            if (event.target.checkValidity()) {\n                const { value } = event.target;\n                onChangeDrawSettings((state) => ({\n                    ...state,\n                    stroke: value,\n                }));\n            }\n        },\n        [onChangeDrawSettings]\n    );\n\n    return (\n        <Stack sx={{ width: 160 }} alignItems=\"flex-start\">\n            <Typography variant=\"caption\">Toolbox</Typography>\n            {/* 選択 / 編集の切り替え */}\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={mode}\n                exclusive\n                fullWidth\n                onChange={handleChangeMode}\n            >\n                {Object.entries(NoteModeButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n            <Typography variant=\"caption\" sx={{ mt: 1 }}>\n                描画ツール\n            </Typography>\n            {/* eraser */}\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={settings.eraser ? 'eraser' : 'pen'}\n                exclusive\n                fullWidth\n                disabled={mode === 'select'}\n                onChange={handleChangeTool}\n            >\n                {Object.entries(DrawModeButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n            {/* strokeWidth */}\n            <Typography variant=\"caption\" sx={{ mt: 1 }}>\n                太さ\n            </Typography>\n            <Slider\n                sx={{ ml: 1, mb: 2, boxSizing: 'border-box', width: 140 }}\n                value={settings.strokeWidth}\n                min={MinStrokeWidth}\n                max={MaxStrokeWidth}\n                step={StrokeWidthStep}\n                marks\n                valueLabelDisplay=\"auto\"\n                disabled={mode === 'select'}\n                onChange={handleChangeStrokeWidth}\n            />\n            {/* stroke */}\n            <TextField\n                type=\"color\"\n                label=\"ペンの色\"\n                value={settings.stroke}\n                disabled={mode === 'select' || settings.eraser}\n                fullWidth\n                margin=\"dense\"\n                size=\"small\"\n                onChange={handleChangeStroke}\n            />\n        </Stack>\n    );\n};\n\nconst NoteToolbox: React.VFC = () => {\n    const props = useContext(NoteSettingsContext);\n    return <NoteToolboxCore {...props} />;\n};\n\nexport default NoteToolbox;\n","import { useContext } from 'react';\nimport { AppSettingsContext } from '../../providers/AppSettingsProvider';\nimport CanvasToolbox from './CanvasToolbox';\nimport NoteToolbox from './NoteToolbox';\n\nconst Toolbox: React.VFC = () => {\n    const { mode } = useContext(AppSettingsContext);\n    if (mode === 'canvas') {\n        return <CanvasToolbox />;\n    }\n    return <NoteToolbox />;\n};\n\nexport default Toolbox;\n","import { Box } from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport { DOMSize } from '../types/common';\nimport Header from './Header';\nimport MainContainer from './MainContainer';\nimport Toolbox from './Toolbox';\n\nconst Layout: React.VFC = () => {\n    const [windowRect, setWindowRect] = useState<DOMSize>({ width: 0, height: 0 });\n\n    const fitWindowSize = useCallback(() => {\n        const { innerHeight, innerWidth } = window;\n        setWindowRect({\n            height: innerHeight,\n            width: innerWidth,\n        });\n    }, []);\n\n    useEffect(() => {\n        fitWindowSize();\n        window.addEventListener('resize', fitWindowSize);\n\n        return () => {\n            window.removeEventListener('resize', fitWindowSize);\n        };\n    }, [fitWindowSize]);\n\n    return (\n        <Box sx={{ ...windowRect, overflow: 'hidden' }}>\n            <Header />\n            <Box\n                sx={{\n                    boxSizing: 'border-box',\n                    width: 'auto',\n                    height: 'calc(100% - 48px)',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    flexWrap: 'nowrap',\n                    alignItems: 'stretch',\n                    pt: 1,\n                    px: 1,\n                }}\n            >\n                <Toolbox />\n                <MainContainer />\n            </Box>\n        </Box>\n    );\n};\n\nexport default Layout;\n","import { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport React from 'react';\nimport AppSettingsProvider from '../providers/AppSettingsProvider';\nimport ConfigurationProvider from '../providers/ConfigurationProvider';\nimport NoteSettingsProvider from '../providers/NoteSettingsProvider';\nimport Layout from './Layout';\n\nconst theme = createTheme();\n\nconst App: React.VFC = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <AppSettingsProvider>\n                <ConfigurationProvider>\n                    <NoteSettingsProvider>\n                        <CssBaseline />\n                        <Layout />\n                    </NoteSettingsProvider>\n                </ConfigurationProvider>\n            </AppSettingsProvider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}