{"version":3,"sources":["components/Canvas/popup/pins/pin_1.svg","components/Canvas/util/vector.ts","components/Canvas/util/common.ts","components/Canvas/util/structure.ts","types/shape.ts","types/note.ts","providers/AppSettingsProvider.tsx","providers/ConfigurationProvider.tsx","providers/NoteSettingsProvider.tsx","components/Version.tsx","components/Header.tsx","hooks/useContextBridge.tsx","types/common.ts","components/Canvas/provider/StructureProvider.tsx","components/Canvas/provider/DrawProvider.tsx","components/Canvas/layer/DrawLayer.tsx","components/Canvas/layer/GridLayer.tsx","components/Canvas/provider/SelectProvider.tsx","components/Canvas/shape/Beam.tsx","components/Canvas/provider/PopupProvider.tsx","components/Canvas/shape/Force.tsx","components/Canvas/shape/Guide.tsx","components/Canvas/shape/Node.tsx","components/Canvas/shape/Trapezoid.tsx","components/Canvas/layer/GuideLayer.tsx","components/Canvas/layer/ShapeLayer.tsx","components/Canvas/popup/ForceEditor.tsx","components/Canvas/popup/pins/pin_2.svg","components/Canvas/popup/pins/pin_3.svg","components/Canvas/popup/pins/pin_4.svg","components/Canvas/popup/PinSelector.tsx","components/Canvas/popup/TrapezoidEditor.tsx","components/Canvas/popup/index.tsx","components/Canvas/core.tsx","components/Canvas/provider/CanvasProvider.tsx","components/Canvas/index.tsx","components/Note/layer/Draw.tsx","components/Note/nodes/CanvasHandle/HeaderMenu.tsx","components/Note/nodes/CanvasHandle/index.tsx","components/Note/layer/Frame.tsx","components/Note/layer/Grid.tsx","components/Note/Page.tsx","components/Note/index.tsx","components/MainContainer.tsx","components/Toolbox/CanvasToolbox.tsx","components/Toolbox/NoteToolbox.tsx","components/Toolbox/index.tsx","components/Layout.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["_path","vX","Vector","vY","lerp","v1","v2","alpha","dir","clone","subtract","normalize","distance","mv","multiplyScalar","add","verticalNormalizeVector","v","y","x","dot","invert","data","JSON","parse","stringify","round","value","figure","n","result","Math","snapping","snapSize","i","snap","createNode","id","uuid","NodePinTypes","emptyStructure","unit","force","length","nodes","beams","forces","trapezoids","NoteModes","PageSize","A3","width","height","A4","B4","B5","MinCanvasSize","defaultDrawSettings","stroke","strokeWidth","eraser","lineJoin","lineCap","defaultPageProps","size","drawings","structures","AppSettingsContext","createContext","undefined","AppSettingsProvider","children","useState","mode","setMode","page","setPage","selectedCanvasIndex","setCanvasIndex","canvasProps","setCanvasProps","canvasRef","useRef","editCanvas","useCallback","props","closeCanvas","current","structure","getStructure","image","toDataURL","state","Provider","onChangeMode","onChange","onSelectCanvas","ConfigurationContext","ConfigurationProvider","tool","setTool","NoteSettingsContext","NoteSettingsProvider","settings","setSettings","onChangeDrawSettings","hash","process","substring","date","version","Version","Typography","variant","sx","ml","Header","AppBar","position","Toolbar","component","color","useContextBridge","contexts","cRef","React","map","context","useContext","useMemo","reduceRight","acc","Context","CanvasTools","StructureContext","StructureProvider","readonly","gridSize","source","setStructure","addForce","params","name","createForce","push","deleteForce","index","findIndex","splice","deleteTrapezoid","deleteBeam","nodeI","nodeJ","forEach","node","exists","some","j","filter","beam","DrawContext","DrawProvider","points","setPoints","isDrawing","beamRef","disabled","handlePointerDown","event","target","attrs","beamId","beamPoints","item","Array","isArray","every","point","getStage","getPointerPosition","handlePointerMove","makeBeam","start","end","edgeI","edgeJ","n1","find","n2","createBeam","makeTrapezoid","trapezoid","pi","slice","pj","bi","bj","beamLength","beamDirection","ps","pe","disStart","disEnd","ti","angle","r","cos","tj","distanceI","distanceJ","forceI","forceJ","isGlobal","createTrapezoid","handlePointerUp","_","onPointerDown","onPointerMove","onPointerUp","DrawLayer","ConnectedDrawLayer","defaultLineProps","dash","listening","GridLayer","horizontalLines","lines","count","verticalLines","SelectContext","SelectProvider","selected","setSelected","isSelected","type","select","toggle","Beam","onDelete","onSelect","labelPosition","setLabelPosition","labelWidth","setLabelWidth","labelAngle","setLabelAngle","guidePoints","setGuidePoints","viRef","vjRef","handleClick","cancelBubble","useEffect","vi","vj","label","angleDeg","guideDir","guideI","guideJ","onClick","onTap","rotation","text","fontSize","fill","align","wrap","ellipsis","Guide","ConnectedBeam","handleAddForce","vp","createForceParams","handleDelete","handleSelect","PopupContext","PopupProvider","popupType","setPopupType","top","left","popupPosition","setPopupPosition","popupParams","setPopupParams","open","close","Force","forceRatio","onEdit","setDistance","setRotation","tail","vertical","arrowLength","head","max","p","handleLabelClick","handleLabelDoubleClick","pointerLength","pointerWidth","offsetX","onDblClick","onDblTap","ConnectedForce","handleEdit","defaultGuideProps","defaultGuideArrowProps","pointerAtBeginning","GuideLine","v1Ref","v2Ref","basis","setBasis","dist","Pins","free","pin","pinX","pinZ","fixX","fix","Node","draggable","onCommit","isDragging","setIsDragging","pointRef","timerRef","imageUrl","useImage","redraw","handleDragStart","handleDragMove","handleDragEnd","clearInterval","handleDoubleClick","timer","setInterval","radius","onDragStart","onDragMove","onDragEnd","_useStrictMode","offsetY","ConnectedNode","handleChange","px","py","values","handleCommit","targetId","newId","defaultArrowProps","defaultLabelProps","Trapezoid","arrows","setArrows","line","setLine","labelI","setLabelI","labelJ","setLabelJ","vI","vJ","vd","rotateDeg","direction","interval","getInsidePoints","slope","NaN","intercept","isNaN","insideArrows","pd","pu","targetLine","slope1","intercept1","slope2","intercept2","rangeX","sort","a","b","rangeY","err","console","error","intercectPoint","arrow","guidePosition","gi","gj","ConnectedTrapezoid","GuideInterval","GuideLayer","guide","maxX","Number","MIN_SAFE_INTEGER","minX","MAX_SAFE_INTEGER","guidesX","maxY","minY","guidesY","pointsX","Set","pointsY","has","array","from","prev","key","localX","GlobalVerticalGuidePositionX","GlobalHorizontalGuidePositionY","ShapeLayerCore","items","average","reduce","c","Object","entries","ShapeLayer","ForceEditor","onClose","setValue","setError","handleSubmit","preventDefault","currentTarget","checkValidity","num","parseFloat","errorMessage","Paper","Stack","spacing","autoComplete","noValidate","onSubmit","TextField","margin","required","fullWidth","InputProps","endAdornment","InputAdornment","Boolean","helperText","justifyContent","Button","ConnectedForceEditor","isForce","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPin1","_ref","svgRef","title","titleId","viewBox","xmlns","ref","d","_circle","_circle2","_line","ForwardRef","SvgPin2","cx","cy","x1","y1","x2","y2","SvgPin3","style","_line2","_line3","_line4","_line5","SvgPin4","PinButtons","icon","SvgIcon","transform","defaultButtonProps","alignItems","PinSelector","setPin","newValue","ToggleButtonGroup","orientation","exclusive","ToggleButton","ConnectedPinSelector","isNode","validateForce","val","validateAngle","parseInt","TrapezoidEditor","setValues","errors","setErrors","value1","valid1","value2","valid2","value3","valid3","valid","parseFormValues","log","error1","error2","handleChangeIsGlobal","checked","toFormValues","FormControlLabel","control","Checkbox","ConnectedTrapezoidEditor","isTrapezoid","Popup","handleChangeForce","handleChangeTrapezoid","handleChangeNode","Box","zIndex","CanvasCore","ContextBridge","useImperativeHandle","forwardRef","CanvasProvider","Canvas","setSize","containerRef","observer","ResizeObserver","contentRect","observe","disconnect","backgroundColor","overscrollBehavior","Draw","lineProps","globalCompositeOperation","Background","styled","display","padding","Spacer","flex","HeaderMenu","visible","onCopy","onCancel","anchorEl","setAnchorEl","handleClickMore","handleCloseMenu","divProps","IconButton","Menu","MenuItem","CanvasHandle","dataURL","rectRef","tfRef","setDragging","noteMode","appMode","pageSize","visibleMenu","visibleTransformer","getLayer","batchDraw","rect","newPage","getSize","newX","newY","setPosition","getPosition","newRectProps","handleChangeBoundBox","oldBox","newBox","handleTransformEnd","scale","scaleX","scaleY","getBoundingClientRect","onTransformEnd","rotateEnabled","boundBoxFunc","Frame","Grid","layerSize","Page","stageRef","modified","abs","Note","setViewBox","overflow","MainContainer","boxSizing","mb","border","theme","palette","divider","borderRadius","ToolboxButtons","PanToolAlt","pen","ArrowDownward","Texture","delete","Delete","CanvasToolboxCore","CanvasToolbox","DrawModes","NoteModeButtons","edit","DrawModeButtons","AutoFixNormal","NoteToolboxCore","handleChangeMode","handleChangeTool","handleChangeStrokeWidth","handleChangeStroke","mt","Slider","min","step","marks","valueLabelDisplay","NoteToolbox","Toolbox","Layout","windowRect","setWindowRect","fitWindowSize","window","innerHeight","innerWidth","addEventListener","removeEventListener","flexDirection","flexWrap","pt","createTheme","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad85e435.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80 0 L30 80 L130 80 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin1);\nexport default __webpack_public_path__ + \"static/media/pin_1.92d54adc.svg\";\nexport { ForwardRef as ReactComponent };","import Vector from 'victor';\n\nexport { Vector };\n\n// X方向のベクトル\nexport const vX = new Vector(1, 0);\n// Y方向のベクトル\nexport const vY = new Vector(0, 1);\n\n/**\n * v1 と v2 の間にある vp を取得する\n * @param v1\n * @param v2\n * @param alpha\n * @returns\n */\nexport const lerp = (v1: Vector, v2: Vector, alpha: number): Vector => {\n    if (alpha >= 1) {\n        return v2;\n    }\n    if (alpha <= 0) {\n        return v1;\n    }\n    const dir = v2.clone().subtract(v1).normalize();\n    const distance = v1.distance(v2);\n    const mv = dir.multiplyScalar(distance * alpha);\n    return v1.clone().add(mv);\n};\n\n/**\n * v1 と v2 に直交する単位ベクトルを返す\n * @param v1\n * @param v2\n * @returns\n */\nexport const verticalNormalizeVector = (v1: Vector, v2: Vector): Vector => {\n    const dir = v2.clone().subtract(v1).normalize();\n    const v = new Vector(dir.y, dir.x * -1).normalize();\n\n    const value = vY.dot(v);\n    if (value > 0) {\n        v.invert();\n    }\n\n    return v;\n};\n","import { Point } from '../types';\nimport { lerp, Vector } from './vector';\n\nexport const clone = <T>(data: T): T => {\n    return JSON.parse(JSON.stringify(data)) as T;\n};\n\nexport const round = (value: number, figure = 3): number => {\n    const n = 10 ** figure;\n    const result = Math.round(value * n) / n;\n    return result;\n};\n\nconst snapping = (value: number, snapSize = 25): number => {\n    const n = value / snapSize;\n    const i = Math.round(n) * snapSize;\n    return i;\n};\n\nexport const DEFAULT_SNAP_SIZE = 25;\n\nexport const snap = ([x, y]: [number, number], snapSize = DEFAULT_SNAP_SIZE): [number, number] => {\n    return [snapping(x, snapSize), snapping(y, snapSize)];\n};\n\nconst InsideArrowCount = 10;\nconst InsideArrowInterval = 25;\nconst InsideArrowMinInterval = 10;\n\n/**\n * 開始点から終了点まで等間隔に点を取る\n * @param start\n * @param end\n * @param direction\n * @returns\n */\nexport const getInsidePoints = (start: Vector, end: Vector, direction: Vector): Vector[] => {\n    const points: Vector[] = [];\n    // 2点間の距離\n    const distance = start.distance(end);\n    // 分割数\n    let count = InsideArrowCount;\n    // 間隔\n    let interval = distance / (count + 1);\n    while (interval < InsideArrowInterval && count > 0) {\n        count--;\n        interval = distance / (count + 1);\n    }\n\n    if (count > 0) {\n        // 始点から interval の間隔で count 個 点を取る\n        for (let i = 1; i <= count; i++) {\n            const point = start.clone().add(direction.clone().multiplyScalar(interval * i));\n            points.push(point);\n        }\n    } else {\n        // 半分にしてみる\n        interval = distance / 2;\n        if (interval >= InsideArrowMinInterval) {\n            // 半分の位置に点を置く\n            const point = lerp(start, end, 0.5);\n            points.push(point);\n        }\n    }\n\n    return points;\n};\n\n/**\n * 開始点からある方向に伸ばした線が対象となる線と交わる点を取得する\n * @param targetLine 対象となる Line [始点、終点、傾き、切片]\n * @param start 開始点\n * @param dir 方向\n * @returns 交点（なければ null）\n */\nexport const intercectPoint = (\n    targetLine: [Vector, Vector, number, number],\n    start: Vector,\n    dir: Vector\n): Point | null => {\n    const [pi, pj, slope1, intercept1] = targetLine;\n    let point: Point | null = null;\n    try {\n        // dir の傾き\n        const end: Vector = start.clone().add(dir);\n        const slope2 = end.x - start.x !== 0 ? (end.y - start.y) / (end.x - start.x) : NaN;\n        // dir の切片\n        const intercept2 = isNaN(slope2) ? NaN : start.y - slope2 * start.x;\n\n        if (slope1 === slope2) {\n            // 平行なので交点なし\n            return null;\n        }\n\n        if (!isNaN(slope1) && !isNaN(slope2)) {\n            // どちらも垂直でない\n            const px = (intercept2 - intercept1) / (slope1 - slope2);\n            const py = slope1 * px + intercept1;\n\n            point = [px, py];\n        } else if (isNaN(slope1)) {\n            // 対象の Line が垂直\n            const px = pi.x;\n            const py = px * slope2 + intercept2;\n\n            point = [px, py];\n        } else if (isNaN(slope2)) {\n            // dir が垂直\n            const px = start.x;\n            const py = px * slope1 + intercept1;\n\n            point = [px, py];\n        }\n\n        // 交点が Line の内側？\n        if (point) {\n            const [x, y] = point;\n            const rangeX = [pi.x, pj.x].sort((a, b) => a - b);\n            const rangeY = [pi.y, pj.y].sort((a, b) => a - b);\n            if (x >= rangeX[0] && x <= rangeX[1] && y >= rangeY[0] && y <= rangeY[1]) {\n                return point;\n            }\n        }\n        return null;\n    } catch (err) {\n        console.error(err);\n    }\n\n    return null;\n};\n","import { v4 as uuid } from 'uuid';\nimport { Beam, Force, Node, Structure, Trapezoid } from '../../../types/shape';\nimport { round } from './common';\nimport { Vector } from './vector';\n\n/**\n * 節点の作成\n * @param x\n * @param y\n * @returns\n */\nexport const createNode = (x: number, y: number): Node => {\n    return {\n        id: uuid(),\n        x,\n        y,\n    };\n};\n\nexport const createBeam = (name: string, nodeI: string, nodeJ: string): Beam => {\n    return {\n        id: uuid(),\n        name,\n        nodeI,\n        nodeJ,\n    };\n};\n\ntype CreateForceParams = Omit<Force, 'id'>;\n\nexport const createForce = (params: CreateForceParams): Force => {\n    return {\n        ...params,\n        id: uuid(),\n    };\n};\n\nexport const createForceParams = (\n    beam: string,\n    vi: Vector,\n    vj: Vector,\n    vp: Vector\n): Omit<Force, 'id' | 'name'> => {\n    const beamLength = vi.distance(vj);\n    // クリック位置までの距離\n    const distance = vi.distance(vp);\n\n    return {\n        beam,\n        force: 10,\n        distanceI: round(distance / beamLength),\n    };\n};\n\nexport const replaceNode = (structure: Structure, targetId: string, newId: string): Structure => {\n    structure.beams.forEach((beam) => {\n        if (beam.nodeI === targetId) {\n            beam.nodeI = newId;\n        }\n        if (beam.nodeJ === targetId) {\n            beam.nodeJ = newId;\n        }\n    });\n    return structure;\n};\n\nexport const createTrapezoid = (\n    start: number[],\n    end: number[],\n    beamId: string,\n    beamPoints: number[]\n): Trapezoid => {\n    // 梁要素の情報\n    const pi = beamPoints.slice(0, 2);\n    const pj = beamPoints.slice(-2);\n    const bi = new Vector(pi[0], pi[1]);\n    const bj = new Vector(pj[0], pj[1]);\n    const beamLength = bi.distance(bj);\n    const beamDirection = bj.clone().subtract(bi).normalize();\n\n    // ドラッグ開始点/終了点\n    let ps = new Vector(start[0], start[1]);\n    let pe = new Vector(end[0], end[1]);\n    // 開始点と終了点のどちらが i端に近い？\n    let disStart = bi.distance(ps);\n    let disEnd = bi.distance(pe);\n    if (disStart > disEnd) {\n        // 終了点の方が i端に近ければ入れ替える\n        [ps, pe] = [pe, ps];\n        [disStart, disEnd] = [disEnd, disStart];\n    }\n\n    // 分布荷重の開始点を梁要素上の座標に取り直す\n    const ti = bi.clone().add(beamDirection.clone().multiplyScalar(disStart));\n    // ドラッグ方向\n    const dir = pe.clone().subtract(ti).normalize();\n    // 梁要素とドラッグ方向が成す角度\n    const angle = beamDirection.angle() - dir.angle();\n    // 開始点からドラッグ終了点までの長さ\n    const dragLength = ti.distance(pe);\n    // 角度と長さから分布荷重の終了点を計算する\n    const r = dragLength * Math.cos(angle);\n    const tj = ti.clone().add(beamDirection.clone().multiplyScalar(r));\n    // j端から分布荷重の終了点までの距離を取り直す\n    disEnd = bj.distance(tj);\n\n    // i端から開始点までの比率\n    const distanceI = round(disStart / beamLength, 3);\n    const distanceJ = round(disEnd / beamLength, 3);\n\n    const trapezoid: Trapezoid = {\n        id: uuid(),\n        name: 'Trapezoid_N', //仮に名前を設定\n        beam: beamId,\n        forceI: 10,\n        forceJ: 10,\n        distanceI,\n        distanceJ,\n        angle: 90,\n        isGlobal: false,\n    };\n\n    return trapezoid;\n};\n","/**\n * 単位: 力\n */\nexport const ForceUnitValues = ['N', 'kN'] as const;\n\n/**\n * 単位: 長さ\n */\nexport const LengthUnitValues = ['mm', 'cm', 'm'] as const;\n\nexport type ForceUnitType = typeof ForceUnitValues[number];\nexport type LengthUnitType = typeof LengthUnitValues[number];\n\n/**\n * 単位\n */\nexport interface Unit {\n    force: ForceUnitType;\n    length: LengthUnitType;\n}\n\nexport const NodePinTypes = ['free', 'pin', 'pinX', 'pinZ', 'fixX', 'fix'] as const;\nexport type NodePinType = typeof NodePinTypes[number];\n\nexport const isNodePinType = (item: unknown): item is NodePinType => {\n    if (typeof item === 'string') {\n        return NodePinTypes.some((type) => type === item);\n    }\n    return false;\n};\n\nexport interface Node {\n    id: string;\n    x: number;\n    y: number;\n    pin?: NodePinType;\n}\n\nexport const isNode = (item: unknown): item is Node => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.x === 'number' &&\n            typeof value.y === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Beam {\n    id: string;\n    name: string;\n    nodeI: string;\n    nodeJ: string;\n}\n\nexport interface Force {\n    id: string;\n    name: string;\n    beam: string;\n    force: number;\n    // i端からの距離 (0 〜 1)\n    distanceI: number;\n}\nexport const isForce = (item: unknown): item is Force => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.name === 'string' &&\n            typeof value.beam === 'string' &&\n            typeof value.force === 'number' &&\n            typeof value.distanceI === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Trapezoid {\n    id: string;\n    name: string;\n    beam: string;\n    // kN/m\n    forceI: number;\n    // kN/m\n    forceJ: number;\n    // i端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceI: number;\n    // j端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceJ: number;\n    // 角度、デフォルト 90度、-179 〜 180 度の間で指定 (-180 = 180)\n    angle?: number;\n    // 全体座標系に垂直か、部材に垂直か デフォルト false\n    isGlobal?: boolean;\n}\n\nexport const isTrapezoid = (item: unknown): item is Trapezoid => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.name === 'string' &&\n            typeof value.beam === 'string' &&\n            typeof value.forceI === 'number' &&\n            typeof value.distanceI === 'number' &&\n            typeof value.forceJ === 'number' &&\n            typeof value.distanceJ === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Structure {\n    unit: Unit;\n    nodes: Node[];\n    beams: Beam[];\n    forces: Force[];\n    trapezoids: Trapezoid[];\n}\n\nexport type StructureFieldType = keyof Omit<Structure, 'unit'>;\n\nexport const defaultUnit: Unit = {\n    force: 'kN',\n    length: 'm',\n};\n\nexport const emptyStructure: Structure = {\n    unit: defaultUnit,\n    nodes: [],\n    beams: [],\n    forces: [],\n    trapezoids: [],\n};\n","import { LineCap, LineJoin } from 'konva/lib/Shape';\nimport { DOMSize } from './common';\nimport { emptyStructure, Structure } from './shape';\n\nconst NoteModes = ['select', 'edit'] as const;\nexport type NoteMode = typeof NoteModes[number];\nexport const isNoteMode = (item: unknown): item is NoteMode => {\n    if (typeof item === 'string') {\n        return NoteModes.some((mode) => mode === item);\n    }\n    return false;\n};\n\nexport const PageSizeTypes = ['A4', 'A3', 'B5', 'B4'] as const;\nexport type PageSizeType = typeof PageSizeTypes[number];\n\nexport const PageSize: Record<PageSizeType, DOMSize> = {\n    A3: {\n        width: 0,\n        height: 0,\n    },\n    A4: {\n        width: 2970,\n        height: 2100,\n    },\n    B4: {\n        width: 0,\n        height: 0,\n    },\n    B5: {\n        width: 0,\n        height: 0,\n    },\n};\n\nexport interface StructureCanvasProps {\n    data: Structure;\n    image?: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport const MinCanvasSize: DOMSize = {\n    width: 160,\n    height: 90,\n};\n\nexport interface DrawingProps {\n    stroke: string;\n    strokeWidth: number;\n    eraser?: boolean;\n    points: number[];\n    lineJoin?: LineJoin;\n    lineCap?: LineCap;\n}\nexport type DrawSettings = Omit<DrawingProps, 'points'>;\nexport const defaultDrawSettings: DrawSettings = {\n    stroke: '#000000',\n    strokeWidth: 4,\n    eraser: false,\n    lineJoin: 'round',\n    lineCap: 'round',\n};\n\nexport interface PageProps {\n    size: PageSizeType;\n    drawings: DrawingProps[];\n    structures: StructureCanvasProps[];\n}\n\nexport const defaultPageProps: PageProps = {\n    size: 'A4',\n    drawings: [],\n    structures: [\n        {\n            data: emptyStructure,\n            x: 100,\n            y: 100,\n            ...MinCanvasSize,\n        },\n    ],\n};\n","import {\n    createContext,\n    Dispatch,\n    RefObject,\n    SetStateAction,\n    useCallback,\n    useRef,\n    useState,\n} from 'react';\nimport { CanvasHandler } from '../components/Canvas';\nimport { clone } from '../components/Canvas/util';\nimport { AppMode, ShapeBaseProps } from '../types/common';\nimport { defaultPageProps, PageProps } from '../types/note';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface IAppSettingsContext {\n    mode: AppMode;\n    onChangeMode: Dispatch<SetStateAction<AppMode>>;\n    page: PageProps;\n    onChange: Dispatch<SetStateAction<PageProps>>;\n    selectedCanvasIndex?: number;\n    onSelectCanvas: Dispatch<SetStateAction<number | undefined>>;\n    canvasProps?: ShapeBaseProps;\n    editCanvas: (props: ShapeBaseProps) => void;\n    closeCanvas: VoidFunction;\n    canvasRef: RefObject<CanvasHandler>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const AppSettingsContext = createContext<IAppSettingsContext>(undefined!);\n\nconst AppSettingsProvider: React.VFC<Props> = ({ children }) => {\n    const [mode, setMode] = useState<AppMode>('note');\n    const [page, setPage] = useState<PageProps>(defaultPageProps);\n    const [selectedCanvasIndex, setCanvasIndex] = useState<number>();\n    const [canvasProps, setCanvasProps] = useState<ShapeBaseProps>();\n    const canvasRef = useRef<CanvasHandler>(null);\n\n    const editCanvas = useCallback((props: ShapeBaseProps) => {\n        setMode('canvas');\n        setCanvasProps(props);\n    }, []);\n\n    const closeCanvas = useCallback(() => {\n        if (canvasRef.current) {\n            // 更新した構造データを取得する\n            const structure = canvasRef.current.getStructure();\n            const image = canvasRef.current.toDataURL();\n\n            // 選択中のキャンバスのデータを更新\n            if (typeof selectedCanvasIndex === 'number') {\n                setPage((state) => {\n                    const data = clone(state);\n                    data.structures[selectedCanvasIndex].data = structure;\n                    data.structures[selectedCanvasIndex].image = image;\n                    return data;\n                });\n            }\n        }\n\n        // 状態をリセット\n        setMode('note');\n        setCanvasProps(undefined);\n    }, [selectedCanvasIndex]);\n\n    return (\n        <AppSettingsContext.Provider\n            value={{\n                mode,\n                onChangeMode: setMode,\n                page,\n                onChange: setPage,\n                selectedCanvasIndex,\n                onSelectCanvas: setCanvasIndex,\n                canvasProps,\n                editCanvas,\n                closeCanvas,\n                canvasRef,\n            }}\n        >\n            {children}\n        </AppSettingsContext.Provider>\n    );\n};\n\nexport default AppSettingsProvider;\n","import { createContext, useState } from 'react';\nimport { CanvasTool } from '../types/common';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface IConfigurationContext {\n    tool: CanvasTool;\n    setTool: (tool: CanvasTool) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const ConfigurationContext = createContext<IConfigurationContext>(undefined!);\n\nconst ConfigurationProvider: React.VFC<Props> = ({ children }) => {\n    const [tool, setTool] = useState<CanvasTool>('select');\n\n    return (\n        <ConfigurationContext.Provider value={{ tool, setTool }}>\n            {children}\n        </ConfigurationContext.Provider>\n    );\n};\n\nexport default ConfigurationProvider;\n","import { createContext, Dispatch, SetStateAction, useState } from 'react';\nimport { defaultDrawSettings, DrawSettings, NoteMode } from '../types/note';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface INoteSettingsContext {\n    mode: NoteMode;\n    settings: DrawSettings;\n    onChangeMode: Dispatch<SetStateAction<NoteMode>>;\n    onChangeDrawSettings: Dispatch<SetStateAction<DrawSettings>>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const NoteSettingsContext = createContext<INoteSettingsContext>(undefined!);\n\nconst NoteSettingsProvider: React.VFC<Props> = ({ children }) => {\n    const [mode, setMode] = useState<NoteMode>('select');\n    const [settings, setSettings] = useState<DrawSettings>(defaultDrawSettings);\n\n    return (\n        <NoteSettingsContext.Provider\n            value={{ mode, settings, onChangeMode: setMode, onChangeDrawSettings: setSettings }}\n        >\n            {children}\n        </NoteSettingsContext.Provider>\n    );\n};\n\nexport default NoteSettingsProvider;\n","import { Typography } from '@mui/material';\n\nconst hash = process.env.REACT_APP_GIT_COMMIT_HASH?.substring(0, 7) ?? '';\nconst date = process.env.REACT_APP_GIT_COMMIT_DATE ?? '';\nconst version = process.env.REACT_APP_PACKAGE_VERSION ?? '';\n\nconst Version: React.VFC = () => {\n    return (\n        <Typography\n            variant=\"caption\"\n            sx={{ ml: 2 }}\n        >{`ver ${version} (${hash}: ${date})`}</Typography>\n    );\n};\n\nexport default Version;\n","import { AppBar, Toolbar, Typography } from '@mui/material';\nimport Version from './Version';\n\nconst Header: React.VFC = () => {\n    return (\n        <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\">\n                    Drawing Sample\n                </Typography>\n                <Version />\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Header;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react';\n\n// https://github.com/pmndrs/drei/blob/master/src/core/useContextBridge.tsx\nexport const useContextBridge = (...contexts: Array<React.Context<any>>) => {\n    const cRef = React.useRef<Array<React.Context<any>>>([]);\n    cRef.current = contexts.map((context) => React.useContext(context));\n\n    return React.useMemo(\n        () =>\n            ({ children }: { children: React.ReactNode }): JSX.Element =>\n                contexts.reduceRight(\n                    (acc, Context, i) => (\n                        <Context.Provider value={cRef.current[i]} children={acc} />\n                    ),\n                    children\n                ) as unknown as JSX.Element,\n        [contexts]\n    );\n};\n","// --- app 共通 ---\nexport interface DOMSize {\n    width: number;\n    height: number;\n}\n\nexport interface ShapePosition {\n    x: number;\n    y: number;\n}\n\nexport type ShapeBaseProps = DOMSize & ShapePosition;\n\nexport const AppModes = ['note', 'canvas'] as const;\nexport type AppMode = typeof AppModes[number];\n\n// --- canvas関係 ---\n\nexport const CanvasTools = ['select', 'pen', 'force', 'trapezoid', 'delete'] as const;\nexport type CanvasTool = typeof CanvasTools[number];\nexport const isCanvasTool = (item: unknown): item is CanvasTool => {\n    if (typeof item === 'string') {\n        return CanvasTools.some((tool) => tool === item);\n    }\n    return false;\n};\n\nexport const isNumberArray = (item: unknown): item is number[] => {\n    if (Array.isArray(item)) {\n        if (item.length === 0) {\n            return true;\n        }\n\n        return item.every((value) => typeof value === 'number');\n    }\n    return false;\n};\n","import { createContext, Dispatch, SetStateAction, useCallback, useState } from 'react';\nimport { CanvasTool, DOMSize } from '../../../types/common';\nimport { Force, Structure } from '../../../types/shape';\nimport { clone, createForce } from '../util';\n\nexport interface StructureProviderProps {\n    children: React.ReactNode;\n    size: DOMSize;\n    structure: Structure;\n    gridSize?: number;\n    snapSize?: number;\n    tool?: CanvasTool;\n    readonly?: boolean;\n}\n\ntype AddForceFunction = (params: Omit<Force, 'id' | 'name'>) => void;\n\ninterface IStructureContext {\n    // 選択されているツール\n    tool: CanvasTool;\n    // 編集可否\n    readonly?: boolean;\n    // キャンバスのサイズ\n    size: DOMSize;\n    // グリッドの幅\n    gridSize: number;\n    // スナップする単位\n    snapSize: number;\n    // 単位変換された構造データ\n    structure: Structure;\n    // 集中荷重の追加\n    addForce: AddForceFunction;\n    // 集中荷重の削除\n    deleteForce: (id: string) => void;\n    // 分布荷重の削除\n    deleteTrapezoid: (id: string) => void;\n    // 梁要素の削除\n    deleteBeam: (id: string) => void;\n    // 構造データの更新\n    setStructure: Dispatch<SetStateAction<Structure>>;\n}\n\n// Context | React TypeScript Cheatsheets\n// https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/context/\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const StructureContext = createContext<IStructureContext>(undefined!);\n\nconst StructureProvider: React.VFC<StructureProviderProps> = ({\n    children,\n    tool = 'select',\n    readonly = false,\n    size,\n    gridSize = 25,\n    snapSize = 25,\n    structure: source,\n}) => {\n    // データ\n    const [structure, setStructure] = useState(source);\n\n    const addForce = useCallback(\n        (params: Omit<Force, 'id' | 'name'>) => {\n            if (readonly) {\n                return;\n            }\n\n            const data = clone(structure);\n            const name = `Force_${data.forces.length + 1}`;\n            const force = createForce({ name, ...params });\n            data.forces.push(force);\n            setStructure(data);\n        },\n        [readonly, structure]\n    );\n\n    const deleteForce = useCallback(\n        (id: string) => {\n            if (readonly) {\n                return;\n            }\n\n            const index = structure.forces.findIndex(({ id: itemId }) => itemId === id);\n            if (index >= 0) {\n                const data = clone(structure);\n                data.forces.splice(index, 1);\n                setStructure(data);\n            }\n        },\n        [readonly, structure]\n    );\n\n    const deleteTrapezoid = useCallback(\n        (id: string) => {\n            if (readonly) {\n                return;\n            }\n\n            const index = structure.trapezoids.findIndex(({ id: itemId }) => itemId === id);\n            if (index >= 0) {\n                const data = clone(structure);\n                data.trapezoids.splice(index, 1);\n                setStructure(data);\n            }\n        },\n        [readonly, structure]\n    );\n\n    const deleteBeam = useCallback(\n        (id: string) => {\n            if (readonly) {\n                return;\n            }\n\n            const index = structure.beams.findIndex(({ id: itemId }) => itemId === id);\n            if (index >= 0) {\n                const { nodeI, nodeJ } = structure.beams[index];\n                // 梁要素を削除\n                const data = clone(structure);\n                data.beams.splice(index, 1);\n\n                // beam の両端の節点について、該当 beam 以外で使用していなければ削除\n                [nodeI, nodeJ].forEach((node) => {\n                    // 他 beam で使用されていないかチェック\n                    const exists = data.beams.some(({ nodeI: i, nodeJ: j }) => {\n                        return node === i || node === j;\n                    });\n\n                    if (!exists) {\n                        // 該当 node を削除\n                        const i = data.nodes.findIndex(({ id: nodeId }) => nodeId === node);\n                        if (i >= 0) {\n                            data.nodes.splice(i, 1);\n                        }\n                    }\n                });\n\n                // beam に紐づく集中荷重を削除\n                const forces = data.forces.filter(({ beam }) => beam !== id);\n                data.forces = forces;\n                // beam に紐づく分布荷重を削除\n                const trapezoids = data.trapezoids.filter(({ beam }) => beam !== id);\n                data.trapezoids = trapezoids;\n\n                setStructure(data);\n            }\n        },\n        [readonly, structure]\n    );\n\n    return (\n        <StructureContext.Provider\n            value={{\n                tool,\n                readonly,\n                size,\n                gridSize,\n                snapSize,\n                structure,\n                addForce,\n                deleteForce,\n                deleteTrapezoid,\n                deleteBeam,\n                setStructure,\n            }}\n        >\n            {children}\n        </StructureContext.Provider>\n    );\n};\n\nexport default StructureProvider;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport {\n    createContext,\n    ReactNode,\n    useCallback,\n    useContext,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { isNumberArray } from '../../../types/common';\nimport { clone, createBeam, createNode, createTrapezoid, DEFAULT_SNAP_SIZE, snap } from '../util';\nimport { StructureContext } from './StructureProvider';\n\ninterface IDrawContext {\n    points: number[];\n    onPointerDown: (event: KonvaEventObject<Event>) => void;\n    onPointerMove: (event: KonvaEventObject<Event>) => void;\n    onPointerUp: (event: KonvaEventObject<Event>) => void;\n}\n\ninterface Props {\n    children: ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const DrawContext = createContext<IDrawContext>(undefined!);\n\ntype BeamAttrs = {\n    id: string;\n    points: number[];\n};\n\nconst DrawProvider: React.VFC<Props> = ({ children }) => {\n    const { tool, readonly = false, setStructure } = useContext(StructureContext);\n    // 描画する点\n    const [points, setPoints] = useState<number[]>([]);\n\n    const isDrawing = useRef<boolean>();\n    const beamRef = useRef<BeamAttrs>();\n\n    const disabled = useMemo(() => {\n        if (!readonly) {\n            return !(tool === 'pen' || tool === 'trapezoid');\n        }\n        return true;\n    }, [readonly, tool]);\n\n    const handlePointerDown = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n\n            if (tool === 'trapezoid') {\n                // 梁要素の選択でなければ無視する\n                if (event.target.attrs['type'] !== 'beam') {\n                    return;\n                }\n                const beamId = event.target.attrs['id'];\n                const beamPoints = event.target.attrs['points'];\n                if (isNumberArray(beamPoints) && typeof beamId === 'string') {\n                    beamRef.current = {\n                        id: beamId,\n                        points: beamPoints,\n                    };\n                }\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                isDrawing.current = true;\n                setPoints([point.x, point.y]);\n            }\n        },\n        [disabled, setPoints, tool]\n    );\n\n    const handlePointerMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                setPoints((state) => [...state, point.x, point.y]);\n            }\n        },\n        [disabled, setPoints]\n    );\n\n    const makeBeam = useCallback(\n        (start: number[], end: number[]) => {\n            if (setStructure) {\n                // スナップさせる\n                const edgeI = snap([start[0], start[1]], DEFAULT_SNAP_SIZE);\n                const edgeJ = snap([end[0], end[1]], DEFAULT_SNAP_SIZE);\n\n                setStructure((structure) => {\n                    const data = clone(structure);\n                    const nodeI = createNode(...edgeI);\n                    // 同一座標の節点が存在するか？\n                    const n1 = data.nodes.find((node) => node.x === nodeI.x && node.y === nodeI.y);\n                    if (n1) {\n                        // 既存の節点を使用する\n                        nodeI.id = n1.id;\n                    } else {\n                        // 新規追加\n                        data.nodes.push(nodeI);\n                    }\n\n                    const nodeJ = createNode(...edgeJ);\n                    const n2 = data.nodes.find((node) => node.x === nodeJ.x && node.y === nodeJ.y);\n                    if (n2) {\n                        // 既存の節点を使用する\n                        nodeJ.id = n2.id;\n                    } else {\n                        // 新規追加\n                        data.nodes.push(nodeJ);\n                    }\n\n                    const name = `Beam_${data.beams.length + 1}`;\n                    const beam = createBeam(name, nodeI.id, nodeJ.id);\n                    data.beams.push(beam);\n\n                    return data;\n                });\n            }\n        },\n        [setStructure]\n    );\n\n    const makeTrapezoid = useCallback(\n        (start: number[], end: number[], attrs: BeamAttrs) => {\n            if (setStructure) {\n                // 分布荷重の登録\n                const trapezoid = createTrapezoid(start, end, attrs.id, attrs.points);\n                setStructure((structure) => {\n                    const data = clone(structure);\n\n                    // 分布荷重を追加\n                    const name = `Trapezoid_${data.trapezoids.length + 1}`;\n                    trapezoid.name = name;\n                    data.trapezoids.push(trapezoid);\n\n                    return data;\n                });\n            }\n        },\n        [setStructure]\n    );\n\n    const handlePointerUp = useCallback(\n        (_: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n\n            if (isDrawing.current) {\n                isDrawing.current = false;\n\n                if (points.length >= 4) {\n                    // 開始点\n                    const start = points.slice(0, 2);\n                    // 終了点\n                    const end = points.slice(-2);\n\n                    if (tool === 'pen') {\n                        // 梁要素の生成\n                        makeBeam(start, end);\n                    } else if (tool === 'trapezoid' && beamRef.current) {\n                        // 分布荷重の生成\n                        makeTrapezoid(start, end, beamRef.current);\n                    }\n\n                    setPoints([]);\n                    beamRef.current = undefined;\n                }\n            }\n        },\n        [disabled, makeBeam, makeTrapezoid, points, setPoints, tool]\n    );\n\n    return (\n        <DrawContext.Provider\n            value={{\n                points,\n                onPointerDown: handlePointerDown,\n                onPointerMove: handlePointerMove,\n                onPointerUp: handlePointerUp,\n            }}\n        >\n            {children}\n        </DrawContext.Provider>\n    );\n};\n\nexport default DrawProvider;\n","import { useContext, useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { CanvasTool } from '../../../types/common';\nimport { DrawContext } from '../provider/DrawProvider';\nimport { StructureContext } from '../provider/StructureProvider';\n\ninterface Props {\n    tool: CanvasTool;\n    points: number[];\n}\n\nconst DrawLayer: React.VFC<Props> = ({ tool, points }) => {\n    const color = useMemo(() => {\n        switch (tool) {\n            case 'pen':\n                return 'blue';\n            case 'trapezoid':\n                return 'red';\n            default:\n                return 'black';\n        }\n    }, [tool]);\n\n    return (\n        <Layer>\n            <Line points={points} strokeWidth={3} stroke={color} />\n        </Layer>\n    );\n};\n\nconst ConnectedDrawLayer: React.VFC = () => {\n    const { tool } = useContext(StructureContext);\n    const { points } = useContext(DrawContext);\n    return <DrawLayer tool={tool} points={points} />;\n};\n\nexport default ConnectedDrawLayer;\n","import { useContext, useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { StructureContext } from '../provider/StructureProvider';\n\ninterface LineProps {\n    id: string;\n    points: number[];\n    stroke: string;\n    strokeWidth: number;\n    dash: [number, number];\n    listening: boolean;\n}\n\nconst defaultLineProps: LineProps = {\n    id: '',\n    points: [],\n    stroke: '#c9e1ff',\n    strokeWidth: 1,\n    dash: [5, 3],\n    listening: false,\n};\n\nconst GridLayer: React.VFC = () => {\n    // キャンバスサイズ, グリッドの幅\n    const { size, gridSize } = useContext(StructureContext);\n\n    const horizontalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let y = 0; y <= size.height; y += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Horizontal_${count}`,\n                points: [0, y, size.width, y],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    const verticalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let x = 0; x <= size.width; x += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Vertical_${count}`,\n                points: [x, 0, x, size.height],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    return (\n        <Layer listening={false}>\n            {/* horizontal */}\n            {horizontalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n            {/* vertical */}\n            {verticalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GridLayer;\n","import { createContext, Dispatch, ReactNode, SetStateAction, useCallback, useState } from 'react';\nimport { Shape } from '../types';\n\ninterface ISelectContext {\n    selected: Shape[];\n    setSelected: Dispatch<SetStateAction<Shape[]>>;\n    isSelected: (item: Shape) => boolean;\n    select: (item: Shape) => void;\n    toggle: (item: Shape) => void;\n}\n\ninterface Props {\n    children: ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const SelectContext = createContext<ISelectContext>(undefined!);\n\n/**\n * 要素選択 provider\n */\nconst SelectProvider: React.VFC<Props> = ({ children }) => {\n    // 選択要素\n    const [selected, setSelected] = useState<Shape[]>([]);\n\n    const isSelected = useCallback(\n        (item: Shape) => {\n            return selected.some(({ type, id }) => type === item.type && id === item.id);\n        },\n        [selected]\n    );\n\n    const select = useCallback(\n        (item: Shape) => {\n            if (!isSelected(item)) {\n                setSelected((state) => [...state, item]);\n            }\n        },\n        [isSelected, setSelected]\n    );\n\n    const toggle = useCallback(\n        (item: Shape) => {\n            if (isSelected(item)) {\n                // 削除\n                setSelected((state) =>\n                    state.filter(({ type, id }) => !(type === item.type && id === item.id))\n                );\n            } else {\n                // 追加\n                setSelected((state) => [...state, item]);\n            }\n        },\n        [isSelected, setSelected]\n    );\n\n    return (\n        <SelectContext.Provider\n            value={{\n                selected,\n                setSelected,\n                isSelected,\n                select,\n                toggle,\n            }}\n        >\n            {children}\n        </SelectContext.Provider>\n    );\n};\n\nexport default SelectProvider;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Vector2d } from 'konva/lib/types';\nimport { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { Line, Text } from 'react-konva';\nimport { Guide } from '.';\nimport { CanvasTool } from '../../../types/common';\nimport { SelectContext } from '../provider/SelectProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { BeamProps, Point } from '../types';\nimport { createForceParams, Vector, verticalNormalizeVector } from '../util';\n\ninterface Props extends BeamProps {\n    tool: CanvasTool;\n    selected?: boolean;\n    addForce: (point: Vector2d, vi: Vector, vj: Vector) => void;\n    onDelete: VoidFunction;\n    onSelect: VoidFunction;\n}\n\nconst Beam: React.VFC<Props> = ({\n    id,\n    name,\n    nodeI,\n    nodeJ,\n    tool,\n    selected = false,\n    addForce,\n    onDelete,\n    onSelect,\n}) => {\n    const [points, setPoints] = useState<number[]>([]);\n    const [labelPosition, setLabelPosition] = useState<Point>([0, 0]);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const [labelAngle, setLabelAngle] = useState(0);\n    const [guidePoints, setGuidePoints] = useState<[Point, Point]>([\n        [0, 0],\n        [0, 0],\n    ]);\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    /**\n     * beam をクリック\n     * - 該当位置に集中荷重を追加する\n     * - 該当要素を削除\n     */\n    const handleClick = useCallback(\n        (event: KonvaEventObject<MouseEvent>) => {\n            // 集中荷重の追加モードの場合\n            if (tool === 'force') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                if (point) {\n                    addForce(point, viRef.current, vjRef.current);\n                    // イベントの伝播を止める\n                    event.cancelBubble = true;\n                }\n            } else if (tool === 'delete') {\n                // 梁要素の削除\n                onDelete();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            } else if (tool === 'select') {\n                // 梁要素の選択\n                onSelect();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            }\n        },\n        [addForce, onDelete, onSelect, tool]\n    );\n\n    useEffect(() => {\n        setPoints([nodeI.x, nodeI.y, nodeJ.x, nodeJ.y]);\n        viRef.current.x = nodeI.x;\n        viRef.current.y = nodeI.y;\n        vjRef.current.x = nodeJ.x;\n        vjRef.current.y = nodeJ.y;\n\n        if (selected) {\n            // 必ず左から右になるようにする\n            let vi = viRef.current;\n            let vj = vjRef.current;\n            if (vi.x > vj.x) {\n                [vi, vj] = [vj, vi];\n            }\n\n            // 梁要素の長さ\n            const distance = vi.distance(vj);\n            // 梁要素に対して垂直なベクトル\n            const dir = verticalNormalizeVector(vi, vj);\n            // ラベル位置\n            const label = vi.clone().add(dir.clone().multiplyScalar(16));\n            // ラベル方向\n            const angle = vj.clone().subtract(vi).angleDeg();\n            // 寸法線位置\n            const guideDir = dir.clone().multiplyScalar(75);\n            const guideI = vi.clone().add(guideDir);\n            const guideJ = vj.clone().add(guideDir);\n\n            setLabelWidth(distance);\n            setLabelPosition([label.x, label.y]);\n            setLabelAngle(angle);\n            setGuidePoints([\n                [guideI.x, guideI.y],\n                [guideJ.x, guideJ.y],\n            ]);\n        }\n    }, [nodeI.x, nodeI.y, nodeJ.x, nodeJ.y, selected]);\n\n    return (\n        <>\n            <Line\n                id={id}\n                type=\"beam\"\n                points={points}\n                stroke={selected ? 'blue' : 'black'}\n                strokeWidth={4}\n                onClick={handleClick}\n                onTap={handleClick}\n            />\n            {selected && (\n                <>\n                    {/* ラベル */}\n                    <Text\n                        x={labelPosition[0]}\n                        y={labelPosition[1]}\n                        rotation={labelAngle}\n                        text={name}\n                        fontSize={12}\n                        width={labelWidth}\n                        fill=\"blue\"\n                        align=\"center\"\n                        wrap=\"none\"\n                        ellipsis\n                        listening={false}\n                    />\n                    {/* 寸法線 */}\n                    <Guide start={guidePoints[0]} end={guidePoints[1]} />\n                </>\n            )}\n        </>\n    );\n};\n\nconst ConnectedBeam: React.VFC<BeamProps> = (props) => {\n    const { tool, addForce, deleteBeam } = useContext(StructureContext);\n    const { isSelected, toggle } = useContext(SelectContext);\n\n    const handleAddForce = useCallback(\n        (point: Vector2d, vi: Vector, vj: Vector) => {\n            const vp = new Vector(point.x, point.y);\n            const force = createForceParams(props.id, vi, vj, vp);\n            addForce(force);\n        },\n        [addForce, props.id]\n    );\n\n    const handleDelete = useCallback(() => {\n        deleteBeam(props.id);\n    }, [deleteBeam, props.id]);\n\n    const handleSelect = useCallback(() => {\n        toggle({ type: 'beams', id: props.id });\n    }, [props.id, toggle]);\n\n    return (\n        <Beam\n            {...props}\n            tool={tool}\n            selected={isSelected({ type: 'beams', id: props.id })}\n            addForce={handleAddForce}\n            onDelete={handleDelete}\n            onSelect={handleSelect}\n        />\n    );\n};\n\nexport default ConnectedBeam;\n","import { createContext, Dispatch, ReactNode, SetStateAction, useCallback, useState } from 'react';\nimport { PopupParams, PopupPosition, PopupType } from '../popup/types';\n\ninterface IPopupContext {\n    popupType?: PopupType;\n    setPopupType: Dispatch<SetStateAction<PopupType | undefined>>;\n    popupPosition: PopupPosition;\n    setPopupPosition: Dispatch<SetStateAction<PopupPosition>>;\n    open: (popup: PopupType, position: PopupPosition, popupParams?: PopupParams) => void;\n    close: VoidFunction;\n    popupParams?: PopupParams;\n}\n\ninterface Props {\n    children: ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const PopupContext = createContext<IPopupContext>(undefined!);\n\nconst PopupProvider: React.VFC<Props> = ({ children }) => {\n    // ポップアップの種類\n    const [popupType, setPopupType] = useState<PopupType>();\n    // ポップアップの位置\n    const [popupPosition, setPopupPosition] = useState<PopupPosition>({ top: 0, left: 0 });\n    // パラメータ\n    const [popupParams, setPopupParams] = useState<PopupParams>({});\n\n    const open = useCallback(\n        (type: PopupType, position: PopupPosition, params?: PopupParams) => {\n            setPopupType(type);\n            setPopupPosition(position);\n            if (params) {\n                setPopupParams(params);\n            }\n        },\n        [setPopupPosition, setPopupType]\n    );\n\n    const close = useCallback(() => {\n        setPopupType(undefined);\n        setPopupPosition({ top: 0, left: 0 });\n        setPopupParams({});\n    }, [setPopupPosition, setPopupType]);\n\n    return (\n        <PopupContext.Provider\n            value={{\n                popupType,\n                setPopupType,\n                popupPosition,\n                setPopupPosition,\n                open,\n                close,\n                popupParams,\n            }}\n        >\n            {children}\n        </PopupContext.Provider>\n    );\n};\n\nexport default PopupProvider;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Arrow, Text } from 'react-konva';\nimport { CanvasTool } from '../../../types/common';\nimport { Force as IForce } from '../../../types/shape';\nimport { PopupParams, PopupPosition } from '../popup/types';\nimport { PopupContext } from '../provider/PopupProvider';\nimport { SelectContext } from '../provider/SelectProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { ForceProps, Point } from '../types';\nimport { lerp, Vector, verticalNormalizeVector, vX } from '../util';\n\ninterface Props extends ForceProps {\n    tool: CanvasTool;\n    selected?: boolean;\n    onDelete: VoidFunction;\n    onSelect: VoidFunction;\n    onEdit: (position: PopupPosition) => void;\n}\n\nconst BaseLength = 30;\n\nconst Force: React.VFC<Props> = ({\n    beam,\n    distanceI,\n    force,\n    forceRatio,\n    tool,\n    selected = false,\n    onDelete,\n    onSelect,\n    onEdit,\n}) => {\n    const [points, setPoints] = useState<number[]>([]);\n    const [distance, setDistance] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    const [labelPosition, setLabelPosition] = useState<Point>([0, 0]);\n\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    useEffect(() => {\n        const { nodeI, nodeJ } = beam;\n\n        // i端、j端\n        viRef.current.x = nodeI.x;\n        viRef.current.y = nodeI.y;\n        vjRef.current.x = nodeJ.x;\n        vjRef.current.y = nodeJ.y;\n        // 矢印の先端\n        const tail = lerp(viRef.current, vjRef.current, distanceI);\n        // 梁に直交する単位ベクトル\n        const vertical = verticalNormalizeVector(viRef.current, vjRef.current);\n        // 矢印の開始点\n        const arrowLength = BaseLength * forceRatio;\n        const head = tail.clone().add(vertical.multiplyScalar(arrowLength));\n\n        setPoints([head.x, head.y, tail.x, tail.y]);\n\n        // ラベル描画用\n        setDistance(Math.max(arrowLength, 140));\n        const angle = vertical.clone().angleDeg();\n        setRotation(angle);\n        const dir = viRef.current.clone().subtract(vjRef.current).normalize();\n        if (vX.dot(dir) < 0) {\n            dir.invert();\n        }\n        const p = tail.clone().add(dir.multiplyScalar(6));\n        setLabelPosition([p.x, p.y]);\n    }, [beam, distanceI, forceRatio]);\n\n    const handleClick = useCallback(\n        (event: KonvaEventObject<MouseEvent>) => {\n            if (tool === 'delete') {\n                onDelete();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            } else if (tool === 'select') {\n                onSelect();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            }\n        },\n        [onDelete, onSelect, tool]\n    );\n\n    const handleLabelClick = useCallback((event: KonvaEventObject<MouseEvent>) => {\n        // ダブルクリック時にはクリックイベントも発生する\n        // 何もバインドしていないと Stage のクリックイベント（選択解除）が発生するので\n        // イベントの伝播を止めるだけのイベントハンドラを設定する\n        event.cancelBubble = true;\n    }, []);\n\n    const handleLabelDoubleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                const { x, y } = point;\n                // ポップアップを開く\n                onEdit({ top: y, left: x });\n            }\n        },\n        [onEdit]\n    );\n\n    const color = useMemo(() => {\n        return selected ? 'red' : 'orange';\n    }, [selected]);\n\n    return (\n        <>\n            <Arrow\n                points={points}\n                pointerLength={6}\n                pointerWidth={6}\n                fill={color}\n                stroke={color}\n                strokeWidth={2}\n                onClick={handleClick}\n                onTap={handleClick}\n            />\n            {selected && (\n                <Text\n                    x={labelPosition[0]}\n                    y={labelPosition[1]}\n                    offsetX={-6}\n                    text={`${force}kN`}\n                    fontSize={12}\n                    width={distance}\n                    rotation={rotation}\n                    fill={color}\n                    wrap=\"none\"\n                    ellipsis\n                    onClick={handleLabelClick}\n                    onTap={handleLabelClick}\n                    onDblClick={handleLabelDoubleClick}\n                    onDblTap={handleLabelDoubleClick}\n                />\n            )}\n        </>\n    );\n};\n\nconst ConnectedForce: React.VFC<ForceProps> = (props) => {\n    const { tool, deleteForce } = useContext(StructureContext);\n    const { isSelected, toggle } = useContext(SelectContext);\n    const { open } = useContext(PopupContext);\n\n    const handleDelete = useCallback(() => {\n        deleteForce(props.id);\n    }, [deleteForce, props.id]);\n\n    const handleSelect = useCallback(() => {\n        toggle({ type: 'forces', id: props.id });\n    }, [props.id, toggle]);\n\n    const handleEdit = useCallback(\n        (position: PopupPosition) => {\n            const force: IForce = {\n                ...props,\n                beam: props.beam.id,\n            };\n            // ポップアップを表示\n            open('forces', position, force as unknown as PopupParams);\n        },\n        [open, props]\n    );\n\n    return (\n        <Force\n            {...props}\n            tool={tool}\n            selected={isSelected({ type: 'forces', id: props.id })}\n            onDelete={handleDelete}\n            onSelect={handleSelect}\n            onEdit={handleEdit}\n        />\n    );\n};\n\nexport default ConnectedForce;\n","import { useEffect, useRef, useState } from 'react';\nimport { Arrow, Group, Line, Text } from 'react-konva';\nimport { Point } from '../types';\nimport { Vector } from '../util';\n\ninterface Props {\n    start: Point;\n    end: Point;\n}\n\ninterface GuideProps {\n    fill: string;\n    stroke: string;\n    strokeWidth: number;\n    listening: boolean;\n}\n\ninterface GuideArrowProps extends GuideProps {\n    pointerLength: number;\n    pointerWidth: number;\n    pointerAtBeginning: boolean;\n}\n\nconst defaultGuideProps: GuideProps = {\n    fill: 'silver',\n    stroke: 'silver',\n    strokeWidth: 1,\n    listening: false,\n};\n\nconst defaultGuideArrowProps: GuideArrowProps = {\n    pointerLength: 6,\n    pointerWidth: 6,\n    pointerAtBeginning: true,\n    ...defaultGuideProps,\n};\n\nconst GuideLine: React.VFC<Props> = ({ start, end }) => {\n    const v1Ref = useRef<Vector>(new Vector(0, 0));\n    const v2Ref = useRef<Vector>(new Vector(0, 0));\n\n    const [distance, setDistance] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    const [basis, setBasis] = useState<Point>([0, 0]);\n\n    useEffect(() => {\n        v1Ref.current.x = start[0];\n        v1Ref.current.y = start[1];\n        v2Ref.current.x = end[0];\n        v2Ref.current.y = end[1];\n\n        const dist = v1Ref.current.distance(v2Ref.current);\n        const dir = v2Ref.current.clone().subtract(v1Ref.current).normalize();\n        const angle = dir.angleDeg();\n\n        setDistance(Math.round(dist));\n        setRotation(angle === 90 ? -90 : angle);\n        setBasis(angle === 90 ? end : start);\n    }, [end, start]);\n\n    return (\n        <Group x={basis[0]} y={basis[1]} rotation={rotation}>\n            {/* 左端 */}\n            <Line points={[0, 0, 0, 10]} {...defaultGuideProps} />\n            {/* 矢印部分 */}\n            <Arrow points={[0, 5, distance, 5]} {...defaultGuideArrowProps} />\n            {/* 右端 */}\n            <Line points={[distance, 0, distance, 10]} {...defaultGuideProps} />\n            {/* ラベル */}\n            <Text\n                x={0}\n                y={-8}\n                text={`${distance}px`}\n                fontSize={12}\n                fill=\"silver\"\n                width={distance}\n                align=\"center\"\n                listening={false}\n                wrap=\"none\"\n                ellipsis\n            />\n        </Group>\n    );\n};\n\nexport default GuideLine;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Vector2d } from 'konva/lib/types';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Circle, Image } from 'react-konva';\nimport useImage from 'use-image';\nimport { CanvasTool } from '../../../types/common';\nimport { Node as NodeProps, NodePinType } from '../../../types/shape';\nimport { PopupParams, PopupPosition } from '../popup/types';\nimport { PopupContext } from '../provider/PopupProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { clone, replaceNode, snap } from '../util';\n\ninterface Props extends NodeProps {\n    tool: CanvasTool;\n    draggable?: boolean;\n    onChange?: (node: NodeProps) => void;\n    onCommit?: (node: NodeProps) => void;\n    onEdit: (position: PopupPosition) => void;\n}\n\nconst Pins: Record<NodePinType, string> = {\n    free: '/assets/images/pins/pin_1.svg', // とりあえずダミーで指定\n    pin: '/assets/images/pins/pin_1.svg',\n    pinX: '/assets/images/pins/pin_2.svg',\n    pinZ: '/assets/images/pins/pin_2.svg',\n    fixX: '/assets/images/pins/pin_3.svg',\n    fix: '/assets/images/pins/pin_4.svg',\n};\n\nconst DrawInterval = 100;\n\nconst Node: React.VFC<Props> = ({\n    id,\n    x,\n    y,\n    pin = 'free',\n    tool,\n    draggable = false,\n    // onChange,\n    onCommit,\n    onEdit,\n}) => {\n    const [isDragging, setIsDragging] = useState(false);\n    const pointRef = useRef<Vector2d>({ x, y });\n    const timerRef = useRef<NodeJS.Timer>();\n\n    const imageUrl = useMemo(() => {\n        return `${process.env.PUBLIC_URL}${Pins[pin]}`;\n    }, [pin]);\n\n    const [image] = useImage(imageUrl);\n\n    const redraw = useCallback(() => {\n        if (draggable) {\n            // const node: NodeProps = { id, x: pointRef.current.x, y: pointRef.current.y };\n            // onChange && onChange(node);\n        }\n    }, [draggable]);\n\n    const handleDragStart = useCallback((event: KonvaEventObject<DragEvent>) => {\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            pointRef.current = point;\n            setIsDragging(true);\n        }\n    }, []);\n\n    const handleDragMove = useCallback((event: KonvaEventObject<DragEvent>) => {\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            pointRef.current = point;\n        }\n    }, []);\n\n    const handleDragEnd = useCallback(\n        (event: KonvaEventObject<DragEvent>) => {\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                pointRef.current = point;\n                setIsDragging(false);\n                if (timerRef.current) {\n                    clearInterval(timerRef.current);\n                    timerRef.current = undefined;\n                }\n\n                // 節点のマージ処理\n                const node: NodeProps = { id, x: pointRef.current.x, y: pointRef.current.y };\n                onCommit && onCommit(node);\n            }\n        },\n        [id, onCommit]\n    );\n\n    const handleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            }\n        },\n        [tool]\n    );\n\n    const handleDoubleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                const point = event.target.getStage()?.getPointerPosition();\n                if (point) {\n                    const { x, y } = point;\n                    // ポップアップを開く\n                    onEdit({ top: y, left: x });\n                }\n            }\n        },\n        [onEdit, tool]\n    );\n\n    useEffect(() => {\n        const timer = timerRef.current;\n        if (draggable) {\n            if (isDragging) {\n                redraw();\n                timerRef.current = setInterval(redraw, DrawInterval);\n            }\n        }\n\n        return () => {\n            if (timer) {\n                clearInterval(timer);\n            }\n        };\n    }, [draggable, isDragging, redraw]);\n\n    return (\n        <>\n            <Circle\n                id={id}\n                x={x}\n                y={y}\n                fill={isDragging ? 'blue' : 'black'}\n                radius={4}\n                draggable={draggable}\n                onDragStart={handleDragStart}\n                onDragMove={handleDragMove}\n                onDragEnd={handleDragEnd}\n                onClick={handleClick}\n                onTap={handleClick}\n                onDblClick={handleDoubleClick}\n                onDblTap={handleDoubleClick}\n                _useStrictMode\n            />\n            {!isDragging && pin !== 'free' && (\n                <Image\n                    x={x}\n                    y={y}\n                    offsetX={12}\n                    offsetY={-4}\n                    rotation={pin === 'pinZ' ? -90 : 0}\n                    image={image}\n                    width={24}\n                    height={24}\n                    listening={false}\n                />\n            )}\n        </>\n    );\n};\n\nconst ConnectedNode: React.VFC<NodeProps> = (props) => {\n    const { tool, readonly, snapSize, setStructure } = useContext(StructureContext);\n    const { open } = useContext(PopupContext);\n\n    const draggable = useMemo(() => {\n        return !readonly && tool === 'select';\n    }, [readonly, tool]);\n\n    const handleChange = useCallback(\n        ({ id, x, y }: NodeProps) => {\n            const [px, py] = snap([x, y], snapSize);\n\n            setStructure((values) => {\n                const data = clone(values);\n                const node = data.nodes.find((item) => item.id === id);\n                if (node && (node.x !== px || node.y !== py)) {\n                    node.x = px;\n                    node.y = py;\n\n                    return data;\n                }\n                return values;\n            });\n        },\n        [setStructure, snapSize]\n    );\n\n    const handleCommit = useCallback(\n        ({ id, x, y }: NodeProps) => {\n            const [px, py] = snap([x, y], snapSize);\n\n            setStructure((values) => {\n                const data = clone(values);\n                // 該当ID の index\n                const index = data.nodes.findIndex((item) => item.id === id);\n\n                if (index >= 0) {\n                    data.nodes[index].x = px;\n                    data.nodes[index].y = py;\n\n                    // 座標が一致する別の節点が存在する？\n                    const node = data.nodes.find((item) => {\n                        return item.id !== id && item.x === px && item.y === py;\n                    });\n                    if (node) {\n                        // 現在の node を座標が一致する node に置き換える\n                        replaceNode(data, id, node.id);\n                        // 不要となった現在の node を削除する\n                        data.nodes.splice(index, 1);\n                    }\n                }\n\n                return data;\n            });\n        },\n        [setStructure, snapSize]\n    );\n\n    const handleEdit = useCallback(\n        (position: PopupPosition) => {\n            // ポップアップを表示\n            open('nodes', position, props as unknown as PopupParams);\n        },\n        [open, props]\n    );\n\n    return (\n        <Node\n            {...props}\n            draggable={draggable}\n            tool={tool}\n            onChange={handleChange}\n            onCommit={handleCommit}\n            onEdit={handleEdit}\n        />\n    );\n};\n\nexport default ConnectedNode;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Arrow, Group, Line, Text } from 'react-konva';\nimport { CanvasTool } from '../../../types/common';\nimport { Trapezoid as ITrapezoid } from '../../../types/shape';\nimport { PopupParams, PopupPosition } from '../popup/types';\nimport { PopupContext } from '../provider/PopupProvider';\nimport { SelectContext } from '../provider/SelectProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { Point, TrapezoidProps } from '../types';\nimport { getInsidePoints, intercectPoint, Vector, vX } from '../util';\nimport Guide from './Guide';\n\ninterface Props extends TrapezoidProps {\n    tool: CanvasTool;\n    selected?: boolean;\n    onDelete: VoidFunction;\n    onSelect: VoidFunction;\n    onEdit: (position: PopupPosition) => void;\n}\n\ntype LinePoints = [number, number, number, number];\n\ninterface LineProps {\n    stroke: string;\n    strokeWidth: number;\n}\n\ninterface ArrowProps extends LineProps {\n    pointerLength: number;\n    pointerWidth: number;\n    fill: string;\n}\n\nconst defaultLineProps: LineProps = {\n    stroke: 'pink',\n    strokeWidth: 2,\n};\n\nconst defaultArrowProps: ArrowProps = {\n    pointerLength: 6,\n    pointerWidth: 6,\n    fill: 'pink',\n    ...defaultLineProps,\n};\n\ninterface LabelProps {\n    offsetX: number;\n    offsetY: number;\n    fontSize: number;\n    wrap: string;\n    ellipsis: boolean;\n}\nconst defaultLabelProps: LabelProps = {\n    offsetX: -6,\n    offsetY: 14,\n    fontSize: 12,\n    wrap: 'none',\n    ellipsis: true,\n};\n\ninterface LabelAttrs {\n    x: number;\n    y: number;\n    text: string;\n    width: number;\n    rotation: number;\n}\n\nconst Trapezoid: React.VFC<Props> = ({\n    beam,\n    forceI,\n    forceJ,\n    distanceI,\n    distanceJ,\n    angle = 90,\n    isGlobal = false,\n    tool,\n    selected = false,\n    onDelete,\n    onSelect,\n    onEdit,\n}) => {\n    // 分布荷重の矢印\n    const [arrows, setArrows] = useState<LinePoints[]>([]);\n    // 分布荷重の上端\n    const [line, setLine] = useState<LinePoints>([0, 0, 0, 0]);\n    // ラベル\n    const [labelI, setLabelI] = useState<LabelAttrs>();\n    const [labelJ, setLabelJ] = useState<LabelAttrs>();\n    // 寸法線\n    const [guidePoints, setGuidePoints] = useState<[Point, Point]>([\n        [0, 0],\n        [0, 0],\n    ]);\n\n    useEffect(() => {\n        // 梁要素\n        const { nodeI, nodeJ } = beam;\n        const vI = new Vector(nodeI.x, nodeI.y);\n        const vJ = new Vector(nodeJ.x, nodeJ.y);\n        // 梁要素の方向\n        const vd = vJ.clone().subtract(vI).normalize();\n        // 分布荷重の方向\n        let dir: Vector;\n        if (isGlobal) {\n            dir = vX.clone().rotateDeg(angle * -1);\n        } else {\n            dir = vd\n                .clone()\n                .rotateDeg(angle * -1)\n                .normalize();\n        }\n        // 梁要素の長さ\n        const beamLength = vI.distance(vJ);\n        // 分布荷重の下端の位置\n        const bi = vI.clone().add(vd.clone().multiplyScalar(beamLength * distanceI));\n        const bj = vJ.clone().add(\n            vd\n                .clone()\n                .invert()\n                .multiplyScalar(beamLength * distanceJ)\n        );\n        // 分布荷重の上端の位置\n        const pi = bi.clone().add(dir.clone().multiplyScalar(forceI * 10));\n        const pj = bj.clone().add(dir.clone().multiplyScalar(forceJ * 10));\n\n        // 下端を等間隔に分割する点を取得\n        const points = getInsidePoints(bi, bj, vd);\n        // 上端の傾き\n        const slope = pj.x - pi.x !== 0 ? (pj.y - pi.y) / (pj.x - pi.x) : NaN;\n        // 上端の切片\n        const intercept = isNaN(slope) ? NaN : pi.y - slope * pi.x;\n\n        // 内側の矢印\n        const insideArrows: LinePoints[] = [];\n        points.forEach((pd) => {\n            // pd から分布荷重の方向に線を伸ばして上端と交差する点\n            const pu = intercectPoint([pi, pj, slope, intercept], pd, dir);\n            if (pu) {\n                const arrow: LinePoints = [pu[0], pu[1], pd.x, pd.y];\n                insideArrows.push(arrow);\n            }\n        });\n\n        const labelAngle = dir.angleDeg();\n        // ラベル (i端)\n        setLabelI({\n            x: bi.x,\n            y: bi.y,\n            text: `${forceI}kN/m`,\n            width: bi.distance(pi),\n            rotation: labelAngle,\n        });\n        // ラベル (j端)\n        setLabelJ({\n            x: bj.x,\n            y: bj.y,\n            text: `${forceJ}kN/m`,\n            width: bj.distance(pj),\n            rotation: labelAngle,\n        });\n\n        // 寸法線の位置\n        const force = Math.max(forceI, forceJ) * 10;\n        const guidePosition = dir.clone().multiplyScalar(force + 50);\n        const gi = bi.clone().add(guidePosition);\n        const gj = bj.clone().add(guidePosition);\n        setGuidePoints([\n            [gi.x, gi.y],\n            [gj.x, gj.y],\n        ]);\n\n        // 上端\n        setLine([pi.x, pi.y, pj.x, pj.y]);\n        // 矢印\n        setArrows([\n            // 左端\n            [pi.x, pi.y, bi.x, bi.y],\n            // 内側の矢印\n            ...insideArrows,\n            // 右端\n            [pj.x, pj.y, bj.x, bj.y],\n        ]);\n    }, [angle, beam, distanceI, distanceJ, forceI, forceJ, isGlobal]);\n\n    const handleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                onSelect();\n            } else if (tool === 'delete') {\n                onDelete();\n            }\n            // イベントの伝播を止める\n            event.cancelBubble = true;\n        },\n        [onDelete, onSelect, tool]\n    );\n\n    const handleDoubleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                const point = event.target.getStage()?.getPointerPosition();\n                if (point) {\n                    const { x, y } = point;\n                    // ポップアップを開く\n                    onEdit({ top: y, left: x });\n                }\n            }\n        },\n        [onEdit, tool]\n    );\n\n    const handleLabelClick = useCallback((event: KonvaEventObject<MouseEvent>) => {\n        // ダブルクリック時にはクリックイベントも発生する\n        // 何もバインドしていないと Stage のクリックイベント（選択解除）が発生するので\n        // イベントの伝播を止めるだけのイベントハンドラを設定する\n        event.cancelBubble = true;\n    }, []);\n\n    const color = useMemo(() => {\n        return selected ? 'red' : 'pink';\n    }, [selected]);\n\n    return (\n        <Group onClick={handleClick} onTap={handleClick}>\n            {/* 上端 */}\n            <Line points={line} {...defaultLineProps} stroke={color} />\n            {/* 矢印 */}\n            {arrows.map((arrow, index) => (\n                <Arrow\n                    key={`arrow_${index}`}\n                    points={arrow}\n                    {...defaultArrowProps}\n                    stroke={color}\n                    fill={color}\n                />\n            ))}\n            {/* ラベルと寸法線 */}\n            {selected && (\n                <>\n                    {/* I端側ラベル */}\n                    <Text\n                        {...defaultLabelProps}\n                        {...labelI}\n                        fill={color}\n                        onClick={handleLabelClick}\n                        onTap={handleLabelClick}\n                        onDblClick={handleDoubleClick}\n                        onDblTap={handleDoubleClick}\n                    />\n                    {/* J端側ラベル */}\n                    <Text\n                        {...defaultLabelProps}\n                        {...labelJ}\n                        fill={color}\n                        onClick={handleLabelClick}\n                        onTap={handleLabelClick}\n                        onDblClick={handleDoubleClick}\n                        onDblTap={handleDoubleClick}\n                    />\n                    {/* 寸法線 */}\n                    <Guide start={guidePoints[0]} end={guidePoints[1]} />\n                </>\n            )}\n        </Group>\n    );\n};\n\nconst ConnectedTrapezoid: React.VFC<TrapezoidProps> = (props) => {\n    const { tool, deleteTrapezoid } = useContext(StructureContext);\n    const { isSelected, toggle } = useContext(SelectContext);\n    const { open } = useContext(PopupContext);\n\n    const handleDelete = useCallback(() => {\n        deleteTrapezoid(props.id);\n    }, [deleteTrapezoid, props.id]);\n\n    const handleSelect = useCallback(() => {\n        toggle({ type: 'trapezoids', id: props.id });\n    }, [props.id, toggle]);\n\n    const handleEdit = useCallback(\n        (position: PopupPosition) => {\n            const trapezoid: ITrapezoid = {\n                ...props,\n                beam: props.beam.id,\n            };\n            // ポップアップを表示\n            open('trapezoids', position, trapezoid as unknown as PopupParams);\n        },\n        [open, props]\n    );\n\n    return (\n        <Trapezoid\n            {...props}\n            tool={tool}\n            selected={isSelected({ type: 'trapezoids', id: props.id })}\n            onDelete={handleDelete}\n            onSelect={handleSelect}\n            onEdit={handleEdit}\n        />\n    );\n};\n\nexport default ConnectedTrapezoid;\n","import { useContext, useMemo } from 'react';\nimport { Layer } from 'react-konva';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { Guide as GuideLine } from '../shape';\n\ninterface GuideLineProps {\n    key: string;\n    start: [number, number];\n    end: [number, number];\n}\n\ninterface GuidePoint {\n    minX: number;\n    maxX: number;\n    guidesX: GuideLineProps[];\n    minY: number;\n    maxY: number;\n    guidesY: GuideLineProps[];\n}\n\nconst GuideInterval = 25;\n\nconst GuideLayer: React.VFC = () => {\n    const { structure } = useContext(StructureContext);\n\n    const { minX, maxX, guidesX, minY, maxY, guidesY }: GuidePoint = useMemo(() => {\n        const guide: GuidePoint = {\n            maxX: Number.MIN_SAFE_INTEGER,\n            minX: Number.MAX_SAFE_INTEGER,\n            guidesX: [],\n            maxY: Number.MIN_SAFE_INTEGER,\n            minY: Number.MAX_SAFE_INTEGER,\n            guidesY: [],\n        };\n\n        const pointsX = new Set<number>();\n        const pointsY = new Set<number>();\n        structure.nodes.forEach(({ x, y }) => {\n            if (guide.maxX < x) {\n                guide.maxX = x;\n            }\n            if (guide.minX > x) {\n                guide.minX = x;\n            }\n            if (!pointsX.has(x)) {\n                pointsX.add(x);\n            }\n            if (guide.maxY < y) {\n                guide.maxY = y;\n            }\n            if (guide.minY > y) {\n                guide.minY = y;\n            }\n            if (!pointsY.has(y)) {\n                pointsY.add(y);\n            }\n        });\n\n        // ガイドの生成\n        if (pointsX.size > 1) {\n            const array = Array.from(pointsX).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideX_${i}`,\n                    start: [prev, guide.maxY + GuideInterval * 4],\n                    end: [current, guide.maxY + GuideInterval * 4],\n                };\n                prev = current;\n                guide.guidesX.push(props);\n            }\n        }\n        if (pointsY.size > 1) {\n            const array = Array.from(pointsY).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            const localX = Math.max(guide.minX - GuideInterval * 4, GuideInterval * 2);\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideY_${i}`,\n                    start: [localX, prev],\n                    end: [localX, current],\n                };\n                prev = current;\n                guide.guidesY.push(props);\n            }\n        }\n\n        return guide;\n    }, [structure.nodes]);\n\n    const GlobalVerticalGuidePositionX = useMemo(() => {\n        if (minX !== Number.MAX_SAFE_INTEGER) {\n            return Math.max(GuideInterval, minX - GuideInterval * 5);\n        }\n        return 0;\n    }, [minX]);\n\n    const GlobalHorizontalGuidePositionY = useMemo(() => {\n        if (maxY !== Number.MIN_SAFE_INTEGER) {\n            return maxY + GuideInterval * 5;\n        }\n        return 0;\n    }, [maxY]);\n\n    return (\n        <Layer listening={false}>\n            {/* Horizontal */}\n            {minX !== Number.MAX_SAFE_INTEGER && maxX !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[minX, GlobalHorizontalGuidePositionY]}\n                    end={[maxX, GlobalHorizontalGuidePositionY]}\n                />\n            )}\n            {guidesX.map((props) => (\n                <GuideLine {...props} />\n            ))}\n            {/* Vertical */}\n            {minY !== Number.MAX_SAFE_INTEGER && maxY !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[GlobalVerticalGuidePositionX, minY]}\n                    end={[GlobalVerticalGuidePositionX, maxY]}\n                />\n            )}\n            {guidesY.map((props) => (\n                <GuideLine {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GuideLayer;\n","import { useContext, useMemo } from 'react';\nimport { Layer } from 'react-konva';\nimport { Node as NodeProps, Structure } from '../../../types/shape';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { Beam, Force, Node, Trapezoid } from '../shape';\nimport { BeamProps, ForceProps, TrapezoidProps } from '../types';\n\ninterface Props {\n    structure: Structure;\n}\n\nexport const ShapeLayerCore: React.VFC<Props> = ({ structure }) => {\n    const nodes = useMemo(() => {\n        const map: Record<string, NodeProps> = {};\n\n        structure.nodes.forEach((node) => {\n            map[node.id] = node;\n        });\n\n        return map;\n    }, [structure.nodes]);\n\n    const beams = useMemo(() => {\n        const map: Record<string, BeamProps> = {};\n\n        structure.beams.forEach(({ nodeI, nodeJ, ...beam }) => {\n            const item: BeamProps = {\n                ...beam,\n                nodeI: nodes[nodeI],\n                nodeJ: nodes[nodeJ],\n            };\n            map[beam.id] = item;\n        });\n\n        return map;\n    }, [nodes, structure.beams]);\n\n    const forces = useMemo(() => {\n        const { forces: items } = structure;\n        const map: Record<string, ForceProps> = {};\n\n        if (items.length > 0) {\n            const total = items.map((item) => item.force).reduce((p, c) => p + c);\n            const average = total / items.length;\n            items.forEach(({ beam, force: value, ...force }) => {\n                const forceRatio = value / average;\n                map[force.id] = {\n                    ...force,\n                    force: value,\n                    forceRatio,\n                    beam: beams[beam],\n                };\n            });\n        }\n\n        return map;\n    }, [beams, structure]);\n\n    const trapezoids = useMemo(() => {\n        const { trapezoids: items } = structure;\n        const map: Record<string, TrapezoidProps> = {};\n\n        items.forEach(({ beam, ...props }) => {\n            map[props.id] = {\n                ...props,\n                beam: beams[beam],\n            };\n        });\n\n        return map;\n    }, [beams, structure]);\n\n    return (\n        <Layer>\n            {Object.entries(beams).map(([key, beam]) => (\n                <Beam key={key} {...beam} />\n            ))}\n            {Object.entries(nodes).map(([key, node]) => (\n                <Node key={key} {...node} />\n            ))}\n            {Object.entries(forces).map(([key, force]) => (\n                <Force key={key} {...force} />\n            ))}\n            {Object.entries(trapezoids).map(([key, trapezoid]) => (\n                <Trapezoid key={key} {...trapezoid} />\n            ))}\n        </Layer>\n    );\n};\n\nconst ShapeLayer: React.VFC = () => {\n    const { structure } = useContext(StructureContext);\n    return <ShapeLayerCore structure={structure} />;\n};\n\nexport default ShapeLayer;\n","import { Button, InputAdornment, Paper, Stack, TextField } from '@mui/material';\nimport { ChangeEvent, FormEvent, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Force, isForce } from '../../../types/shape';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (force: Force) => void;\n}\n\ninterface ForceEditorProps extends Omit<Props, 'values'> {\n    force: Force;\n}\n\nconst ForceEditor: React.VFC<ForceEditorProps> = ({ force, onChange, onClose }) => {\n    const [value, setValue] = useState('');\n    const [error, setError] = useState<string>();\n\n    const handleSubmit = useCallback(\n        (event: FormEvent<HTMLFormElement>) => {\n            event.preventDefault();\n\n            if (event.currentTarget.checkValidity() && typeof error === 'undefined') {\n                const num = parseFloat(value);\n                if (!isNaN(num)) {\n                    // 更新\n                    onChange({\n                        ...force,\n                        force: num,\n                    });\n                    // ポップアップ閉じる\n                    onClose();\n                }\n            }\n        },\n        [error, onChange, onClose, value, force]\n    );\n\n    const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.currentTarget;\n        let errorMessage: string | undefined;\n        setValue(value);\n\n        // 必須\n        if (value.length === 0) {\n            errorMessage = '数値を入力してください';\n        }\n        // 数値？\n        const num = parseFloat(value);\n        if (isNaN(num)) {\n            errorMessage = '数値を入力してください';\n        }\n        if (0 > num || num > Number.MAX_SAFE_INTEGER) {\n            errorMessage = '0 より大きい値を入力してください';\n        }\n\n        setError(errorMessage);\n    }, []);\n\n    useEffect(() => {\n        setValue(`${force.force}`);\n        setError(undefined);\n    }, [force]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"集中荷重\"\n                    value={value}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN</InputAdornment>,\n                    }}\n                    error={Boolean(error)}\n                    helperText={error}\n                />\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedForceEditor: React.VFC<Props> = ({ values, ...props }) => {\n    const force = useMemo(() => {\n        if (isForce(values)) {\n            return values;\n        }\n        // 空の force を渡す\n        return {\n            id: '',\n            name: '',\n            beam: '',\n            force: 0,\n            distanceI: 0,\n        };\n    }, [values]);\n\n    return <ForceEditor {...props} force={force} />;\n};\n\nexport default ConnectedForceEditor;\n","var _path, _circle, _circle2, _line;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80 0 L30 80 L130 80 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 45,\n    cy: 115,\n    r: 20\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 115,\n    cy: 115,\n    r: 20\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 30,\n    y1: 150,\n    x2: 130,\n    y2: 150,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin2);\nexport default __webpack_public_path__ + \"static/media/pin_2.2b2bb714.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _circle, _circle2, _line;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin3(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    style: {\n      width: 64\n    },\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30 3 L30 80 L130 80 L130 3 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 45,\n    cy: 115,\n    r: 20\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 115,\n    cy: 115,\n    r: 20\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 30,\n    y1: 150,\n    x2: 130,\n    y2: 150,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin3);\nexport default __webpack_public_path__ + \"static/media/pin_3.d7b6571b.svg\";\nexport { ForwardRef as ReactComponent };","var _line, _line2, _line3, _line4, _line5;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin4(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    style: {\n      width: 64\n    },\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 0,\n    y1: 3,\n    x2: 160,\n    y2: 3,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 20,\n    y1: 0,\n    x2: 0,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line3 || (_line3 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 60,\n    y1: 0,\n    x2: 40,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line4 || (_line4 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 100,\n    y1: 0,\n    x2: 80,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line5 || (_line5 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 140,\n    y1: 0,\n    x2: 120,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin4);\nexport default __webpack_public_path__ + \"static/media/pin_4.4442f3d6.svg\";\nexport { ForwardRef as ReactComponent };","import CircleOutlinedIcon from '@mui/icons-material/CircleOutlined';\nimport {\n    Button,\n    Paper,\n    Stack,\n    SvgIcon,\n    ToggleButton,\n    ToggleButtonGroup,\n    ToggleButtonProps,\n    Typography,\n} from '@mui/material';\nimport {\n    FormEvent,\n    MouseEvent,\n    ReactElement,\n    useCallback,\n    useEffect,\n    useMemo,\n    useState,\n} from 'react';\nimport { isNode, isNodePinType, Node, NodePinType } from '../../../types/shape';\nimport { ReactComponent as PinIcon1 } from './pins/pin_1.svg';\nimport { ReactComponent as PinIcon2 } from './pins/pin_2.svg';\nimport { ReactComponent as PinIcon3 } from './pins/pin_3.svg';\nimport { ReactComponent as PinIcon4 } from './pins/pin_4.svg';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (node: Node) => void;\n}\n\ninterface PinSelectorProps extends Omit<Props, 'values'> {\n    node: Node;\n}\n\ninterface PinButtonProps {\n    type: NodePinType;\n    icon: ReactElement;\n    label: string;\n}\n\nconst PinButtons: Readonly<Record<NodePinType, PinButtonProps>> = {\n    free: {\n        type: 'free',\n        icon: <CircleOutlinedIcon />,\n        label: '完全フリー',\n    },\n    pin: {\n        type: 'pin',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon1 />\n            </SvgIcon>\n        ),\n        label: '完全ピン',\n    },\n    pinX: {\n        type: 'pinX',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon2 />\n            </SvgIcon>\n        ),\n        label: 'ピンXローラー',\n    },\n    pinZ: {\n        type: 'pinZ',\n        icon: (\n            <SvgIcon sx={{ width: 24, transform: 'rotate(-90deg)' }} viewBox=\"0 0 160 160\">\n                <PinIcon2 />\n            </SvgIcon>\n        ),\n        label: 'ピンZローラー',\n    },\n    fixX: {\n        type: 'fixX',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon3 />\n            </SvgIcon>\n        ),\n        label: '固定Xローラー',\n    },\n    fix: {\n        type: 'fix',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon4 />\n            </SvgIcon>\n        ),\n        label: '完全固定',\n    },\n};\n\nconst defaultButtonProps: Partial<ToggleButtonProps> = {\n    sx: { justifyContent: 'flex-start', alignItems: 'center' },\n};\n\nconst PinSelector: React.VFC<PinSelectorProps> = ({ node, onChange, onClose }) => {\n    const [pin, setPin] = useState<NodePinType>();\n\n    const handleSubmit = useCallback(\n        (event: FormEvent) => {\n            event.preventDefault();\n\n            const values: Node = {\n                ...node,\n                pin,\n            };\n            onChange(values);\n            onClose();\n        },\n        [node, onChange, onClose, pin]\n    );\n\n    const handleChange = useCallback((_: MouseEvent<HTMLElement>, newValue: string | null) => {\n        if (newValue !== null && isNodePinType(newValue)) {\n            setPin(newValue);\n        }\n    }, []);\n\n    useEffect(() => {\n        setPin(node.pin ?? 'free');\n    }, [node.pin]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                <ToggleButtonGroup\n                    orientation=\"vertical\"\n                    value={pin}\n                    size=\"small\"\n                    exclusive\n                    fullWidth\n                    onChange={handleChange}\n                >\n                    {Object.entries(PinButtons).map(([key, { icon, label }]) => (\n                        <ToggleButton key={key} value={key} {...defaultButtonProps}>\n                            {icon}\n                            <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                                {label}\n                            </Typography>\n                        </ToggleButton>\n                    ))}\n                </ToggleButtonGroup>\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedPinSelector: React.VFC<Props> = ({ values, ...props }) => {\n    const node = useMemo(() => {\n        if (isNode(values)) {\n            return values;\n        }\n        return {\n            id: '',\n            x: 0,\n            y: 0,\n        };\n    }, [values]);\n\n    return <PinSelector {...props} node={node} />;\n};\n\nexport default ConnectedPinSelector;\n","import {\n    Button,\n    Checkbox,\n    FormControlLabel,\n    InputAdornment,\n    Paper,\n    Stack,\n    TextField,\n} from '@mui/material';\nimport { ChangeEvent, FormEvent, useCallback, useEffect, useMemo, useState } from 'react';\nimport { isTrapezoid, Trapezoid } from '../../../types/shape';\nimport { round } from '../util';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (trapezoid: Trapezoid) => void;\n}\n\ninterface FormProps extends Omit<Props, 'values'> {\n    trapezoid: Trapezoid;\n}\n\ninterface TrapezoidAttrs {\n    forceI: number;\n    forceJ: number;\n    angle: number;\n    isGlobal: boolean;\n}\ninterface FormValues {\n    forceI: string;\n    forceJ: string;\n    angle: string;\n    isGlobal: boolean;\n}\n\ntype ValidateTuple = [value: number, valid: boolean, error: string];\n\n/**\n * 必須かつ 0以上の数値\n * @param value\n */\nconst validateForce = (value: string): ValidateTuple => {\n    if (value.length === 0) {\n        // 必須\n        return [NaN, false, '数値を入力してください'];\n    } else {\n        const val = parseFloat(value);\n        if (isNaN(val)) {\n            // 数値でない\n            return [NaN, false, '数値を入力してください'];\n        } else if (0 >= val && val > Number.MAX_SAFE_INTEGER) {\n            // 数値が範囲外\n            return [val, false, '0 以上の数値を入力してください'];\n        }\n        // OK\n        return [round(val, 3), true, ''];\n    }\n};\n\n/**\n * -180 から 180 の範囲の数値\n * -180 の場合は 180 とする\n * @param value\n */\nconst validateAngle = (value: string): ValidateTuple => {\n    if (value.length > 0) {\n        let val = parseInt(value, 10);\n        if (isNaN(val) || value.indexOf('.') >= 0) {\n            // 整数でない\n            return [NaN, false, '整数を入力してください'];\n        } else if (-180 > val || 180 < val) {\n            // 180 から 180 の範囲外\n            return [val, false, '-180 〜 180 で入力してください'];\n        }\n        if (val === -180) {\n            // -180 の場合は 180 とする\n            val = 180;\n        }\n        // OK\n        return [val, true, ''];\n    }\n    // 未指定の場合は 90 を返す\n    return [90, true, ''];\n};\n\nconst parseFormValues = (values: Partial<FormValues>): [boolean, TrapezoidAttrs] => {\n    const attrs: TrapezoidAttrs = {\n        forceI: 0,\n        forceJ: 0,\n        angle: 90,\n        isGlobal: false,\n    };\n\n    // forceI\n    const [value1, valid1] = validateForce(values.forceI ?? '');\n    const [value2, valid2] = validateForce(values.forceJ ?? '');\n    const [value3, valid3] = validateAngle(values.angle ?? '');\n    const valid = valid1 && valid2 && valid3;\n\n    attrs.forceI = value1;\n    attrs.forceJ = value2;\n    attrs.angle = value3;\n    attrs.isGlobal = values.isGlobal ?? false;\n\n    return [valid, attrs];\n};\n\nconst toFormValues = (trapezoid: Trapezoid): Partial<FormValues> => {\n    const values: Partial<FormValues> = {};\n\n    values.forceI = `${trapezoid.forceI}`;\n    values.forceJ = `${trapezoid.forceJ}`;\n    values.angle = `${trapezoid.angle ?? ''}`;\n    values.isGlobal = trapezoid.isGlobal;\n\n    return values;\n};\n\nconst TrapezoidEditor: React.VFC<FormProps> = ({ trapezoid, onChange, onClose }) => {\n    const [values, setValues] = useState<Partial<FormValues>>({});\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    const handleSubmit = useCallback(\n        (event: FormEvent<HTMLFormElement>) => {\n            event.preventDefault();\n\n            if (event.currentTarget.checkValidity()) {\n                // エラーがあれば更新しない\n                const invalid = Object.values(errors).some((error) => error.length > 0);\n                if (!invalid) {\n                    // values を TrapezoidAttrs に変換する\n                    const [valid, attrs] = parseFormValues(values);\n                    console.log(valid, attrs);\n                    if (valid) {\n                        // 更新\n                        onChange({\n                            ...trapezoid,\n                            ...attrs,\n                        });\n                    }\n                    // ポップアップ閉じる\n                    onClose();\n                }\n            }\n        },\n        [errors, onChange, onClose, trapezoid, values]\n    );\n\n    const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target;\n        let errorMessage = '';\n        switch (name) {\n            case 'forceI':\n            case 'forceJ':\n                // 必須かつ 0以上の数値\n                const [, valid1, error1] = validateForce(value);\n                if (!valid1) {\n                    errorMessage = error1;\n                }\n                break;\n            case 'angle':\n                const [, valid2, error2] = validateAngle(value);\n                if (!valid2) {\n                    errorMessage = error2;\n                }\n                break;\n        }\n\n        // エラー情報の更新\n        setErrors((state) => ({\n            ...state,\n            [name]: errorMessage,\n        }));\n\n        // 値を更新\n        setValues((state) => ({\n            ...state,\n            [name]: value,\n        }));\n    }, []);\n\n    const handleChangeIsGlobal = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { checked } = event.target;\n        setValues((state) => ({\n            ...state,\n            isGlobal: checked,\n        }));\n    }, []);\n\n    useEffect(() => {\n        setValues(toFormValues(trapezoid));\n        setErrors({});\n    }, [trapezoid]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                {/* forceI */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"I端側の荷重\"\n                    name=\"forceI\"\n                    value={values['forceI'] ?? ''}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN/m</InputAdornment>,\n                    }}\n                    error={Boolean(errors['forceI'])}\n                    helperText={errors['forceI'] ?? ''}\n                />\n                {/* forceJ */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"J端側の荷重\"\n                    name=\"forceJ\"\n                    value={values['forceJ'] ?? ''}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN/m</InputAdornment>,\n                    }}\n                    error={Boolean(errors['forceJ'])}\n                    helperText={errors['forceJ'] ?? ''}\n                />\n                {/* angle */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"角度\"\n                    name=\"angle\"\n                    value={values['angle'] ?? ''}\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">°</InputAdornment>,\n                    }}\n                    error={Boolean(errors['angle'])}\n                    helperText={errors['angle'] ?? ''}\n                />\n                {/* isGlobal */}\n                <FormControlLabel\n                    label=\"全体座標系\"\n                    control={\n                        <Checkbox\n                            name=\"isGlobal\"\n                            size=\"small\"\n                            checked={values.isGlobal ?? false}\n                            onChange={handleChangeIsGlobal}\n                        />\n                    }\n                />\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedTrapezoidEditor: React.VFC<Props> = ({ values, ...props }) => {\n    const trapezoid = useMemo(() => {\n        if (isTrapezoid(values)) {\n            return values;\n        }\n        // 空データを返す\n        return {\n            id: '',\n            name: '',\n            beam: '',\n            forceI: 0,\n            distanceI: 0,\n            forceJ: 0,\n            distanceJ: 0,\n        };\n    }, [values]);\n\n    return <TrapezoidEditor {...props} trapezoid={trapezoid} />;\n};\n\nexport default ConnectedTrapezoidEditor;\n","import { Box } from '@mui/material';\nimport { useCallback, useContext } from 'react';\nimport { Force, Node, Trapezoid } from '../../../types/shape';\nimport { PopupContext } from '../provider/PopupProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { clone } from '../util';\nimport ForceEditor from './ForceEditor';\nimport PinSelector from './PinSelector';\nimport TrapezoidEditor from './TrapezoidEditor';\n\nconst Popup: React.VFC = () => {\n    const { popupType, popupPosition, popupParams, close } = useContext(PopupContext);\n    const { setStructure } = useContext(StructureContext);\n\n    const handleChangeForce = useCallback(\n        (force: Force) => {\n            setStructure &&\n                setStructure((structure) => {\n                    const data = clone(structure);\n\n                    const index = data.forces.findIndex(({ id }) => id === force.id);\n                    if (index >= 0) {\n                        data.forces[index] = {\n                            ...force,\n                        };\n                    }\n\n                    return data;\n                });\n        },\n        [setStructure]\n    );\n\n    const handleChangeTrapezoid = useCallback(\n        (trapezoid: Trapezoid) => {\n            setStructure &&\n                setStructure((structure) => {\n                    const data = clone(structure);\n                    const index = data.trapezoids.findIndex(({ id }) => id === trapezoid.id);\n                    if (index >= 0) {\n                        data.trapezoids[index] = {\n                            ...trapezoid,\n                        };\n                    }\n                    return data;\n                });\n        },\n        [setStructure]\n    );\n\n    const handleChangeNode = useCallback(\n        (node: Node) => {\n            setStructure &&\n                setStructure((structure) => {\n                    const data = clone(structure);\n                    const index = data.nodes.findIndex(({ id }) => id === node.id);\n                    if (index >= 0) {\n                        data.nodes[index] = {\n                            ...node,\n                        };\n                    }\n                    return data;\n                });\n        },\n        [setStructure]\n    );\n\n    if (typeof popupType === 'undefined') {\n        return null;\n    }\n\n    return (\n        <Box\n            sx={{\n                position: 'absolute',\n                zIndex: 5000,\n                ...popupPosition,\n            }}\n        >\n            {popupType === 'forces' && (\n                <ForceEditor\n                    values={popupParams ?? {}}\n                    onClose={close}\n                    onChange={handleChangeForce}\n                />\n            )}\n            {popupType === 'trapezoids' && (\n                <TrapezoidEditor\n                    values={popupParams ?? {}}\n                    onClose={close}\n                    onChange={handleChangeTrapezoid}\n                />\n            )}\n            {popupType === 'nodes' && (\n                <PinSelector\n                    values={popupParams ?? {}}\n                    onClose={close}\n                    onChange={handleChangeNode}\n                />\n            )}\n        </Box>\n    );\n};\n\nexport default Popup;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { forwardRef, useCallback, useContext, useImperativeHandle, useRef } from 'react';\nimport { Stage } from 'react-konva';\nimport { useContextBridge } from '../../hooks/useContextBridge';\nimport DrawLayer from './layer/DrawLayer';\nimport GridLayer from './layer/GridLayer';\nimport GuideLayer from './layer/GuideLayer';\nimport ShapeLayer from './layer/ShapeLayer';\nimport Popup from './popup';\nimport { DrawContext } from './provider/DrawProvider';\nimport { PopupContext } from './provider/PopupProvider';\nimport { SelectContext } from './provider/SelectProvider';\nimport { StructureContext } from './provider/StructureProvider';\nimport { CanvasCoreHandler } from './types';\n\nconst CanvasCore: React.ForwardRefRenderFunction<CanvasCoreHandler> = (_, ref) => {\n    const { structure, tool, size } = useContext(StructureContext);\n    const { setSelected } = useContext(SelectContext);\n    const { close } = useContext(PopupContext);\n    const { onPointerDown, onPointerMove, onPointerUp } = useContext(DrawContext);\n\n    const ContextBridge = useContextBridge(\n        StructureContext,\n        PopupContext,\n        SelectContext,\n        DrawContext\n    );\n\n    const canvasRef = useRef<Konva.Stage>(null);\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            toDataURL: () => {\n                if (canvasRef.current) {\n                    return canvasRef.current.toDataURL();\n                }\n            },\n            getStructure: () => structure,\n        }),\n        [structure]\n    );\n\n    /**\n     * Stage のクリック\n     */\n    const handleClick = useCallback(\n        (_: KonvaEventObject<PointerEvent>) => {\n            // ポップオーバーを閉じる\n            close();\n\n            if (tool === 'select') {\n                // 選択解除\n                setSelected([]);\n            }\n        },\n        [close, setSelected, tool]\n    );\n\n    return (\n        <>\n            <Stage\n                ref={canvasRef}\n                width={size.width}\n                height={size.height}\n                onClick={handleClick}\n                onTap={handleClick}\n                {...{ onPointerDown, onPointerMove, onPointerUp }}\n            >\n                <ContextBridge>\n                    <GridLayer />\n                    <GuideLayer />\n                    <ShapeLayer />\n                    <DrawLayer />\n                </ContextBridge>\n            </Stage>\n            {/* ポップアップ */}\n            <Popup />\n        </>\n    );\n};\n\nexport default forwardRef(CanvasCore);\n","import DrawProvider from './DrawProvider';\nimport PopupProvider from './PopupProvider';\nimport SelectProvider from './SelectProvider';\nimport StructureProvider, { StructureProviderProps } from './StructureProvider';\n\ntype Props = StructureProviderProps;\n\nconst CanvasProvider: React.VFC<Props> = ({ children, ...props }) => {\n    return (\n        <StructureProvider {...props}>\n            <PopupProvider>\n                <SelectProvider>\n                    <DrawProvider>{children}</DrawProvider>\n                </SelectProvider>\n            </PopupProvider>\n        </StructureProvider>\n    );\n};\n\nexport default CanvasProvider;\n","import { Box } from '@mui/material';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasTool, DOMSize } from '../../types/common';\nimport { emptyStructure, Structure } from '../../types/shape';\nimport CanvasCore from './core';\nimport CanvasProvider from './provider/CanvasProvider';\nimport { CanvasCoreHandler } from './types';\n\ninterface Props {\n    structure: Structure;\n    tool?: CanvasTool;\n    readonly?: boolean;\n}\n\nexport type CanvasHandler = CanvasCoreHandler;\n\nconst Canvas: React.ForwardRefRenderFunction<CanvasHandler, Props> = (\n    { tool = 'select', structure: source, readonly = false },\n    ref\n) => {\n    // キャンバス表示領域\n    const [size, setSize] = useState<DOMSize>({ width: 0, height: 0 });\n    // キャンバスの親要素\n    const containerRef = useRef<HTMLDivElement>(null);\n    // キャンバス本体\n    const canvasRef = useRef<CanvasCoreHandler>(null);\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            toDataURL: () => {\n                if (canvasRef.current) {\n                    return canvasRef.current.toDataURL();\n                }\n            },\n            getStructure: () => {\n                if (canvasRef.current) {\n                    return canvasRef.current.getStructure();\n                }\n                return emptyStructure;\n            },\n        }),\n        []\n    );\n\n    // 要素のリサイズを監視\n    useEffect(() => {\n        const observer = new ResizeObserver((entries) => {\n            const { width, height } = entries[0].contentRect;\n            setSize({\n                width,\n                height,\n            });\n        });\n\n        if (containerRef.current) {\n            observer.observe(containerRef.current);\n        }\n\n        return () => {\n            observer.disconnect();\n        };\n    }, []);\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{\n                width: 'auto',\n                height: '100%',\n                backgroundColor: '#ffffff',\n                overscrollBehavior: 'contain',\n            }}\n        >\n            <CanvasProvider tool={tool} size={size} structure={source} readonly={readonly}>\n                <CanvasCore ref={canvasRef} />\n            </CanvasProvider>\n        </Box>\n    );\n};\n\nexport default forwardRef(Canvas);\n","import { Layer, Line } from 'react-konva';\nimport { DrawingProps, DrawSettings } from '../../../types/note';\n\ninterface Props {\n    drawings: DrawingProps[];\n    // 描画中のデータ\n    settings: DrawSettings;\n    points?: number[];\n}\n\nconst Draw: React.VFC<Props> = ({ drawings, settings, points }) => {\n    return (\n        <Layer>\n            {drawings.map(({ eraser = false, ...lineProps }, index) => (\n                <Line\n                    key={`note-drawing-${index}`}\n                    {...lineProps}\n                    globalCompositeOperation={eraser ? 'destination-out' : 'source-over'}\n                />\n            ))}\n            {points && (\n                <Line\n                    {...settings}\n                    points={points}\n                    globalCompositeOperation={settings.eraser ? 'destination-out' : 'source-over'}\n                />\n            )}\n        </Layer>\n    );\n};\n\nexport default Draw;\n","import CloseIcon from '@mui/icons-material/Close';\nimport EditIcon from '@mui/icons-material/Edit';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { IconButton, Menu, MenuItem, styled } from '@mui/material';\nimport { MouseEvent, MouseEventHandler, useCallback, useState } from 'react';\nimport { Html } from 'react-konva-utils';\nimport { AppMode } from '../../../../types/common';\n\ninterface Props {\n    visible?: boolean;\n    mode: AppMode;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    onEdit?: MouseEventHandler<HTMLButtonElement>;\n    onCopy?: VoidFunction;\n    onDelete?: VoidFunction;\n    onCancel?: VoidFunction;\n}\n\nconst Background = styled('div')({\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    padding: '0 8',\n});\nconst Spacer = styled('div')({\n    flex: 1,\n});\n\nconst HeaderMenu: React.VFC<Props> = ({\n    visible = false,\n    mode,\n    y: top,\n    x: left,\n    width,\n    onEdit,\n    onCopy,\n    onDelete,\n    onCancel,\n}) => {\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n    const handleClickMore = useCallback((event: MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    }, []);\n    const handleCloseMenu = useCallback(() => {\n        setAnchorEl(null);\n    }, []);\n\n    if (!visible) {\n        return null;\n    }\n\n    return (\n        <Html\n            divProps={{\n                style: {\n                    top: `${top - 42}px`,\n                    left: `${left}px`,\n                    width: `${width}px`,\n                },\n            }}\n        >\n            <Background>\n                {mode === 'canvas' && (\n                    <IconButton size=\"small\" onClick={onCancel}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n                {mode === 'note' && (\n                    <>\n                        <IconButton size=\"small\" onClick={onEdit}>\n                            <EditIcon />\n                        </IconButton>\n                        <Spacer />\n                        <IconButton size=\"small\" onClick={handleClickMore}>\n                            <MoreVertIcon />\n                        </IconButton>\n                    </>\n                )}\n            </Background>\n            <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleCloseMenu}>\n                <MenuItem onClick={onCopy}>コピー</MenuItem>\n                <MenuItem onClick={onDelete}>削除</MenuItem>\n            </Menu>\n        </Html>\n    );\n};\n\nexport default HeaderMenu;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { Box } from 'konva/lib/shapes/Transformer';\nimport {\n    Dispatch,\n    MouseEvent,\n    SetStateAction,\n    useCallback,\n    useContext,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { Image, Rect, Transformer } from 'react-konva';\nimport useImage from 'use-image';\nimport { AppSettingsContext } from '../../../../providers/AppSettingsProvider';\nimport { NoteSettingsContext } from '../../../../providers/NoteSettingsProvider';\nimport { ShapeBaseProps } from '../../../../types/common';\nimport {\n    MinCanvasSize,\n    PageProps,\n    PageSize,\n    PageSizeType,\n    StructureCanvasProps,\n} from '../../../../types/note';\nimport { clone } from '../../../Canvas/util';\nimport HeaderMenu from './HeaderMenu';\n\ninterface Props extends StructureCanvasProps {\n    // ページ情報\n    size: PageSizeType;\n    draggable?: boolean;\n    // キャンバス情報\n    index: number;\n    onChange: Dispatch<SetStateAction<PageProps>>;\n    // 選択状態\n    selected?: boolean;\n    onSelect: VoidFunction;\n}\n\nconst CanvasHandle: React.VFC<Props> = ({\n    size,\n    draggable = false,\n    index,\n    onChange,\n    selected = false,\n    onSelect,\n    data,\n    image: dataURL,\n    ...props\n}) => {\n    const rectRef = useRef<Konva.Rect>(null);\n    const tfRef = useRef<Konva.Transformer>(null);\n    const [isDragging, setDragging] = useState(false);\n    const [image] = useImage(dataURL ?? '');\n\n    const { mode: noteMode } = useContext(NoteSettingsContext);\n    const { mode: appMode, editCanvas, closeCanvas } = useContext(AppSettingsContext);\n\n    const pageSize = useMemo(() => {\n        return PageSize[size];\n    }, [size]);\n\n    const visibleMenu = useMemo(() => {\n        return selected && !isDragging && noteMode === 'select';\n    }, [isDragging, noteMode, selected]);\n\n    const visibleTransformer = useMemo(() => {\n        return draggable && selected;\n    }, [draggable, selected]);\n\n    // 選択時にサイズ変更を可能にする\n    useEffect(() => {\n        if (selected && tfRef.current && rectRef.current) {\n            tfRef.current.nodes([rectRef.current]);\n            // 強制描画\n            tfRef.current.getLayer()?.batchDraw();\n        }\n    }, [selected]);\n\n    /**\n     * 位置/サイズ変更の確定\n     */\n    const handleChange = useCallback(\n        (rect: ShapeBaseProps) => {\n            onChange((page) => {\n                const newPage = clone(page);\n                const structure = newPage.structures[index];\n                newPage.structures[index] = {\n                    ...structure,\n                    ...rect,\n                };\n\n                return newPage;\n            });\n        },\n        [index, onChange]\n    );\n\n    /**\n     * ドラッグ開始\n     */\n    const handleDragStart = useCallback(() => {\n        setDragging(true);\n    }, []);\n\n    /**\n     * 移動\n     */\n    const handleDragMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            // イベントを伝播させない\n            event.cancelBubble = true;\n\n            if (rectRef.current) {\n                // ドラッグした位置\n                const { x, y } = event.target.attrs;\n                if (typeof x === 'number' && typeof y === 'number') {\n                    // 位置がページサイズの範囲内になるように x, y を補正\n                    const { width, height } = rectRef.current.getSize();\n                    let [newX, newY] = [x, y];\n\n                    if (newX < 0) {\n                        newX = 0;\n                    } else if (newX > pageSize.width - width) {\n                        newX = pageSize.width - width;\n                    }\n                    if (newY < 0) {\n                        newY = 0;\n                    } else if (newY > pageSize.height - height) {\n                        newY = pageSize.height - height;\n                    }\n\n                    if (x !== newX || y !== newY) {\n                        rectRef.current.setPosition({ x: newX, y: newY });\n                    }\n                }\n            }\n        },\n        [pageSize.height, pageSize.width]\n    );\n\n    /**\n     * 移動の確定\n     */\n    const handleDragEnd = useCallback(\n        (_: KonvaEventObject<Event>) => {\n            if (rectRef.current) {\n                // 現在位置を取得\n                const { x, y } = rectRef.current.getPosition();\n                const { width, height } = rectRef.current.getSize();\n                const newRectProps: ShapeBaseProps = {\n                    x,\n                    y,\n                    width,\n                    height,\n                };\n                // ドラッグ終了\n                setDragging(false);\n                // 更新\n                handleChange(newRectProps);\n            }\n        },\n        [handleChange]\n    );\n\n    /**\n     * サイズを最小値以下にできないように制限\n     */\n    const handleChangeBoundBox = useCallback((oldBox: Box, newBox: Box) => {\n        if (newBox.width < MinCanvasSize.width || newBox.height < MinCanvasSize.height) {\n            return oldBox;\n        }\n        return newBox;\n    }, []);\n\n    /**\n     * サイズ変更の確定\n     */\n    const handleTransformEnd = useCallback(() => {\n        if (rectRef.current) {\n            const rect = rectRef.current;\n            const { x: scaleX, y: scaleY } = rect.scale();\n            // reset scale\n            rect.scale({ x: 1, y: 1 });\n            const newRectProps: ShapeBaseProps = {\n                x: rect.x(),\n                y: rect.y(),\n                width: Math.max(MinCanvasSize.width, rect.width() * scaleX),\n                height: Math.max(MinCanvasSize.height, rect.height() * scaleY),\n            };\n\n            handleChange(newRectProps);\n        }\n    }, [handleChange]);\n\n    const handleEdit = useCallback(\n        (event: MouseEvent<HTMLButtonElement>) => {\n            // ボタンの位置\n            const { top, left } = event.currentTarget.getBoundingClientRect();\n\n            // 編集開始\n            const canvasProps: ShapeBaseProps = {\n                x: left,\n                y: top + 42,\n                width: props.width,\n                height: props.height,\n            };\n            editCanvas(canvasProps);\n        },\n        [editCanvas, props.height, props.width]\n    );\n\n    return (\n        <>\n            <Rect {...props} fill=\"white\" />\n            {image && <Image {...props} image={image} />}\n            <Rect\n                ref={rectRef}\n                stroke=\"black\"\n                strokeWidth={2}\n                draggable={draggable}\n                {...props}\n                onClick={onSelect}\n                onTap={onSelect}\n                onDragStart={handleDragStart}\n                onDragMove={handleDragMove}\n                onDragEnd={handleDragEnd}\n                onTransformEnd={handleTransformEnd}\n            />\n            <HeaderMenu\n                visible={visibleMenu}\n                mode={appMode}\n                {...props}\n                onEdit={handleEdit}\n                onCancel={closeCanvas}\n            />\n            <Transformer\n                ref={tfRef}\n                visible={visibleTransformer}\n                rotateEnabled={false}\n                boundBoxFunc={handleChangeBoundBox}\n            />\n        </>\n    );\n};\n\nexport default CanvasHandle;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Dispatch, SetStateAction, useCallback, useContext, useMemo } from 'react';\nimport { Layer, Rect } from 'react-konva';\nimport { AppSettingsContext } from '../../../providers/AppSettingsProvider';\nimport { PageProps, PageSize } from '../../../types/note';\nimport CanvasHandle from '../nodes/CanvasHandle';\n\ninterface Props extends Pick<PageProps, 'size' | 'structures'> {\n    draggable?: boolean;\n    onChange: Dispatch<SetStateAction<PageProps>>;\n}\n\nconst Frame: React.VFC<Props> = ({ size, structures, draggable = false, onChange }) => {\n    const { selectedCanvasIndex, onSelectCanvas } = useContext(AppSettingsContext);\n\n    const pageSize = useMemo(() => {\n        return PageSize[size];\n    }, [size]);\n\n    const handleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (event.target.attrs.type === 'background') {\n                onSelectCanvas(undefined);\n            }\n        },\n        [onSelectCanvas]\n    );\n\n    return (\n        <Layer>\n            {/* クリックが空振りしたときに選択解除する */}\n            <Rect\n                x={0}\n                y={0}\n                {...pageSize}\n                attrs={{ type: 'background' }}\n                onClick={handleClick}\n                onTap={handleClick}\n            />\n            {structures.map((structure, index) => (\n                <CanvasHandle\n                    key={`handle-${index}`}\n                    size={size}\n                    draggable={draggable}\n                    index={index}\n                    onChange={onChange}\n                    selected={index === selectedCanvasIndex}\n                    onSelect={() => onSelectCanvas(index)}\n                    {...structure}\n                />\n            ))}\n        </Layer>\n    );\n};\n\nexport default Frame;\n","import { useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { PageSize, PageSizeType } from '../../../types/note';\n\ninterface LineProps {\n    id: string;\n    points: number[];\n    stroke: string;\n    strokeWidth: number;\n    dash: [number, number];\n    listening: boolean;\n}\n\nconst defaultLineProps: LineProps = {\n    id: '',\n    points: [],\n    stroke: '#c9e1ff',\n    strokeWidth: 1,\n    dash: [5, 3],\n    listening: false,\n};\n\nconst GridSize = 50;\n\ninterface Props {\n    size: PageSizeType;\n}\n\nconst Grid: React.VFC<Props> = ({ size }) => {\n    const layerSize = useMemo(() => {\n        return PageSize[size];\n    }, [size]);\n\n    const horizontalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let y = 0; y <= layerSize.height; y += GridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Horizontal_${count}`,\n                points: [0, y, layerSize.width, y],\n            });\n            count++;\n        }\n        return lines;\n    }, [layerSize]);\n\n    const verticalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let x = 0; x <= layerSize.width; x += GridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Vertical_${count}`,\n                points: [x, 0, x, layerSize.height],\n            });\n            count++;\n        }\n        return lines;\n    }, [layerSize]);\n\n    return (\n        <Layer>\n            {/* horizontal */}\n            {horizontalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n            {/* vertical */}\n            {verticalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default Grid;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport {\n    Dispatch,\n    SetStateAction,\n    useCallback,\n    useContext,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { Stage } from 'react-konva';\nimport { useContextBridge } from '../../hooks/useContextBridge';\nimport { AppSettingsContext } from '../../providers/AppSettingsProvider';\nimport { ConfigurationContext } from '../../providers/ConfigurationProvider';\nimport { NoteSettingsContext } from '../../providers/NoteSettingsProvider';\nimport { DOMSize } from '../../types/common';\nimport { PageProps, PageSize } from '../../types/note';\nimport { clone } from '../Canvas/util';\nimport Draw from './layer/Draw';\nimport Frame from './layer/Frame';\nimport Grid from './layer/Grid';\n\ninterface Props extends PageProps {\n    viewBox: DOMSize;\n    onChange: Dispatch<SetStateAction<PageProps>>;\n}\n\nconst Page: React.VFC<Props> = ({ viewBox, size, drawings, structures, onChange }) => {\n    const stageRef = useRef<Konva.Stage>(null);\n    const { mode: noteMode, settings } = useContext(NoteSettingsContext);\n    const { mode: appMode } = useContext(AppSettingsContext);\n\n    // Stage 以降で使用する Context を Bridge する\n    const ContextBridge = useContextBridge(\n        AppSettingsContext,\n        ConfigurationContext,\n        NoteSettingsContext\n    );\n\n    // 描画用\n    const isDrawing = useRef<boolean>();\n    const [points, setPoints] = useState<number[]>([]);\n\n    const pageSize = useMemo(() => {\n        return PageSize[size];\n    }, [size]);\n\n    const draggable = useMemo(() => {\n        return appMode === 'note' && noteMode === 'select';\n    }, [appMode, noteMode]);\n\n    /**\n     * ページサイズの範囲で表示領域を移動する\n     */\n    const handleDragMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            const { x, y } = event.target.attrs;\n            if (stageRef.current && typeof x === 'number' && typeof y === 'number') {\n                let [newX, newY] = [x, y];\n                let modified = false;\n\n                if (newX > 0) {\n                    newX = 0;\n                    modified = true;\n                } else if (Math.abs(newX) + viewBox.width > pageSize.width) {\n                    newX = viewBox.width - pageSize.width;\n                    modified = true;\n                }\n\n                if (newY > 0) {\n                    newY = 0;\n                    modified = true;\n                } else if (Math.abs(newY) + viewBox.height > pageSize.height) {\n                    newY = viewBox.height - pageSize.height;\n                    modified = true;\n                }\n\n                if (modified) {\n                    stageRef.current.setPosition({ x: newX, y: newY });\n                }\n            }\n        },\n        [pageSize.height, pageSize.width, viewBox.height, viewBox.width]\n    );\n\n    /**\n     * 描画の開始\n     */\n    const handlePointerDown = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (noteMode !== 'edit') {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (stageRef.current && point) {\n                isDrawing.current = true;\n\n                const { x, y } = stageRef.current.getPosition();\n                setPoints([point.x + Math.abs(x), point.y + Math.abs(y)]);\n            }\n        },\n        [noteMode]\n    );\n\n    /**\n     * ポインタの移動時に位置を取得\n     */\n    const handlePointerMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (noteMode !== 'edit') {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (stageRef.current && point) {\n                const { x, y } = stageRef.current.getPosition();\n                setPoints((state) => [...state, point.x + Math.abs(x), point.y + Math.abs(y)]);\n            }\n        },\n        [noteMode]\n    );\n\n    /**\n     * 描画の確定\n     */\n    const handlePointerUp = useCallback(\n        (_: KonvaEventObject<Event>) => {\n            if (noteMode !== 'edit') {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            isDrawing.current = false;\n            // 更新を確定\n            onChange((page) => {\n                const data = clone(page);\n                // 描画データを追加\n                data.drawings.push({\n                    ...settings,\n                    points,\n                });\n\n                return data;\n            });\n            // 現在の描画データをクリア\n            setPoints([]);\n        },\n        [noteMode, onChange, points, settings]\n    );\n\n    return (\n        <Stage\n            ref={stageRef}\n            width={viewBox.width}\n            height={viewBox.height}\n            draggable={draggable}\n            onDragMove={handleDragMove}\n            onPointerDown={handlePointerDown}\n            onPointerMove={handlePointerMove}\n            onPointerUp={handlePointerUp}\n        >\n            <ContextBridge>\n                <Grid size={size} />\n                <Frame\n                    size={size}\n                    structures={structures}\n                    draggable={draggable}\n                    onChange={onChange}\n                />\n                <Draw drawings={drawings} settings={settings} points={points} />\n            </ContextBridge>\n        </Stage>\n    );\n};\n\nexport default Page;\n","import { Box } from '@mui/material';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { AppSettingsContext } from '../../providers/AppSettingsProvider';\nimport { DOMSize } from '../../types/common';\nimport Page from './Page';\n\nconst Note: React.VFC = () => {\n    // キャンバスの親要素\n    const containerRef = useRef<HTMLDivElement>(null);\n    // 表示領域\n    const [viewBox, setViewBox] = useState<DOMSize>({ width: 0, height: 0 });\n    // ページデータ\n    const { page, onChange } = useContext(AppSettingsContext);\n\n    // 要素のリサイズを監視\n    useEffect(() => {\n        const observer = new ResizeObserver((entries) => {\n            const { width, height } = entries[0].contentRect;\n            setViewBox({\n                width,\n                height,\n            });\n        });\n\n        if (containerRef.current) {\n            observer.observe(containerRef.current);\n        }\n\n        return () => {\n            observer.disconnect();\n        };\n    }, []);\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{\n                width: 'auto',\n                height: '100%',\n                backgroundColor: '#ffffff',\n                overscrollBehavior: 'contain',\n                overflow: 'hidden',\n            }}\n        >\n            <Page viewBox={viewBox} {...page} onChange={onChange} />\n        </Box>\n    );\n};\n\nexport default Note;\n","import { Box } from '@mui/material';\nimport { useContext, useMemo } from 'react';\nimport { AppSettingsContext } from '../providers/AppSettingsProvider';\nimport { ConfigurationContext } from '../providers/ConfigurationProvider';\nimport { emptyStructure } from '../types/shape';\nimport Canvas from './Canvas';\nimport Note from './Note';\n\nconst MainContainer: React.VFC = () => {\n    const { page, selectedCanvasIndex, canvasProps, canvasRef } = useContext(AppSettingsContext);\n    const { tool } = useContext(ConfigurationContext);\n\n    const structure = useMemo(() => {\n        if (typeof selectedCanvasIndex === 'number') {\n            return page.structures[selectedCanvasIndex].data;\n        }\n    }, [page.structures, selectedCanvasIndex]);\n\n    return (\n        <>\n            <Box\n                sx={{\n                    boxSizing: 'border-box',\n                    ml: 1,\n                    mb: 1,\n                    flex: 1,\n                    border: (theme) => `1px solid ${theme.palette.divider}`,\n                    borderRadius: 1,\n                    overflow: 'hidden',\n                }}\n            >\n                <Note />\n            </Box>\n            {canvasProps && (\n                <Box\n                    sx={{\n                        position: 'absolute',\n                        top: canvasProps.y,\n                        left: canvasProps.x,\n                        width: canvasProps.width,\n                        height: canvasProps.height,\n                        backgroundColor: 'red',\n                    }}\n                >\n                    <Canvas ref={canvasRef} tool={tool} structure={structure ?? emptyStructure} />\n                </Box>\n            )}\n        </>\n    );\n};\n\nexport default MainContainer;\n","import { ArrowDownward, Delete, Edit, PanToolAlt, Texture } from '@mui/icons-material';\nimport { Stack, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { MouseEvent, ReactElement, useCallback, useContext } from 'react';\nimport { ConfigurationContext } from '../../providers/ConfigurationProvider';\nimport { CanvasTool, isCanvasTool } from '../../types/common';\n\ninterface Props {\n    tool: CanvasTool;\n    onChange: (tool: CanvasTool) => void;\n}\n\ninterface ButtonProps {\n    tool: CanvasTool;\n    icon: ReactElement;\n    label: string;\n}\n\nconst ToolboxButtons: Readonly<Record<CanvasTool, ButtonProps>> = {\n    select: {\n        tool: 'select',\n        icon: <PanToolAlt />,\n        label: '選択',\n    },\n    pen: {\n        tool: 'pen',\n        icon: <Edit />,\n        label: '梁要素の描画',\n    },\n    force: {\n        tool: 'force',\n        icon: <ArrowDownward />,\n        label: '集中荷重の追加',\n    },\n    trapezoid: {\n        tool: 'trapezoid',\n        icon: <Texture />,\n        label: '分布荷重の追加',\n    },\n    delete: {\n        tool: 'delete',\n        icon: <Delete />,\n        label: '要素の削除',\n    },\n};\n\nconst CanvasToolboxCore: React.VFC<Props> = ({ tool, onChange }) => {\n    /**\n     * ツールの変更\n     */\n    const handleChange = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isCanvasTool(newValue)) {\n                onChange(newValue);\n            }\n        },\n        [onChange]\n    );\n\n    return (\n        <Stack sx={{ width: 160 }} alignItems=\"flex-start\">\n            <Typography variant=\"caption\">Toolbox</Typography>\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={tool}\n                exclusive\n                fullWidth\n                onChange={handleChange}\n            >\n                {Object.entries(ToolboxButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n        </Stack>\n    );\n};\n\nconst CanvasToolbox: React.VFC = () => {\n    const { tool, setTool } = useContext(ConfigurationContext);\n    return <CanvasToolboxCore tool={tool} onChange={setTool} />;\n};\n\nexport default CanvasToolbox;\n","import { AutoFixNormal, Edit, PanToolAlt } from '@mui/icons-material';\nimport {\n    Slider,\n    Stack,\n    TextField,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography,\n} from '@mui/material';\nimport {\n    ChangeEvent,\n    Dispatch,\n    MouseEvent,\n    ReactElement,\n    SetStateAction,\n    useCallback,\n    useContext,\n} from 'react';\nimport { NoteSettingsContext } from '../../providers/NoteSettingsProvider';\nimport { DrawSettings, isNoteMode, NoteMode } from '../../types/note';\n\ninterface Props {\n    mode: NoteMode;\n    settings: DrawSettings;\n    onChangeMode: Dispatch<SetStateAction<NoteMode>>;\n    onChangeDrawSettings: Dispatch<SetStateAction<DrawSettings>>;\n}\n\nconst DrawModes = ['pen', 'eraser'] as const;\ntype DrawMode = typeof DrawModes[number];\nconst isDrawMode = (item: unknown): item is DrawMode => {\n    if (typeof item === 'string') {\n        return DrawModes.some((mode) => mode === item);\n    }\n    return false;\n};\n\ninterface ButtonProps {\n    mode: NoteMode | DrawMode;\n    icon: ReactElement;\n    label: string;\n}\n\nconst NoteModeButtons: Readonly<Record<NoteMode, ButtonProps>> = {\n    select: {\n        mode: 'select',\n        icon: <PanToolAlt />,\n        label: '選択',\n    },\n    edit: {\n        mode: 'edit',\n        icon: <Edit />,\n        label: '描画',\n    },\n};\n\nconst DrawModeButtons: Readonly<Record<DrawMode, ButtonProps>> = {\n    pen: {\n        mode: 'pen',\n        icon: <Edit />,\n        label: 'ペンツール',\n    },\n    eraser: {\n        mode: 'eraser',\n        icon: <AutoFixNormal />,\n        label: '消しゴム',\n    },\n};\n\nconst MinStrokeWidth = 4;\nconst MaxStrokeWidth = 20;\nconst StrokeWidthStep = 4;\n\nconst NoteToolboxCore: React.VFC<Props> = ({\n    mode,\n    settings,\n    onChangeMode,\n    onChangeDrawSettings,\n}) => {\n    /**\n     * モードの変更\n     */\n    const handleChangeMode = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isNoteMode(newValue)) {\n                onChangeMode(newValue);\n            }\n        },\n        [onChangeMode]\n    );\n\n    /**\n     * 描画ツールの選択\n     */\n    const handleChangeTool = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isDrawMode(newValue)) {\n                onChangeDrawSettings((state) => ({\n                    ...state,\n                    eraser: newValue === 'eraser',\n                }));\n            }\n        },\n        [onChangeDrawSettings]\n    );\n\n    const handleChangeStrokeWidth = useCallback(\n        (_: Event, value: number | number[]) => {\n            if (typeof value === 'number') {\n                onChangeDrawSettings((state) => ({\n                    ...state,\n                    strokeWidth: value,\n                }));\n            }\n        },\n        [onChangeDrawSettings]\n    );\n\n    const handleChangeStroke = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            if (event.target.checkValidity()) {\n                const { value } = event.target;\n                onChangeDrawSettings((state) => ({\n                    ...state,\n                    stroke: value,\n                }));\n            }\n        },\n        [onChangeDrawSettings]\n    );\n\n    return (\n        <Stack sx={{ width: 160 }} alignItems=\"flex-start\">\n            <Typography variant=\"caption\">Toolbox</Typography>\n            {/* 選択 / 編集の切り替え */}\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={mode}\n                exclusive\n                fullWidth\n                onChange={handleChangeMode}\n            >\n                {Object.entries(NoteModeButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n            <Typography variant=\"caption\" sx={{ mt: 1 }}>\n                描画ツール\n            </Typography>\n            {/* eraser */}\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={settings.eraser ? 'eraser' : 'pen'}\n                exclusive\n                fullWidth\n                disabled={mode === 'select'}\n                onChange={handleChangeTool}\n            >\n                {Object.entries(DrawModeButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n            {/* strokeWidth */}\n            <Typography variant=\"caption\" sx={{ mt: 1 }}>\n                太さ\n            </Typography>\n            <Slider\n                sx={{ ml: 1, mb: 2, boxSizing: 'border-box', width: 140 }}\n                value={settings.strokeWidth}\n                min={MinStrokeWidth}\n                max={MaxStrokeWidth}\n                step={StrokeWidthStep}\n                marks\n                valueLabelDisplay=\"auto\"\n                disabled={mode === 'select'}\n                onChange={handleChangeStrokeWidth}\n            />\n            {/* stroke */}\n            <TextField\n                type=\"color\"\n                label=\"ペンの色\"\n                value={settings.stroke}\n                disabled={mode === 'select' || settings.eraser}\n                fullWidth\n                margin=\"dense\"\n                size=\"small\"\n                onChange={handleChangeStroke}\n            />\n        </Stack>\n    );\n};\n\nconst NoteToolbox: React.VFC = () => {\n    const props = useContext(NoteSettingsContext);\n    return <NoteToolboxCore {...props} />;\n};\n\nexport default NoteToolbox;\n","import { useContext } from 'react';\nimport { AppSettingsContext } from '../../providers/AppSettingsProvider';\nimport CanvasToolbox from './CanvasToolbox';\nimport NoteToolbox from './NoteToolbox';\n\nconst Toolbox: React.VFC = () => {\n    const { mode } = useContext(AppSettingsContext);\n    if (mode === 'canvas') {\n        return <CanvasToolbox />;\n    }\n    return <NoteToolbox />;\n};\n\nexport default Toolbox;\n","import { Box } from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport { DOMSize } from '../types/common';\nimport Header from './Header';\nimport MainContainer from './MainContainer';\nimport Toolbox from './Toolbox';\n\nconst Layout: React.VFC = () => {\n    const [windowRect, setWindowRect] = useState<DOMSize>({ width: 0, height: 0 });\n\n    const fitWindowSize = useCallback(() => {\n        const { innerHeight, innerWidth } = window;\n        setWindowRect({\n            height: innerHeight,\n            width: innerWidth,\n        });\n    }, []);\n\n    useEffect(() => {\n        fitWindowSize();\n        window.addEventListener('resize', fitWindowSize);\n\n        return () => {\n            window.removeEventListener('resize', fitWindowSize);\n        };\n    }, [fitWindowSize]);\n\n    return (\n        <Box sx={{ ...windowRect, overflow: 'hidden' }}>\n            <Header />\n            <Box\n                sx={{\n                    boxSizing: 'border-box',\n                    width: 'auto',\n                    height: 'calc(100% - 48px)',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    flexWrap: 'nowrap',\n                    alignItems: 'stretch',\n                    pt: 1,\n                    px: 1,\n                }}\n            >\n                <Toolbox />\n                <MainContainer />\n            </Box>\n        </Box>\n    );\n};\n\nexport default Layout;\n","import { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport React from 'react';\nimport AppSettingsProvider from '../providers/AppSettingsProvider';\nimport ConfigurationProvider from '../providers/ConfigurationProvider';\nimport NoteSettingsProvider from '../providers/NoteSettingsProvider';\nimport Layout from './Layout';\n\nconst theme = createTheme();\n\nconst App: React.VFC = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <AppSettingsProvider>\n                <ConfigurationProvider>\n                    <NoteSettingsProvider>\n                        <CssBaseline />\n                        <Layout />\n                    </NoteSettingsProvider>\n                </ConfigurationProvider>\n            </AppSettingsProvider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}