{"version":3,"sources":["components/Canvas/popup/pins/pin_1.svg","components/Canvas/util/vector.ts","components/Canvas/util/common.ts","components/Canvas/util/structure.ts","types/shape.ts","types/note.ts","providers/AppSettingsProvider.tsx","providers/ConfigurationProvider.tsx","providers/NoteSettingsProvider.tsx","components/Version.tsx","components/Header.tsx","hooks/useContextBridge.tsx","components/Canvas/provider/CanvasProvider.tsx","types/common.ts","components/Canvas/provider/DrawProvider.tsx","components/Canvas/layer/DrawLayer.tsx","components/Canvas/layer/GridLayer.tsx","components/Canvas/shape/Beam.tsx","components/Canvas/shape/Force.tsx","components/Canvas/shape/Guide.tsx","components/Canvas/shape/Node.tsx","components/Canvas/shape/Trapezoid.tsx","components/Canvas/layer/GuideLayer.tsx","components/Canvas/provider/PopupProvider.tsx","components/Canvas/layer/ShapeLayer.tsx","components/Canvas/popup/ForceEditor.tsx","components/Canvas/popup/pins/pin_2.svg","components/Canvas/popup/pins/pin_3.svg","components/Canvas/popup/pins/pin_4.svg","components/Canvas/popup/PinSelector.tsx","components/Canvas/popup/TrapezoidEditor.tsx","components/Canvas/popup/index.tsx","components/Canvas/core.tsx","components/Canvas/index.tsx","components/Note/layer/Draw.tsx","components/Note/nodes/CanvasHandle/HeaderMenu.tsx","components/Note/nodes/CanvasHandle/index.tsx","components/Note/layer/Frame.tsx","components/Note/layer/Grid.tsx","components/Note/Page.tsx","components/Note/index.tsx","components/MainContainer.tsx","components/Toolbox/CanvasToolbox.tsx","components/Toolbox/NoteToolbox.tsx","components/Toolbox/index.tsx","components/Layout.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["_path","vX","Vector","vY","lerp","v1","v2","alpha","dir","clone","subtract","normalize","distance","mv","multiplyScalar","add","verticalNormalizeVector","v","y","x","dot","invert","data","JSON","parse","stringify","round","value","figure","n","result","Math","snapping","snapSize","i","snap","createNode","id","uuid","NodePinTypes","isNode","item","isForce","name","beam","force","distanceI","isTrapezoid","forceI","forceJ","distanceJ","emptyStructure","unit","length","nodes","beams","forces","trapezoids","NoteModes","PageSize","A3","width","height","A4","B4","B5","MinCanvasSize","defaultDrawSettings","stroke","strokeWidth","eraser","lineJoin","lineCap","defaultPageProps","size","drawings","structures","AppSettingsContext","createContext","undefined","AppSettingsProvider","children","useState","mode","setMode","page","setPage","selectedCanvasIndex","setCanvasIndex","canvasProps","setCanvasProps","canvasRef","useRef","editCanvas","useCallback","props","closeCanvas","current","structure","getStructure","image","toDataURL","state","Provider","onChangeMode","onChange","onSelectCanvas","ConfigurationContext","ConfigurationProvider","tool","setTool","NoteSettingsContext","NoteSettingsProvider","settings","setSettings","onChangeDrawSettings","hash","process","substring","date","version","Version","Typography","variant","sx","ml","Header","AppBar","position","Toolbar","component","color","useContextBridge","contexts","cRef","React","map","context","useContext","useMemo","reduceRight","acc","Context","CanvasContext","CanvasProvider","source","gridSize","readonly","setNodes","setBeams","setForces","forceAverage","setForceAve","setTrapezoids","selected","setSelected","useEffect","b","f","t","ave","reduce","prev","nodeMap","forEach","node","beamMap","onChangeNode","items","index","findIndex","onCreateNode","arr","Array","isArray","push","newNodes","onDeleteNode","nodeI","nodeJ","splice","onChangeBeam","onCreateBeam","isBeam","onDeleteBeam","find","ns","Set","beamId","j","has","onChangeForce","onCreateForce","onDeleteForce","onChangeTrapezoid","onCreateTrapezoid","onDeleteTrapezoid","isSelected","some","type","select","toggleSelect","filter","clearSelection","CanvasTools","isNumberArray","every","DrawContext","DrawProvider","points","setPoints","isDrawing","beamRef","disabled","handlePointerDown","event","target","attrs","beamPoints","point","getStage","getPointerPosition","handlePointerMove","makeBeam","start","end","edgeI","edgeJ","newBeam","n1","n2","makeTrapezoid","trapezoid","pi","slice","pj","bi","bj","beamLength","beamDirection","ps","pe","disStart","disEnd","ti","angle","r","cos","tj","isGlobal","createTrapezoid","handlePointerUp","_","onPointerDown","onPointerMove","onPointerUp","DrawLayer","defaultLineProps","dash","listening","GridLayer","horizontalLines","lines","count","verticalLines","Beam","ref","onClick","labelPosition","setLabelPosition","labelWidth","setLabelWidth","labelAngle","setLabelAngle","guidePoints","setGuidePoints","viRef","vjRef","nodeI_x","nodeI_y","nodeJ_x","nodeJ_y","vi","vj","label","angleDeg","guideDir","guideI","guideJ","onTap","rotation","text","fontSize","fill","align","wrap","ellipsis","Guide","forwardRef","Force","ratio","visible","onDblClick","setDistance","setRotation","nodeIx","nodeIy","nodeJx","nodeJy","tail","vertical","arrowLength","isNaN","head","max","p","onDblTap","pointerLength","pointerWidth","offsetX","defaultGuideProps","defaultGuideArrowProps","pointerAtBeginning","GuideLine","v1Ref","v2Ref","basis","setBasis","dist","Pins","free","pin","pinX","pinZ","fixX","fix","Node","draggable","isDragging","onDragStart","onDragMove","onDragEnd","imageUrl","useImage","handleClick","cancelBubble","radius","_useStrictMode","offsetY","defaultArrowProps","defaultLabelProps","Trapezoid","arrows","setArrows","line","setLine","labelI","setLabelI","labelJ","setLabelJ","vI","vJ","ix","iy","jx","jy","vd","rotateDeg","direction","interval","getInsidePoints","slope","NaN","intercept","insideArrows","pd","pu","targetLine","slope1","intercept1","slope2","intercept2","px","rangeX","sort","a","rangeY","err","console","error","intercectPoint","arrow","guidePosition","gi","gj","GuideInterval","GuideLayer","guide","maxX","Number","MIN_SAFE_INTEGER","minX","MAX_SAFE_INTEGER","guidesX","maxY","minY","guidesY","pointsX","pointsY","array","from","key","localX","GlobalVerticalGuidePositionX","GlobalHorizontalGuidePositionY","PopupContext","PopupProvider","popupType","setPopupType","top","left","popupPosition","setPopupPosition","popupParams","setPopupParams","open","params","close","ShapeLayer","nodeRefs","beamRefs","layerRef","draggingNode","setDraggingNode","isNodeDraggable","dragPointRef","timerRef","getBeamPoints","ni","nj","getBeamPointsByBeamId","handleClickBeam","vp","createForceParams","handleDblClickNode","draw","handleDragStartNode","clearInterval","setInterval","handleDragMoveNode","handleDragEndNode","py","handleClickForce","forceId","currentTarget","handleDblClickForce","handleClickTrapezoid","handleDblClickTrapezoid","el","Boolean","ForceEditor","onClose","setValue","setError","handleSubmit","preventDefault","checkValidity","num","parseFloat","handleChange","errorMessage","Paper","Stack","spacing","autoComplete","noValidate","onSubmit","TextField","margin","required","fullWidth","InputProps","endAdornment","InputAdornment","helperText","justifyContent","Button","ConnectedForceEditor","values","_extends","Object","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPin1","_ref","svgRef","title","titleId","viewBox","xmlns","d","_circle","_circle2","_line","ForwardRef","SvgPin2","cx","cy","x1","y1","x2","y2","SvgPin3","style","_line2","_line3","_line4","_line5","SvgPin4","PinButtons","icon","SvgIcon","transform","defaultButtonProps","alignItems","PinSelector","setPin","newValue","ToggleButtonGroup","orientation","exclusive","entries","ToggleButton","ConnectedPinSelector","validateForce","val","validateAngle","parseInt","TrapezoidEditor","setValues","errors","setErrors","value1","valid1","value2","valid2","value3","valid3","valid","parseFormValues","log","error1","error2","handleChangeIsGlobal","checked","toFormValues","FormControlLabel","control","Checkbox","ConnectedTrapezoidEditor","Popup","Box","zIndex","CanvasCore","ContextBridge","useImperativeHandle","Canvas","setSize","containerRef","observer","ResizeObserver","contentRect","observe","disconnect","backgroundColor","overscrollBehavior","Draw","lineProps","globalCompositeOperation","Background","styled","display","padding","Spacer","flex","HeaderMenu","onEdit","onCopy","onDelete","onCancel","anchorEl","setAnchorEl","handleClickMore","handleCloseMenu","divProps","IconButton","Menu","MenuItem","CanvasHandle","onSelect","dataURL","rectRef","tfRef","setDragging","noteMode","appMode","pageSize","visibleMenu","visibleTransformer","getLayer","batchDraw","rect","newPage","handleDragStart","handleDragMove","getSize","newX","newY","setPosition","handleDragEnd","getPosition","newRectProps","handleChangeBoundBox","oldBox","newBox","handleTransformEnd","scale","scaleX","scaleY","handleEdit","getBoundingClientRect","onTransformEnd","rotateEnabled","boundBoxFunc","Frame","Grid","layerSize","Page","stageRef","modified","abs","Note","setViewBox","overflow","MainContainer","boxSizing","mb","border","theme","palette","divider","borderRadius","ToolboxButtons","PanToolAlt","pen","ArrowDownward","Texture","delete","Delete","CanvasToolboxCore","CanvasToolbox","DrawModes","NoteModeButtons","edit","DrawModeButtons","AutoFixNormal","NoteToolboxCore","handleChangeMode","handleChangeTool","handleChangeStrokeWidth","handleChangeStroke","mt","Slider","min","step","marks","valueLabelDisplay","NoteToolbox","Toolbox","Layout","windowRect","setWindowRect","fitWindowSize","window","innerHeight","innerWidth","addEventListener","removeEventListener","flexDirection","flexWrap","pt","createTheme","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10c85652.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80 0 L30 80 L130 80 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin1);\nexport default __webpack_public_path__ + \"static/media/pin_1.92d54adc.svg\";\nexport { ForwardRef as ReactComponent };","import Vector from 'victor';\n\nexport { Vector };\n\n// X方向のベクトル\nexport const vX = new Vector(1, 0);\n// Y方向のベクトル\nexport const vY = new Vector(0, 1);\n\n/**\n * v1 と v2 の間にある vp を取得する\n * @param v1\n * @param v2\n * @param alpha\n * @returns\n */\nexport const lerp = (v1: Vector, v2: Vector, alpha: number): Vector => {\n    if (alpha >= 1) {\n        return v2;\n    }\n    if (alpha <= 0) {\n        return v1;\n    }\n    const dir = v2.clone().subtract(v1).normalize();\n    const distance = v1.distance(v2);\n    const mv = dir.multiplyScalar(distance * alpha);\n    return v1.clone().add(mv);\n};\n\n/**\n * v1 と v2 に直交する単位ベクトルを返す\n * @param v1\n * @param v2\n * @returns\n */\nexport const verticalNormalizeVector = (v1: Vector, v2: Vector): Vector => {\n    const dir = v2.clone().subtract(v1).normalize();\n    const v = new Vector(dir.y, dir.x * -1).normalize();\n\n    const value = vY.dot(v);\n    if (value > 0) {\n        v.invert();\n    }\n\n    return v;\n};\n","import { Point } from '../types';\nimport { lerp, Vector } from './vector';\n\nexport const clone = <T>(data: T): T => {\n    return JSON.parse(JSON.stringify(data)) as T;\n};\n\nexport const round = (value: number, figure = 3): number => {\n    const n = 10 ** figure;\n    const result = Math.round(value * n) / n;\n    return result;\n};\n\nconst snapping = (value: number, snapSize = 25): number => {\n    const n = value / snapSize;\n    const i = Math.round(n) * snapSize;\n    return i;\n};\n\nexport const DEFAULT_SNAP_SIZE = 25;\n\nexport const snap = ([x, y]: [number, number], snapSize = DEFAULT_SNAP_SIZE): [number, number] => {\n    return [snapping(x, snapSize), snapping(y, snapSize)];\n};\n\nconst InsideArrowCount = 10;\nconst InsideArrowInterval = 25;\nconst InsideArrowMinInterval = 10;\n\n/**\n * 開始点から終了点まで等間隔に点を取る\n * @param start\n * @param end\n * @param direction\n * @returns\n */\nexport const getInsidePoints = (start: Vector, end: Vector, direction: Vector): Vector[] => {\n    const points: Vector[] = [];\n    // 2点間の距離\n    const distance = start.distance(end);\n    // 分割数\n    let count = InsideArrowCount;\n    // 間隔\n    let interval = distance / (count + 1);\n    while (interval < InsideArrowInterval && count > 0) {\n        count--;\n        interval = distance / (count + 1);\n    }\n\n    if (count > 0) {\n        // 始点から interval の間隔で count 個 点を取る\n        for (let i = 1; i <= count; i++) {\n            const point = start.clone().add(direction.clone().multiplyScalar(interval * i));\n            points.push(point);\n        }\n    } else {\n        // 半分にしてみる\n        interval = distance / 2;\n        if (interval >= InsideArrowMinInterval) {\n            // 半分の位置に点を置く\n            const point = lerp(start, end, 0.5);\n            points.push(point);\n        }\n    }\n\n    return points;\n};\n\n/**\n * 開始点からある方向に伸ばした線が対象となる線と交わる点を取得する\n * @param targetLine 対象となる Line [始点、終点、傾き、切片]\n * @param start 開始点\n * @param dir 方向\n * @returns 交点（なければ null）\n */\nexport const intercectPoint = (\n    targetLine: [Vector, Vector, number, number],\n    start: Vector,\n    dir: Vector\n): Point | null => {\n    const [pi, pj, slope1, intercept1] = targetLine;\n    let point: Point | null = null;\n    try {\n        // dir の傾き\n        const end: Vector = start.clone().add(dir);\n        const slope2 = end.x - start.x !== 0 ? (end.y - start.y) / (end.x - start.x) : NaN;\n        // dir の切片\n        const intercept2 = isNaN(slope2) ? NaN : start.y - slope2 * start.x;\n\n        if (slope1 === slope2) {\n            // 平行なので交点なし\n            return null;\n        }\n\n        if (!isNaN(slope1) && !isNaN(slope2)) {\n            // どちらも垂直でない\n            const px = (intercept2 - intercept1) / (slope1 - slope2);\n            const py = slope1 * px + intercept1;\n\n            point = [px, py];\n        } else if (isNaN(slope1)) {\n            // 対象の Line が垂直\n            const px = pi.x;\n            const py = px * slope2 + intercept2;\n\n            point = [px, py];\n        } else if (isNaN(slope2)) {\n            // dir が垂直\n            const px = start.x;\n            const py = px * slope1 + intercept1;\n\n            point = [px, py];\n        }\n\n        // 交点が Line の内側？\n        if (point) {\n            const [x, y] = point;\n            const rangeX = [pi.x, pj.x].sort((a, b) => a - b);\n            const rangeY = [pi.y, pj.y].sort((a, b) => a - b);\n            if (x >= rangeX[0] && x <= rangeX[1] && y >= rangeY[0] && y <= rangeY[1]) {\n                return point;\n            }\n        }\n        return null;\n    } catch (err) {\n        console.error(err);\n    }\n\n    return null;\n};\n","import { v4 as uuid } from 'uuid';\nimport { Beam, Force, Node, Structure, Trapezoid } from '../../../types/shape';\nimport { round } from './common';\nimport { Vector } from './vector';\n\n/**\n * 節点の作成\n * @param x\n * @param y\n * @returns\n */\nexport const createNode = (x: number, y: number): Node => {\n    return {\n        id: uuid(),\n        x,\n        y,\n    };\n};\n\nexport const createBeam = (name: string, nodeI: string, nodeJ: string): Omit<Beam, 'id'> => {\n    return {\n        name,\n        nodeI,\n        nodeJ,\n    };\n};\n\ntype CreateForceParams = Omit<Force, 'id'>;\n\nexport const createForce = (params: CreateForceParams): Force => {\n    return {\n        ...params,\n        id: uuid(),\n    };\n};\n\nexport const createForceParams = (\n    beam: string,\n    vi: Vector,\n    vj: Vector,\n    vp: Vector\n): Omit<Force, 'id' | 'name'> => {\n    const beamLength = vi.distance(vj);\n    // クリック位置までの距離\n    const distance = vi.distance(vp);\n\n    return {\n        beam,\n        force: 10,\n        distanceI: round(distance / beamLength),\n    };\n};\n\nexport const replaceNode = (structure: Structure, targetId: string, newId: string): Structure => {\n    structure.beams.forEach((beam) => {\n        if (beam.nodeI === targetId) {\n            beam.nodeI = newId;\n        }\n        if (beam.nodeJ === targetId) {\n            beam.nodeJ = newId;\n        }\n    });\n    return structure;\n};\n\nexport const createTrapezoid = (\n    start: number[],\n    end: number[],\n    beamId: string,\n    beamPoints: number[]\n): Trapezoid => {\n    // 梁要素の情報\n    const pi = beamPoints.slice(0, 2);\n    const pj = beamPoints.slice(-2);\n    const bi = new Vector(pi[0], pi[1]);\n    const bj = new Vector(pj[0], pj[1]);\n    const beamLength = bi.distance(bj);\n    const beamDirection = bj.clone().subtract(bi).normalize();\n\n    // ドラッグ開始点/終了点\n    let ps = new Vector(start[0], start[1]);\n    let pe = new Vector(end[0], end[1]);\n    // 開始点と終了点のどちらが i端に近い？\n    let disStart = bi.distance(ps);\n    let disEnd = bi.distance(pe);\n    if (disStart > disEnd) {\n        // 終了点の方が i端に近ければ入れ替える\n        [ps, pe] = [pe, ps];\n        [disStart, disEnd] = [disEnd, disStart];\n    }\n\n    // 分布荷重の開始点を梁要素上の座標に取り直す\n    const ti = bi.clone().add(beamDirection.clone().multiplyScalar(disStart));\n    // ドラッグ方向\n    const dir = pe.clone().subtract(ti).normalize();\n    // 梁要素とドラッグ方向が成す角度\n    const angle = beamDirection.angle() - dir.angle();\n    // 開始点からドラッグ終了点までの長さ\n    const dragLength = ti.distance(pe);\n    // 角度と長さから分布荷重の終了点を計算する\n    const r = dragLength * Math.cos(angle);\n    const tj = ti.clone().add(beamDirection.clone().multiplyScalar(r));\n    // j端から分布荷重の終了点までの距離を取り直す\n    disEnd = bj.distance(tj);\n\n    // i端から開始点までの比率\n    const distanceI = round(disStart / beamLength, 3);\n    const distanceJ = round(disEnd / beamLength, 3);\n\n    const trapezoid: Trapezoid = {\n        id: uuid(),\n        name: 'Trapezoid_N', //仮に名前を設定\n        beam: beamId,\n        forceI: 10,\n        forceJ: 10,\n        distanceI,\n        distanceJ,\n        angle: 90,\n        isGlobal: false,\n    };\n\n    return trapezoid;\n};\n","/**\n * 単位: 力\n */\nexport const ForceUnitValues = ['N', 'kN'] as const;\n\n/**\n * 単位: 長さ\n */\nexport const LengthUnitValues = ['mm', 'cm', 'm'] as const;\n\nexport type ForceUnitType = typeof ForceUnitValues[number];\nexport type LengthUnitType = typeof LengthUnitValues[number];\n\n/**\n * 単位\n */\nexport interface Unit {\n    force: ForceUnitType;\n    length: LengthUnitType;\n}\n\nexport const NodePinTypes = ['free', 'pin', 'pinX', 'pinZ', 'fixX', 'fix'] as const;\nexport type NodePinType = typeof NodePinTypes[number];\n\nexport const isNodePinType = (item: unknown): item is NodePinType => {\n    if (typeof item === 'string') {\n        return NodePinTypes.some((type) => type === item);\n    }\n    return false;\n};\n\nexport interface Node {\n    id: string;\n    x: number;\n    y: number;\n    pin?: NodePinType;\n}\n\nexport const isNode = (item: unknown): item is Node => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.x === 'number' &&\n            typeof value.y === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Beam {\n    id: string;\n    name: string;\n    nodeI: string;\n    nodeJ: string;\n}\n\nexport const isBeam = (item: unknown): item is Beam => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.name === 'string' &&\n            typeof value.nodeI === 'string' &&\n            typeof value.nodeJ === 'string'\n        );\n    }\n    return false;\n};\n\nexport interface Force {\n    id: string;\n    name: string;\n    beam: string;\n    force: number;\n    // i端からの距離 (0 〜 1)\n    distanceI: number;\n}\nexport const isForce = (item: unknown): item is Force => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.name === 'string' &&\n            typeof value.beam === 'string' &&\n            typeof value.force === 'number' &&\n            typeof value.distanceI === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Trapezoid {\n    id: string;\n    name: string;\n    beam: string;\n    // kN/m\n    forceI: number;\n    // kN/m\n    forceJ: number;\n    // i端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceI: number;\n    // j端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceJ: number;\n    // 角度、デフォルト 90度、-179 〜 180 度の間で指定 (-180 = 180)\n    angle?: number;\n    // 全体座標系に垂直か、部材に垂直か デフォルト false\n    isGlobal?: boolean;\n}\n\nexport const isTrapezoid = (item: unknown): item is Trapezoid => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.name === 'string' &&\n            typeof value.beam === 'string' &&\n            typeof value.forceI === 'number' &&\n            typeof value.distanceI === 'number' &&\n            typeof value.forceJ === 'number' &&\n            typeof value.distanceJ === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Structure {\n    unit: Unit;\n    nodes: Node[];\n    beams: Beam[];\n    forces: Force[];\n    trapezoids: Trapezoid[];\n}\n\nexport type StructureFieldType = keyof Omit<Structure, 'unit'>;\n\nexport const defaultUnit: Unit = {\n    force: 'kN',\n    length: 'm',\n};\n\nexport const emptyStructure: Structure = {\n    unit: defaultUnit,\n    nodes: [],\n    beams: [],\n    forces: [],\n    trapezoids: [],\n};\n","import { LineCap, LineJoin } from 'konva/lib/Shape';\nimport { DOMSize } from './common';\nimport { emptyStructure, Structure } from './shape';\n\nconst NoteModes = ['select', 'edit'] as const;\nexport type NoteMode = typeof NoteModes[number];\nexport const isNoteMode = (item: unknown): item is NoteMode => {\n    if (typeof item === 'string') {\n        return NoteModes.some((mode) => mode === item);\n    }\n    return false;\n};\n\nexport const PageSizeTypes = ['A4', 'A3', 'B5', 'B4'] as const;\nexport type PageSizeType = typeof PageSizeTypes[number];\n\nexport const PageSize: Record<PageSizeType, DOMSize> = {\n    A3: {\n        width: 0,\n        height: 0,\n    },\n    A4: {\n        width: 2970,\n        height: 2100,\n    },\n    B4: {\n        width: 0,\n        height: 0,\n    },\n    B5: {\n        width: 0,\n        height: 0,\n    },\n};\n\nexport interface StructureCanvasProps {\n    data: Structure;\n    image?: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport const MinCanvasSize: DOMSize = {\n    width: 160,\n    height: 90,\n};\n\nexport interface DrawingProps {\n    stroke: string;\n    strokeWidth: number;\n    eraser?: boolean;\n    points: number[];\n    lineJoin?: LineJoin;\n    lineCap?: LineCap;\n}\nexport type DrawSettings = Omit<DrawingProps, 'points'>;\nexport const defaultDrawSettings: DrawSettings = {\n    stroke: '#000000',\n    strokeWidth: 4,\n    eraser: false,\n    lineJoin: 'round',\n    lineCap: 'round',\n};\n\nexport interface PageProps {\n    size: PageSizeType;\n    drawings: DrawingProps[];\n    structures: StructureCanvasProps[];\n}\n\nexport const defaultPageProps: PageProps = {\n    size: 'A4',\n    drawings: [],\n    structures: [\n        {\n            data: emptyStructure,\n            x: 100,\n            y: 100,\n            ...MinCanvasSize,\n        },\n    ],\n};\n","import {\n    createContext,\n    Dispatch,\n    RefObject,\n    SetStateAction,\n    useCallback,\n    useRef,\n    useState,\n} from 'react';\nimport { CanvasHandler } from '../components/Canvas';\nimport { clone } from '../components/Canvas/util';\nimport { AppMode, ShapeBaseProps } from '../types/common';\nimport { defaultPageProps, PageProps } from '../types/note';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface IAppSettingsContext {\n    mode: AppMode;\n    onChangeMode: Dispatch<SetStateAction<AppMode>>;\n    page: PageProps;\n    onChange: Dispatch<SetStateAction<PageProps>>;\n    selectedCanvasIndex?: number;\n    onSelectCanvas: Dispatch<SetStateAction<number | undefined>>;\n    canvasProps?: ShapeBaseProps;\n    editCanvas: (props: ShapeBaseProps) => void;\n    closeCanvas: VoidFunction;\n    canvasRef: RefObject<CanvasHandler>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const AppSettingsContext = createContext<IAppSettingsContext>(undefined!);\n\nconst AppSettingsProvider: React.VFC<Props> = ({ children }) => {\n    const [mode, setMode] = useState<AppMode>('note');\n    const [page, setPage] = useState<PageProps>(defaultPageProps);\n    const [selectedCanvasIndex, setCanvasIndex] = useState<number>();\n    const [canvasProps, setCanvasProps] = useState<ShapeBaseProps>();\n    const canvasRef = useRef<CanvasHandler>(null);\n\n    const editCanvas = useCallback((props: ShapeBaseProps) => {\n        setMode('canvas');\n        setCanvasProps(props);\n    }, []);\n\n    const closeCanvas = useCallback(() => {\n        if (canvasRef.current) {\n            // 更新した構造データを取得する\n            const structure = canvasRef.current.getStructure();\n            const image = canvasRef.current.toDataURL();\n\n            // 選択中のキャンバスのデータを更新\n            if (typeof selectedCanvasIndex === 'number') {\n                setPage((state) => {\n                    const data = clone(state);\n                    data.structures[selectedCanvasIndex].data = structure;\n                    data.structures[selectedCanvasIndex].image = image;\n                    return data;\n                });\n            }\n        }\n\n        // 状態をリセット\n        setMode('note');\n        setCanvasProps(undefined);\n    }, [selectedCanvasIndex]);\n\n    return (\n        <AppSettingsContext.Provider\n            value={{\n                mode,\n                onChangeMode: setMode,\n                page,\n                onChange: setPage,\n                selectedCanvasIndex,\n                onSelectCanvas: setCanvasIndex,\n                canvasProps,\n                editCanvas,\n                closeCanvas,\n                canvasRef,\n            }}\n        >\n            {children}\n        </AppSettingsContext.Provider>\n    );\n};\n\nexport default AppSettingsProvider;\n","import { createContext, useState } from 'react';\nimport { CanvasTool } from '../types/common';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface IConfigurationContext {\n    tool: CanvasTool;\n    setTool: (tool: CanvasTool) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const ConfigurationContext = createContext<IConfigurationContext>(undefined!);\n\nconst ConfigurationProvider: React.VFC<Props> = ({ children }) => {\n    const [tool, setTool] = useState<CanvasTool>('select');\n\n    return (\n        <ConfigurationContext.Provider value={{ tool, setTool }}>\n            {children}\n        </ConfigurationContext.Provider>\n    );\n};\n\nexport default ConfigurationProvider;\n","import { createContext, Dispatch, SetStateAction, useState } from 'react';\nimport { defaultDrawSettings, DrawSettings, NoteMode } from '../types/note';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface INoteSettingsContext {\n    mode: NoteMode;\n    settings: DrawSettings;\n    onChangeMode: Dispatch<SetStateAction<NoteMode>>;\n    onChangeDrawSettings: Dispatch<SetStateAction<DrawSettings>>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const NoteSettingsContext = createContext<INoteSettingsContext>(undefined!);\n\nconst NoteSettingsProvider: React.VFC<Props> = ({ children }) => {\n    const [mode, setMode] = useState<NoteMode>('select');\n    const [settings, setSettings] = useState<DrawSettings>(defaultDrawSettings);\n\n    return (\n        <NoteSettingsContext.Provider\n            value={{ mode, settings, onChangeMode: setMode, onChangeDrawSettings: setSettings }}\n        >\n            {children}\n        </NoteSettingsContext.Provider>\n    );\n};\n\nexport default NoteSettingsProvider;\n","import { Typography } from '@mui/material';\n\nconst hash = process.env.REACT_APP_GIT_COMMIT_HASH?.substring(0, 7) ?? '';\nconst date = process.env.REACT_APP_GIT_COMMIT_DATE ?? '';\nconst version = process.env.REACT_APP_PACKAGE_VERSION ?? '';\n\nconst Version: React.VFC = () => {\n    return (\n        <Typography\n            variant=\"caption\"\n            sx={{ ml: 2 }}\n        >{`ver ${version} (${hash}: ${date})`}</Typography>\n    );\n};\n\nexport default Version;\n","import { AppBar, Toolbar, Typography } from '@mui/material';\nimport Version from './Version';\n\nconst Header: React.VFC = () => {\n    return (\n        <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\">\n                    Drawing Sample\n                </Typography>\n                <Version />\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Header;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react';\n\n// https://github.com/pmndrs/drei/blob/master/src/core/useContextBridge.tsx\nexport const useContextBridge = (...contexts: Array<React.Context<any>>) => {\n    const cRef = React.useRef<Array<React.Context<any>>>([]);\n    cRef.current = contexts.map((context) => React.useContext(context));\n\n    return React.useMemo(\n        () =>\n            ({ children }: { children: React.ReactNode }): JSX.Element =>\n                contexts.reduceRight(\n                    (acc, Context, i) => (\n                        <Context.Provider value={cRef.current[i]} children={acc} />\n                    ),\n                    children\n                ) as unknown as JSX.Element,\n        [contexts]\n    );\n};\n","import { createContext, useCallback, useEffect, useMemo, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { CanvasTool, DOMSize } from '../../../types/common';\nimport {\n    Beam,\n    Force,\n    isBeam,\n    isForce,\n    isNode,\n    isTrapezoid,\n    Node,\n    Structure,\n    Trapezoid,\n} from '../../../types/shape';\nimport { Shape } from '../types';\nimport { clone } from '../util';\n\ninterface Props {\n    children: React.ReactNode;\n    size: DOMSize;\n    structure: Structure;\n    gridSize?: number;\n    snapSize?: number;\n    tool?: CanvasTool;\n    readonly?: boolean;\n}\n\ninterface ICanvasContext {\n    size: DOMSize;\n    gridSize: number;\n    snapSize: number;\n    tool: CanvasTool;\n    readonly: boolean;\n    nodes: Node[];\n    nodeMap: Record<string, Node>;\n    beams: Beam[];\n    beamMap: Record<string, Beam>;\n    forces: Force[];\n    trapezoids: Trapezoid[];\n    forceAverage: number;\n    onChangeNode: (value: Node) => void;\n    onCreateNode: (value: Partial<Node> | Partial<Node>[]) => void;\n    onDeleteNode: (id: string) => void;\n    onChangeBeam: (value: Beam) => void;\n    onCreateBeam: (value: Partial<Beam>) => void;\n    onDeleteBeam: (id: string) => void;\n    onChangeForce: (value: Force) => void;\n    onCreateForce: (value: Partial<Force>) => void;\n    onDeleteForce: (id: string) => void;\n    onChangeTrapezoid: (value: Trapezoid) => void;\n    onCreateTrapezoid: (value: Partial<Trapezoid>) => void;\n    onDeleteTrapezoid: (id: string) => void;\n    selected: Shape[];\n    isSelected: (item: Shape) => boolean;\n    select: (item: Shape) => void;\n    toggleSelect: (item: Shape) => void;\n    clearSelection: VoidFunction;\n    getStructure: () => Structure;\n}\n\n// Context | React TypeScript Cheatsheets\n// https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/context/\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const CanvasContext = createContext<ICanvasContext>(undefined!);\n\nconst CanvasProvider: React.VFC<Props> = ({\n    children,\n    structure: source,\n    size,\n    gridSize = 25,\n    snapSize = 25,\n    tool = 'select',\n    readonly = false,\n}) => {\n    const [nodes, setNodes] = useState<Node[]>([]);\n    const [beams, setBeams] = useState<Beam[]>([]);\n    const [forces, setForces] = useState<Force[]>([]);\n    const [forceAverage, setForceAve] = useState<number>(0);\n    const [trapezoids, setTrapezoids] = useState<Trapezoid[]>([]);\n    // 選択要素\n    const [selected, setSelected] = useState<Shape[]>([]);\n\n    // props に渡された構造データから nodes, beams, forces, trapezoids を\n    // 抜き出し、表示用に整形する\n    useEffect(() => {\n        const { nodes: n, beams: b, forces: f, trapezoids: t } = source;\n        setNodes(n);\n        setBeams(b);\n        setForces(f);\n        setTrapezoids(t);\n    }, [source]);\n\n    // 構造データを再生成する\n    const getStructure = useCallback(() => {\n        return {\n            unit: source.unit,\n            nodes,\n            beams,\n            forces,\n            trapezoids,\n        };\n    }, [beams, forces, nodes, source.unit, trapezoids]);\n\n    // 集中荷重の平均値を取得する\n    useEffect(() => {\n        // forces\n        let ave = 0;\n        if (forces.length > 0) {\n            const { force: total } = forces.reduce((prev, current) => {\n                const item: Force = {\n                    ...prev,\n                    force: prev.force + current.force,\n                };\n                return item;\n            });\n            ave = total / forces.length;\n        }\n        setForceAve(ave);\n    }, [forces]);\n\n    const nodeMap = useMemo(() => {\n        const map: Record<string, Node> = {};\n        nodes.forEach((node) => {\n            map[node.id] = node;\n        });\n        return map;\n    }, [nodes]);\n\n    const beamMap = useMemo(() => {\n        const map: Record<string, Beam> = {};\n        beams.forEach((beam) => {\n            map[beam.id] = beam;\n        });\n        return map;\n    }, [beams]);\n\n    const onChangeNode = useCallback(\n        (value: Node) => {\n            if (readonly) {\n                return;\n            }\n\n            setNodes((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === value.id);\n                if (index >= 0) {\n                    const item = items[index];\n                    items[index] = {\n                        ...item,\n                        ...value,\n                    };\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onCreateNode = useCallback(\n        (value: Partial<Node> | Partial<Node>[]) => {\n            if (readonly) {\n                return;\n            }\n\n            const arr: Partial<Node>[] = [];\n\n            if (Array.isArray(value)) {\n                arr.push(...value);\n            } else {\n                arr.push(value);\n            }\n\n            const newNodes: Node[] = [];\n            arr.forEach((item) => {\n                if (typeof item.id === 'undefined') {\n                    item.id = uuid();\n                }\n                if (isNode(item)) {\n                    newNodes.push(item);\n                }\n            });\n\n            setNodes((items) => [...items, ...newNodes]);\n        },\n        [readonly]\n    );\n\n    const onDeleteNode = useCallback(\n        (id: string) => {\n            if (readonly) {\n                return;\n            }\n\n            // 削除対象 node に紐づく beam を削除する\n            setBeams((state) => {\n                const items = clone(state);\n                let index = items.findIndex(({ nodeI, nodeJ }) => nodeI === id || nodeJ === id);\n                while (index >= 0) {\n                    items.splice(index, 1);\n                    index = items.findIndex(({ nodeI, nodeJ }) => nodeI === id || nodeJ === id);\n                }\n                return items;\n            });\n\n            setNodes((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === id);\n                if (index >= 0) {\n                    items.splice(index, 1);\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onChangeBeam = useCallback(\n        (value: Beam) => {\n            if (readonly) {\n                return;\n            }\n\n            setBeams((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === value.id);\n                if (index >= 0) {\n                    const item = items[index];\n                    items[index] = {\n                        ...item,\n                        ...value,\n                    };\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onCreateBeam = useCallback(\n        (value: Partial<Beam>) => {\n            if (readonly) {\n                return;\n            }\n\n            const item: Partial<Beam> = { ...value };\n\n            if (typeof item.id === 'undefined') {\n                item.id = uuid();\n            }\n            if (isBeam(item)) {\n                setBeams((items) => [...items, item]);\n            }\n        },\n        [readonly]\n    );\n\n    const onDeleteBeam = useCallback(\n        (id: string) => {\n            if (readonly) {\n                return;\n            }\n\n            // 該当 beam に紐づく Node を削除する\n            const beam = beams.find((item) => item.id === id);\n            if (beam) {\n                // 削除対象 beam に紐づく Node\n                const { nodeI, nodeJ } = beam;\n                // 使用 node の Set\n                const ns = new Set<string>();\n                beams.forEach(({ id: beamId, nodeI: i, nodeJ: j }) => {\n                    if (beamId !== id) {\n                        ns.add(i);\n                        ns.add(j);\n                    }\n                });\n\n                setNodes((state) => {\n                    const items = clone(state);\n                    [nodeI, nodeJ].forEach((node) => {\n                        if (!ns.has(node)) {\n                            // 使用されていない node なので削除\n                            const index = items.findIndex((item) => item.id === node);\n                            if (index >= 0) {\n                                items.splice(index, 1);\n                            }\n                        }\n                    });\n                    return items;\n                });\n            }\n\n            // 該当 beam に紐づく Force, Trapezoids を削除する\n            setForces((state) => {\n                const items = clone(state);\n                let index = items.findIndex((item) => item.beam === id);\n                while (index >= 0) {\n                    items.splice(index, 1);\n                    index = items.findIndex((item) => item.beam === id);\n                }\n                return items;\n            });\n            setTrapezoids((state) => {\n                const items = clone(state);\n                let index = items.findIndex((item) => item.beam === id);\n                while (index >= 0) {\n                    items.splice(index, 1);\n                    index = items.findIndex((item) => item.beam === id);\n                }\n                return items;\n            });\n\n            // beam を削除\n            setBeams((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === id);\n                if (index >= 0) {\n                    items.splice(index, 1);\n                }\n                return items;\n            });\n        },\n        [beams, readonly]\n    );\n\n    const onChangeForce = useCallback(\n        (value: Force) => {\n            if (readonly) {\n                return;\n            }\n\n            setForces((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === value.id);\n                if (index >= 0) {\n                    const item = items[index];\n                    items[index] = {\n                        ...item,\n                        ...value,\n                    };\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onCreateForce = useCallback(\n        (value: Partial<Force>) => {\n            if (readonly) {\n                return;\n            }\n\n            const item: Partial<Force> = {\n                ...value,\n            };\n\n            if (typeof item.id === 'undefined') {\n                item.id = uuid();\n            }\n            if (isForce(item)) {\n                setForces((items) => [...items, item]);\n            }\n        },\n        [readonly]\n    );\n\n    const onDeleteForce = useCallback(\n        (id: string) => {\n            if (readonly) {\n                return;\n            }\n\n            setForces((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === id);\n                if (index >= 0) {\n                    items.splice(index, 1);\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onChangeTrapezoid = useCallback(\n        (value: Trapezoid) => {\n            if (readonly) {\n                return;\n            }\n\n            setTrapezoids((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === value.id);\n                if (index >= 0) {\n                    const item = items[index];\n                    items[index] = {\n                        ...item,\n                        ...value,\n                    };\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const onCreateTrapezoid = useCallback(\n        (value: Partial<Trapezoid>) => {\n            if (readonly) {\n                return;\n            }\n\n            const item: Partial<Trapezoid> = {\n                ...value,\n            };\n            if (typeof item.id === 'undefined') {\n                item.id = uuid();\n            }\n            if (isTrapezoid(item)) {\n                setTrapezoids((items) => [...items, item]);\n            }\n        },\n        [readonly]\n    );\n\n    const onDeleteTrapezoid = useCallback(\n        (id: string) => {\n            if (readonly) {\n                return;\n            }\n\n            setTrapezoids((state) => {\n                const items = clone(state);\n                const index = items.findIndex((item) => item.id === id);\n                if (index >= 0) {\n                    items.splice(index, 1);\n                }\n                return items;\n            });\n        },\n        [readonly]\n    );\n\n    const isSelected = useCallback(\n        (item: Shape) => {\n            return selected.some(({ type, id }) => type === item.type && id === item.id);\n        },\n        [selected]\n    );\n\n    const select = useCallback(\n        (item: Shape) => {\n            if (!isSelected(item)) {\n                setSelected((state) => [...state, item]);\n            }\n        },\n        [isSelected, setSelected]\n    );\n\n    const toggleSelect = useCallback(\n        (item: Shape) => {\n            if (isSelected(item)) {\n                // 削除\n                setSelected((state) =>\n                    state.filter(({ type, id }) => !(type === item.type && id === item.id))\n                );\n            } else {\n                // 追加\n                setSelected((state) => [...state, item]);\n            }\n        },\n        [isSelected, setSelected]\n    );\n\n    const clearSelection = useCallback(() => {\n        setSelected([]);\n    }, []);\n\n    return (\n        <CanvasContext.Provider\n            value={{\n                size,\n                gridSize,\n                snapSize,\n                tool,\n                readonly,\n                nodes,\n                beams,\n                forces,\n                trapezoids,\n                nodeMap,\n                beamMap,\n                forceAverage,\n                onChangeNode,\n                onCreateNode,\n                onDeleteNode,\n                onChangeBeam,\n                onCreateBeam,\n                onDeleteBeam,\n                onChangeForce,\n                onCreateForce,\n                onDeleteForce,\n                onChangeTrapezoid,\n                onCreateTrapezoid,\n                onDeleteTrapezoid,\n                selected,\n                isSelected,\n                select,\n                toggleSelect,\n                clearSelection,\n                getStructure,\n            }}\n        >\n            {children}\n        </CanvasContext.Provider>\n    );\n};\n\nexport default CanvasProvider;\n","// --- app 共通 ---\nexport interface DOMSize {\n    width: number;\n    height: number;\n}\n\nexport interface ShapePosition {\n    x: number;\n    y: number;\n}\n\nexport type ShapeBaseProps = DOMSize & ShapePosition;\n\nexport const AppModes = ['note', 'canvas'] as const;\nexport type AppMode = typeof AppModes[number];\n\n// --- canvas関係 ---\n\nexport const CanvasTools = ['select', 'pen', 'force', 'trapezoid', 'delete'] as const;\nexport type CanvasTool = typeof CanvasTools[number];\nexport const isCanvasTool = (item: unknown): item is CanvasTool => {\n    if (typeof item === 'string') {\n        return CanvasTools.some((tool) => tool === item);\n    }\n    return false;\n};\n\nexport const isNumberArray = (item: unknown): item is number[] => {\n    if (Array.isArray(item)) {\n        if (item.length === 0) {\n            return true;\n        }\n\n        return item.every((value) => typeof value === 'number');\n    }\n    return false;\n};\n\nexport const isLinePoints = (item: unknown): item is [number, number, number, number] => {\n    if (isNumberArray(item)) {\n        return item.length === 4;\n    }\n    return false;\n};\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport {\n    createContext,\n    ReactNode,\n    useCallback,\n    useContext,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { isNumberArray } from '../../../types/common';\nimport { Beam, Node } from '../../../types/shape';\nimport { createNode, createTrapezoid, DEFAULT_SNAP_SIZE, snap } from '../util';\nimport { CanvasContext } from './CanvasProvider';\n\ninterface IDrawContext {\n    points: number[];\n    onPointerDown: (event: KonvaEventObject<Event>) => void;\n    onPointerMove: (event: KonvaEventObject<Event>) => void;\n    onPointerUp: (event: KonvaEventObject<Event>) => void;\n}\n\ninterface Props {\n    children: ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const DrawContext = createContext<IDrawContext>(undefined!);\n\ntype BeamAttrs = {\n    id: string;\n    points: number[];\n};\n\nconst DrawProvider: React.VFC<Props> = ({ children }) => {\n    const {\n        tool,\n        readonly = false,\n        nodes,\n        beams,\n        trapezoids,\n        onCreateNode,\n        onCreateBeam,\n        onCreateTrapezoid,\n    } = useContext(CanvasContext);\n    // 描画する点\n    const [points, setPoints] = useState<number[]>([]);\n\n    const isDrawing = useRef<boolean>();\n    const beamRef = useRef<BeamAttrs>();\n\n    const disabled = useMemo(() => {\n        if (!readonly) {\n            return !(tool === 'pen' || tool === 'trapezoid');\n        }\n        return true;\n    }, [readonly, tool]);\n\n    const handlePointerDown = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n\n            if (tool === 'trapezoid') {\n                // 梁要素の選択でなければ無視する\n                if (event.target.attrs['type'] !== 'beam') {\n                    return;\n                }\n                const beamId = event.target.attrs['id'];\n                const beamPoints = event.target.attrs['points'];\n                if (isNumberArray(beamPoints) && typeof beamId === 'string') {\n                    beamRef.current = {\n                        id: beamId,\n                        points: beamPoints,\n                    };\n                }\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                isDrawing.current = true;\n                setPoints([point.x, point.y]);\n            }\n        },\n        [disabled, tool]\n    );\n\n    const handlePointerMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                setPoints((state) => [...state, point.x, point.y]);\n            }\n        },\n        [disabled]\n    );\n\n    const makeBeam = useCallback(\n        (start: number[], end: number[]) => {\n            // スナップさせる\n            let edgeI = snap([start[0], start[1]], DEFAULT_SNAP_SIZE);\n            let edgeJ = snap([end[0], end[1]], DEFAULT_SNAP_SIZE);\n\n            if (edgeI[0] === edgeJ[0] && edgeI[1] === edgeJ[1]) {\n                // 始点と終点が同一座標になる場合は beam を作成しない\n                return;\n            }\n\n            const newNodes: Node[] = [];\n            const newBeam: Partial<Beam> = {\n                name: `Beam_${beams.length + 1}`,\n            };\n\n            if (edgeI[0] > edgeJ[0]) {\n                // 右 -> 左 に移動した場合は始点と終点を入れ替え\n                [edgeI, edgeJ] = [edgeJ, edgeI];\n            } else if (edgeI[0] === edgeJ[0] && edgeI[1] > edgeJ[1]) {\n                // 下 -> 上 に移動した場合は始点と終点を入れ替え\n                [edgeI, edgeJ] = [edgeJ, edgeI];\n            }\n\n            const nodeI = createNode(...edgeI);\n            // 同一座標の節点が存在するか？\n            const n1 = nodes.find((node) => node.x === nodeI.x && node.y === nodeI.y);\n            if (n1) {\n                // 既存の節点を使用する\n                newBeam.nodeI = n1.id;\n            } else {\n                // 新規追加\n                newNodes.push(nodeI);\n                newBeam.nodeI = nodeI.id;\n            }\n\n            const nodeJ = createNode(...edgeJ);\n            const n2 = nodes.find((node) => node.x === nodeJ.x && node.y === nodeJ.y);\n            if (n2) {\n                // 既存の節点を使用する\n                newBeam.nodeJ = n2.id;\n            } else {\n                // 新規追加\n                newNodes.push(nodeJ);\n                newBeam.nodeJ = nodeJ.id;\n            }\n\n            // 追加\n            onCreateNode(newNodes);\n            onCreateBeam(newBeam);\n        },\n        [beams.length, nodes, onCreateBeam, onCreateNode]\n    );\n\n    const makeTrapezoid = useCallback(\n        (start: number[], end: number[], attrs: BeamAttrs) => {\n            // 分布荷重の登録\n            const trapezoid = createTrapezoid(start, end, attrs.id, attrs.points);\n            const name = `Trapezoid_${trapezoids.length + 1}`;\n            trapezoid.name = name;\n            onCreateTrapezoid(trapezoid);\n        },\n        [onCreateTrapezoid, trapezoids.length]\n    );\n\n    const handlePointerUp = useCallback(\n        (_: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n\n            if (isDrawing.current) {\n                isDrawing.current = false;\n\n                if (points.length >= 4) {\n                    // 開始点\n                    const start = points.slice(0, 2);\n                    // 終了点\n                    const end = points.slice(-2);\n\n                    if (tool === 'pen') {\n                        // 梁要素の生成\n                        makeBeam(start, end);\n                    } else if (tool === 'trapezoid' && beamRef.current) {\n                        // 分布荷重の生成\n                        makeTrapezoid(start, end, beamRef.current);\n                    }\n\n                    setPoints([]);\n                    beamRef.current = undefined;\n                }\n            }\n        },\n        [disabled, makeBeam, makeTrapezoid, points, setPoints, tool]\n    );\n\n    return (\n        <DrawContext.Provider\n            value={{\n                points,\n                onPointerDown: handlePointerDown,\n                onPointerMove: handlePointerMove,\n                onPointerUp: handlePointerUp,\n            }}\n        >\n            {children}\n        </DrawContext.Provider>\n    );\n};\n\nexport default DrawProvider;\n","import { useContext, useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { CanvasContext } from '../provider/CanvasProvider';\nimport { DrawContext } from '../provider/DrawProvider';\n\nconst DrawLayer: React.VFC = () => {\n    const { tool } = useContext(CanvasContext);\n    const { points } = useContext(DrawContext);\n\n    const color = useMemo(() => {\n        switch (tool) {\n            case 'pen':\n                return 'blue';\n            case 'trapezoid':\n                return 'red';\n            default:\n                return 'black';\n        }\n    }, [tool]);\n\n    return (\n        <Layer>\n            <Line points={points} strokeWidth={3} stroke={color} />\n        </Layer>\n    );\n};\n\nexport default DrawLayer;\n","import { useContext, useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { CanvasContext } from '../provider/CanvasProvider';\n\ninterface LineProps {\n    id: string;\n    points: number[];\n    stroke: string;\n    strokeWidth: number;\n    dash: [number, number];\n    listening: boolean;\n}\n\nconst defaultLineProps: LineProps = {\n    id: '',\n    points: [],\n    stroke: '#c9e1ff',\n    strokeWidth: 1,\n    dash: [5, 3],\n    listening: false,\n};\n\nconst GridLayer: React.VFC = () => {\n    // キャンバスサイズ, グリッドの幅\n    const { size, gridSize } = useContext(CanvasContext);\n\n    const horizontalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let y = 0; y <= size.height; y += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Horizontal_${count}`,\n                points: [0, y, size.width, y],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    const verticalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let x = 0; x <= size.width; x += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Vertical_${count}`,\n                points: [x, 0, x, size.height],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    return (\n        <Layer listening={false}>\n            {/* horizontal */}\n            {horizontalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n            {/* vertical */}\n            {verticalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GridLayer;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { forwardRef, useEffect, useRef, useState } from 'react';\nimport { Line, Text } from 'react-konva';\nimport { Guide } from '.';\nimport { BeamProps, Point } from '../types';\nimport { Vector, verticalNormalizeVector } from '../util';\n\ninterface Props extends BeamProps {\n    selected?: boolean;\n    onClick: (event: KonvaEventObject<Event>) => void;\n}\n\nconst Beam: React.ForwardRefRenderFunction<Konva.Line, Props> = (\n    { id, name, nodeI, nodeJ, points, selected = false, onClick },\n    ref\n) => {\n    const [labelPosition, setLabelPosition] = useState<Point>([0, 0]);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const [labelAngle, setLabelAngle] = useState(0);\n    const [guidePoints, setGuidePoints] = useState<[Point, Point]>([\n        [0, 0],\n        [0, 0],\n    ]);\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    useEffect(() => {\n        if (selected) {\n            const [nodeI_x, nodeI_y, nodeJ_x, nodeJ_y] = points;\n            viRef.current.x = nodeI_x;\n            viRef.current.y = nodeI_y;\n            vjRef.current.x = nodeJ_x;\n            vjRef.current.y = nodeJ_y;\n\n            // 必ず左から右になるようにする\n            let vi = viRef.current;\n            let vj = vjRef.current;\n            if (vi.x > vj.x) {\n                [vi, vj] = [vj, vi];\n            }\n\n            // 梁要素の長さ\n            const distance = vi.distance(vj);\n            // 梁要素に対して垂直なベクトル\n            const dir = verticalNormalizeVector(vi, vj);\n            // ラベル位置\n            const label = vi.clone().add(dir.clone().multiplyScalar(16));\n            // ラベル方向\n            const angle = vj.clone().subtract(vi).angleDeg();\n            // 寸法線位置\n            const guideDir = dir.clone().multiplyScalar(75);\n            const guideI = vi.clone().add(guideDir);\n            const guideJ = vj.clone().add(guideDir);\n\n            setLabelWidth(distance);\n            setLabelPosition([label.x, label.y]);\n            setLabelAngle(angle);\n            setGuidePoints([\n                [guideI.x, guideI.y],\n                [guideJ.x, guideJ.y],\n            ]);\n        }\n    }, [points, selected]);\n\n    return (\n        <>\n            <Line\n                ref={ref}\n                type=\"beam\"\n                id={id}\n                name={name}\n                nodeI={nodeI}\n                nodeJ={nodeJ}\n                points={points}\n                stroke={selected ? 'blue' : 'black'}\n                strokeWidth={4}\n                onClick={onClick}\n                onTap={onClick}\n            />\n            {selected && (\n                <>\n                    {/* ラベル */}\n                    <Text\n                        x={labelPosition[0]}\n                        y={labelPosition[1]}\n                        rotation={labelAngle}\n                        text={name}\n                        fontSize={12}\n                        width={labelWidth}\n                        fill=\"blue\"\n                        align=\"center\"\n                        wrap=\"none\"\n                        ellipsis\n                        listening={false}\n                    />\n                    {/* 寸法線 */}\n                    <Guide start={guidePoints[0]} end={guidePoints[1]} />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default forwardRef(Beam);\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { Arrow, Group, Text } from 'react-konva';\nimport { ForceProps, Point } from '../types';\nimport { lerp, Vector, verticalNormalizeVector, vX } from '../util';\n\ninterface Props extends ForceProps {\n    ratio: number;\n    visible?: boolean;\n    selected?: boolean;\n    onClick: (event: KonvaEventObject<Event>) => void;\n    onDblClick: (event: KonvaEventObject<Event>) => void;\n}\n\nconst BaseLength = 30;\n\nconst Force: React.VFC<Props> = ({\n    points: beamPoints,\n    id,\n    distanceI,\n    force,\n    ratio,\n    visible = false,\n    selected = false,\n    onClick,\n    onDblClick,\n}) => {\n    const [points, setPoints] = useState<number[]>([]);\n    const [distance, setDistance] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    const [labelPosition, setLabelPosition] = useState<Point>([0, 0]);\n\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    useEffect(() => {\n        const [nodeIx, nodeIy, nodeJx, nodeJy] = beamPoints;\n\n        // i端、j端\n        viRef.current.x = nodeIx;\n        viRef.current.y = nodeIy;\n        vjRef.current.x = nodeJx;\n        vjRef.current.y = nodeJy;\n\n        // 矢印の先端\n        const tail = lerp(viRef.current, vjRef.current, distanceI);\n        // 梁に直交する単位ベクトル\n        const vertical = verticalNormalizeVector(viRef.current, vjRef.current);\n        // 矢印の開始点\n        const arrowLength = isNaN(ratio) ? BaseLength : BaseLength * ratio;\n        const head = tail.clone().add(vertical.multiplyScalar(arrowLength));\n\n        setPoints([head.x, head.y, tail.x, tail.y]);\n\n        // ラベル描画用\n        setDistance(Math.max(arrowLength, 140));\n        const angle = vertical.clone().angleDeg();\n        setRotation(angle);\n        const dir = viRef.current.clone().subtract(vjRef.current).normalize();\n        if (vX.dot(dir) < 0) {\n            dir.invert();\n        }\n        const p = tail.clone().add(dir.multiplyScalar(6));\n        setLabelPosition([p.x, p.y]);\n    }, [beamPoints, distanceI, ratio]);\n\n    const color = useMemo(() => {\n        return selected ? 'red' : 'orange';\n    }, [selected]);\n\n    return (\n        <Group\n            type=\"force\"\n            id={id}\n            visible={visible}\n            onClick={onClick}\n            onTap={onClick}\n            onDblClick={onDblClick}\n            onDblTap={onDblClick}\n        >\n            <Arrow\n                points={points}\n                pointerLength={6}\n                pointerWidth={6}\n                fill={color}\n                stroke={color}\n                strokeWidth={2}\n            />\n            {selected && (\n                <Text\n                    x={labelPosition[0]}\n                    y={labelPosition[1]}\n                    offsetX={-6}\n                    text={`${force}kN`}\n                    fontSize={12}\n                    width={distance}\n                    rotation={rotation}\n                    fill={color}\n                    wrap=\"none\"\n                    ellipsis\n                />\n            )}\n        </Group>\n    );\n};\n\nexport default Force;\n","import { useEffect, useRef, useState } from 'react';\nimport { Arrow, Group, Line, Text } from 'react-konva';\nimport { Point } from '../types';\nimport { Vector } from '../util';\n\ninterface Props {\n    start: Point;\n    end: Point;\n}\n\ninterface GuideProps {\n    fill: string;\n    stroke: string;\n    strokeWidth: number;\n    listening: boolean;\n}\n\ninterface GuideArrowProps extends GuideProps {\n    pointerLength: number;\n    pointerWidth: number;\n    pointerAtBeginning: boolean;\n}\n\nconst defaultGuideProps: GuideProps = {\n    fill: 'silver',\n    stroke: 'silver',\n    strokeWidth: 1,\n    listening: false,\n};\n\nconst defaultGuideArrowProps: GuideArrowProps = {\n    pointerLength: 6,\n    pointerWidth: 6,\n    pointerAtBeginning: true,\n    ...defaultGuideProps,\n};\n\nconst GuideLine: React.VFC<Props> = ({ start, end }) => {\n    const v1Ref = useRef<Vector>(new Vector(0, 0));\n    const v2Ref = useRef<Vector>(new Vector(0, 0));\n\n    const [distance, setDistance] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    const [basis, setBasis] = useState<Point>([0, 0]);\n\n    useEffect(() => {\n        v1Ref.current.x = start[0];\n        v1Ref.current.y = start[1];\n        v2Ref.current.x = end[0];\n        v2Ref.current.y = end[1];\n\n        const dist = v1Ref.current.distance(v2Ref.current);\n        const dir = v2Ref.current.clone().subtract(v1Ref.current).normalize();\n        const angle = dir.angleDeg();\n\n        setDistance(Math.round(dist));\n        setRotation(angle === 90 ? -90 : angle);\n        setBasis(angle === 90 ? end : start);\n    }, [end, start]);\n\n    return (\n        <Group x={basis[0]} y={basis[1]} rotation={rotation}>\n            {/* 左端 */}\n            <Line points={[0, 0, 0, 10]} {...defaultGuideProps} />\n            {/* 矢印部分 */}\n            <Arrow points={[0, 5, distance, 5]} {...defaultGuideArrowProps} />\n            {/* 右端 */}\n            <Line points={[distance, 0, distance, 10]} {...defaultGuideProps} />\n            {/* ラベル */}\n            <Text\n                x={0}\n                y={-8}\n                text={`${distance}px`}\n                fontSize={12}\n                fill=\"silver\"\n                width={distance}\n                align=\"center\"\n                listening={false}\n                wrap=\"none\"\n                ellipsis\n            />\n        </Group>\n    );\n};\n\nexport default GuideLine;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { forwardRef, useCallback, useMemo } from 'react';\nimport { Circle, Image } from 'react-konva';\nimport useImage from 'use-image';\nimport { Node as NodeProps, NodePinType } from '../../../types/shape';\n\ninterface Props extends NodeProps {\n    draggable?: boolean;\n    isDragging?: boolean;\n    onDblClick: (event: KonvaEventObject<Event>) => void;\n    onDragStart: (event: KonvaEventObject<Event>) => void;\n    onDragMove: (event: KonvaEventObject<Event>) => void;\n    onDragEnd: (event: KonvaEventObject<Event>) => void;\n}\n\nconst Pins: Record<NodePinType, string> = {\n    free: '/assets/images/pins/pin_1.svg', // とりあえずダミーで指定\n    pin: '/assets/images/pins/pin_1.svg',\n    pinX: '/assets/images/pins/pin_2.svg',\n    pinZ: '/assets/images/pins/pin_2.svg',\n    fixX: '/assets/images/pins/pin_3.svg',\n    fix: '/assets/images/pins/pin_4.svg',\n};\n\nconst Node: React.ForwardRefRenderFunction<Konva.Circle, Props> = (\n    {\n        id,\n        x,\n        y,\n        pin,\n        draggable = false,\n        isDragging = false,\n        onDblClick,\n        onDragStart,\n        onDragMove,\n        onDragEnd,\n    },\n    ref\n) => {\n    const imageUrl = useMemo(() => {\n        return `${process.env.PUBLIC_URL}${Pins[pin ?? 'free']}`;\n    }, [pin]);\n    const [image] = useImage(imageUrl);\n\n    const handleClick = useCallback((event: KonvaEventObject<Event>) => {\n        // ダブルクリック時にはクリックイベントも発生する\n        // 何もバインドしていないと Stage のクリックイベント（選択解除）が発生するので\n        // イベントの伝播を止めるだけのイベントハンドラを設定する\n        event.cancelBubble = true;\n    }, []);\n\n    return (\n        <>\n            <Circle\n                ref={ref}\n                type=\"node\"\n                id={id}\n                x={x}\n                y={y}\n                pin={pin}\n                fill={isDragging ? 'blue' : 'black'}\n                radius={4}\n                draggable={draggable}\n                onDragStart={onDragStart}\n                onDragMove={onDragMove}\n                onDragEnd={onDragEnd}\n                onClick={handleClick}\n                onTap={handleClick}\n                onDblClick={onDblClick}\n                onDblTap={onDblClick}\n                _useStrictMode\n            />\n            {!isDragging && pin && pin !== 'free' && (\n                <Image\n                    x={x}\n                    y={y}\n                    offsetX={12}\n                    offsetY={-4}\n                    rotation={pin === 'pinZ' ? -90 : 0}\n                    image={image}\n                    width={24}\n                    height={24}\n                    listening={false}\n                />\n            )}\n        </>\n    );\n};\n\nexport default forwardRef(Node);\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { Arrow, Group, Line, Text } from 'react-konva';\nimport { Point, TrapezoidProps } from '../types';\nimport { getInsidePoints, intercectPoint, Vector, vX } from '../util';\nimport Guide from './Guide';\n\ninterface Props extends TrapezoidProps {\n    visible?: boolean;\n    selected?: boolean;\n    onClick: (event: KonvaEventObject<Event>) => void;\n    onDblClick: (event: KonvaEventObject<Event>) => void;\n}\n\ntype LinePoints = [number, number, number, number];\n\ninterface LineProps {\n    stroke: string;\n    strokeWidth: number;\n}\n\ninterface ArrowProps extends LineProps {\n    pointerLength: number;\n    pointerWidth: number;\n    fill: string;\n}\n\nconst defaultLineProps: LineProps = {\n    stroke: 'pink',\n    strokeWidth: 2,\n};\n\nconst defaultArrowProps: ArrowProps = {\n    pointerLength: 6,\n    pointerWidth: 6,\n    fill: 'pink',\n    ...defaultLineProps,\n};\n\ninterface LabelProps {\n    offsetX: number;\n    offsetY: number;\n    fontSize: number;\n    wrap: string;\n    ellipsis: boolean;\n}\nconst defaultLabelProps: LabelProps = {\n    offsetX: -6,\n    offsetY: 14,\n    fontSize: 12,\n    wrap: 'none',\n    ellipsis: true,\n};\n\ninterface LabelAttrs {\n    x: number;\n    y: number;\n    text: string;\n    width: number;\n    rotation: number;\n}\n\nconst Trapezoid: React.VFC<Props> = ({\n    points: beamPoints,\n    id,\n    beam,\n    forceI,\n    forceJ,\n    distanceI,\n    distanceJ,\n    angle = 90,\n    isGlobal = false,\n    visible = false,\n    selected = false,\n    onClick,\n    onDblClick,\n}) => {\n    // 分布荷重の矢印\n    const [arrows, setArrows] = useState<LinePoints[]>([]);\n    // 分布荷重の上端\n    const [line, setLine] = useState<LinePoints>([0, 0, 0, 0]);\n    // ラベル\n    const [labelI, setLabelI] = useState<LabelAttrs>();\n    const [labelJ, setLabelJ] = useState<LabelAttrs>();\n    // 寸法線\n    const [guidePoints, setGuidePoints] = useState<[Point, Point]>([\n        [0, 0],\n        [0, 0],\n    ]);\n\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    useEffect(() => {\n        const vI = viRef.current;\n        const vJ = vjRef.current;\n\n        // 梁要素\n        const [ix, iy, jx, jy] = beamPoints;\n        vI.x = ix;\n        vI.y = iy;\n        vJ.x = jx;\n        vJ.y = jy;\n\n        // 梁要素の方向\n        const vd = vJ.clone().subtract(vI).normalize();\n        // 分布荷重の方向\n        let dir: Vector;\n        if (isGlobal) {\n            dir = vX.clone().rotateDeg(angle * -1);\n        } else {\n            dir = vd\n                .clone()\n                .rotateDeg(angle * -1)\n                .normalize();\n        }\n        // 梁要素の長さ\n        const beamLength = vI.distance(vJ);\n        // 分布荷重の下端の位置\n        const bi = vI.clone().add(vd.clone().multiplyScalar(beamLength * distanceI));\n        const bj = vJ.clone().add(\n            vd\n                .clone()\n                .invert()\n                .multiplyScalar(beamLength * distanceJ)\n        );\n        // 分布荷重の上端の位置\n        const pi = bi.clone().add(dir.clone().multiplyScalar(forceI * 10));\n        const pj = bj.clone().add(dir.clone().multiplyScalar(forceJ * 10));\n\n        // 下端を等間隔に分割する点を取得\n        const points = getInsidePoints(bi, bj, vd);\n        // 上端の傾き\n        const slope = pj.x - pi.x !== 0 ? (pj.y - pi.y) / (pj.x - pi.x) : NaN;\n        // 上端の切片\n        const intercept = isNaN(slope) ? NaN : pi.y - slope * pi.x;\n\n        // 内側の矢印\n        const insideArrows: LinePoints[] = [];\n        points.forEach((pd) => {\n            // pd から分布荷重の方向に線を伸ばして上端と交差する点\n            const pu = intercectPoint([pi, pj, slope, intercept], pd, dir);\n            if (pu) {\n                const arrow: LinePoints = [pu[0], pu[1], pd.x, pd.y];\n                insideArrows.push(arrow);\n            }\n        });\n\n        const labelAngle = dir.angleDeg();\n        // ラベル (i端)\n        setLabelI({\n            x: bi.x,\n            y: bi.y,\n            text: `${forceI}kN/m`,\n            width: bi.distance(pi),\n            rotation: labelAngle,\n        });\n        // ラベル (j端)\n        setLabelJ({\n            x: bj.x,\n            y: bj.y,\n            text: `${forceJ}kN/m`,\n            width: bj.distance(pj),\n            rotation: labelAngle,\n        });\n\n        // 寸法線の位置\n        const force = Math.max(forceI, forceJ) * 10;\n        const guidePosition = dir.clone().multiplyScalar(force + 50);\n        const gi = bi.clone().add(guidePosition);\n        const gj = bj.clone().add(guidePosition);\n        setGuidePoints([\n            [gi.x, gi.y],\n            [gj.x, gj.y],\n        ]);\n\n        // 上端\n        setLine([pi.x, pi.y, pj.x, pj.y]);\n        // 矢印\n        setArrows([\n            // 左端\n            [pi.x, pi.y, bi.x, bi.y],\n            // 内側の矢印\n            ...insideArrows,\n            // 右端\n            [pj.x, pj.y, bj.x, bj.y],\n        ]);\n    }, [angle, beamPoints, distanceI, distanceJ, forceI, forceJ, isGlobal]);\n\n    const color = useMemo(() => {\n        return selected ? 'red' : 'pink';\n    }, [selected]);\n\n    return (\n        <Group\n            type=\"trapezoid\"\n            id={id}\n            beam={beam}\n            visible={visible}\n            onClick={onClick}\n            onTap={onClick}\n            onDblClick={onDblClick}\n            onDblTap={onDblClick}\n        >\n            {/* 上端 */}\n            <Line points={line} {...defaultLineProps} stroke={color} />\n            {/* 矢印 */}\n            {arrows.map((arrow, index) => (\n                <Arrow\n                    key={`arrow_${index}`}\n                    points={arrow}\n                    {...defaultArrowProps}\n                    stroke={color}\n                    fill={color}\n                />\n            ))}\n            {/* ラベルと寸法線 */}\n            {selected && (\n                <>\n                    {/* I端側ラベル */}\n                    <Text {...defaultLabelProps} {...labelI} fill={color} />\n                    {/* J端側ラベル */}\n                    <Text {...defaultLabelProps} {...labelJ} fill={color} />\n                    {/* 寸法線 */}\n                    <Guide start={guidePoints[0]} end={guidePoints[1]} />\n                </>\n            )}\n        </Group>\n    );\n};\n\nexport default Trapezoid;\n","import { useContext, useMemo } from 'react';\nimport { Layer } from 'react-konva';\nimport { CanvasContext } from '../provider/CanvasProvider';\nimport { Guide as GuideLine } from '../shape';\n\ninterface GuideLineProps {\n    key: string;\n    start: [number, number];\n    end: [number, number];\n}\n\ninterface GuidePoint {\n    minX: number;\n    maxX: number;\n    guidesX: GuideLineProps[];\n    minY: number;\n    maxY: number;\n    guidesY: GuideLineProps[];\n}\n\nconst GuideInterval = 25;\n\nconst GuideLayer: React.VFC = () => {\n    const { nodes } = useContext(CanvasContext);\n\n    const { minX, maxX, guidesX, minY, maxY, guidesY }: GuidePoint = useMemo(() => {\n        const guide: GuidePoint = {\n            maxX: Number.MIN_SAFE_INTEGER,\n            minX: Number.MAX_SAFE_INTEGER,\n            guidesX: [],\n            maxY: Number.MIN_SAFE_INTEGER,\n            minY: Number.MAX_SAFE_INTEGER,\n            guidesY: [],\n        };\n\n        const pointsX = new Set<number>();\n        const pointsY = new Set<number>();\n        nodes.forEach(({ x, y }) => {\n            if (guide.maxX < x) {\n                guide.maxX = x;\n            }\n            if (guide.minX > x) {\n                guide.minX = x;\n            }\n            if (!pointsX.has(x)) {\n                pointsX.add(x);\n            }\n            if (guide.maxY < y) {\n                guide.maxY = y;\n            }\n            if (guide.minY > y) {\n                guide.minY = y;\n            }\n            if (!pointsY.has(y)) {\n                pointsY.add(y);\n            }\n        });\n\n        // ガイドの生成\n        if (pointsX.size > 1) {\n            const array = Array.from(pointsX).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideX_${i}`,\n                    start: [prev, guide.maxY + GuideInterval * 4],\n                    end: [current, guide.maxY + GuideInterval * 4],\n                };\n                prev = current;\n                guide.guidesX.push(props);\n            }\n        }\n        if (pointsY.size > 1) {\n            const array = Array.from(pointsY).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            const localX = Math.max(guide.minX - GuideInterval * 4, GuideInterval * 2);\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideY_${i}`,\n                    start: [localX, prev],\n                    end: [localX, current],\n                };\n                prev = current;\n                guide.guidesY.push(props);\n            }\n        }\n\n        return guide;\n    }, [nodes]);\n\n    const GlobalVerticalGuidePositionX = useMemo(() => {\n        if (minX !== Number.MAX_SAFE_INTEGER) {\n            return Math.max(GuideInterval, minX - GuideInterval * 5);\n        }\n        return 0;\n    }, [minX]);\n\n    const GlobalHorizontalGuidePositionY = useMemo(() => {\n        if (maxY !== Number.MIN_SAFE_INTEGER) {\n            return maxY + GuideInterval * 5;\n        }\n        return 0;\n    }, [maxY]);\n\n    return (\n        <Layer listening={false}>\n            {/* Horizontal */}\n            {minX !== Number.MAX_SAFE_INTEGER && maxX !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[minX, GlobalHorizontalGuidePositionY]}\n                    end={[maxX, GlobalHorizontalGuidePositionY]}\n                />\n            )}\n            {guidesX.map((props) => (\n                <GuideLine {...props} />\n            ))}\n            {/* Vertical */}\n            {minY !== Number.MAX_SAFE_INTEGER && maxY !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[GlobalVerticalGuidePositionX, minY]}\n                    end={[GlobalVerticalGuidePositionX, maxY]}\n                />\n            )}\n            {guidesY.map((props) => (\n                <GuideLine {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GuideLayer;\n","import { createContext, Dispatch, ReactNode, SetStateAction, useCallback, useState } from 'react';\nimport { PopupParams, PopupPosition, PopupType } from '../popup/types';\n\ninterface IPopupContext {\n    popupType?: PopupType;\n    setPopupType: Dispatch<SetStateAction<PopupType | undefined>>;\n    popupPosition: PopupPosition;\n    setPopupPosition: Dispatch<SetStateAction<PopupPosition>>;\n    open: (popup: PopupType, position: PopupPosition, popupParams?: PopupParams) => void;\n    close: VoidFunction;\n    popupParams?: PopupParams;\n}\n\ninterface Props {\n    children: ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const PopupContext = createContext<IPopupContext>(undefined!);\n\nconst PopupProvider: React.VFC<Props> = ({ children }) => {\n    // ポップアップの種類\n    const [popupType, setPopupType] = useState<PopupType>();\n    // ポップアップの位置\n    const [popupPosition, setPopupPosition] = useState<PopupPosition>({ top: 0, left: 0 });\n    // パラメータ\n    const [popupParams, setPopupParams] = useState<PopupParams>({});\n\n    const open = useCallback(\n        (type: PopupType, position: PopupPosition, params?: PopupParams) => {\n            setPopupType(type);\n            setPopupPosition(position);\n            if (params) {\n                setPopupParams(params);\n            }\n        },\n        [setPopupPosition, setPopupType]\n    );\n\n    const close = useCallback(() => {\n        setPopupType(undefined);\n        setPopupPosition({ top: 0, left: 0 });\n        setPopupParams({});\n    }, [setPopupPosition, setPopupType]);\n\n    return (\n        <PopupContext.Provider\n            value={{\n                popupType,\n                setPopupType,\n                popupPosition,\n                setPopupPosition,\n                open,\n                close,\n                popupParams,\n            }}\n        >\n            {children}\n        </PopupContext.Provider>\n    );\n};\n\nexport default PopupProvider;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Layer } from 'react-konva';\nimport { isLinePoints } from '../../../types/common';\nimport { PopupParams } from '../popup/types';\nimport { CanvasContext } from '../provider/CanvasProvider';\nimport { PopupContext } from '../provider/PopupProvider';\nimport { Beam, Force, Node, Trapezoid } from '../shape';\nimport { BeamPoints } from '../types';\nimport { createForceParams, snap, Vector } from '../util';\n\nexport const ShapeLayer: React.VFC = () => {\n    const {\n        tool,\n        readonly,\n        nodes,\n        nodeMap,\n        beams,\n        beamMap,\n        forces,\n        forceAverage,\n        trapezoids,\n        snapSize,\n        onChangeNode,\n        onCreateForce,\n        onDeleteBeam,\n        onDeleteForce,\n        onDeleteTrapezoid,\n        select,\n        isSelected,\n    } = useContext(CanvasContext);\n    const { open } = useContext(PopupContext);\n\n    const nodeRefs = useRef<Array<Konva.Circle | null>>([]);\n    const beamRefs = useRef<Array<Konva.Line | null>>([]);\n    const layerRef = useRef<Konva.Layer>(null);\n\n    // nodes, beams の数が変わったら refs の配列を詰める\n    useEffect(() => {\n        nodeRefs.current = nodeRefs.current.slice(0, nodes.length);\n    }, [nodes.length]);\n    useEffect(() => {\n        beamRefs.current = beamRefs.current.slice(0, beams.length);\n    }, [beams.length]);\n\n    const [draggingNode, setDraggingNode] = useState<string>();\n\n    const isNodeDraggable = useMemo(() => {\n        return !readonly && tool === 'select';\n    }, [readonly, tool]);\n\n    // ドラッグ位置\n    const dragPointRef = useRef<Vector>(new Vector(0, 0));\n    // ドラッグ中の描画タイマー\n    const timerRef = useRef<NodeJS.Timer>();\n\n    /**\n     * beam の座標を返す\n     */\n    const getBeamPoints = useCallback(\n        (nodeI: string, nodeJ: string): BeamPoints => {\n            const ni = nodeMap[nodeI];\n            const nj = nodeMap[nodeJ];\n            return [ni.x, ni.y, nj.x, nj.y];\n        },\n        [nodeMap]\n    );\n    const getBeamPointsByBeamId = useCallback(\n        (beamId) => {\n            const beam = beamMap[beamId];\n            return getBeamPoints(beam.nodeI, beam.nodeJ);\n        },\n        [beamMap, getBeamPoints]\n    );\n\n    /**\n     * 梁要素のクリック\n     */\n    const handleClickBeam = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            let cancelBubble = false;\n            if (tool === 'select') {\n                // 梁要素の選択\n                select({ type: 'beams', id: event.target.id() });\n                cancelBubble = true;\n            } else if (tool === 'delete') {\n                // 梁要素の削除\n                onDeleteBeam(event.target.id());\n                cancelBubble = true;\n            } else if (tool === 'force') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                // 梁要素の位置\n                const points = event.target.attrs.points;\n                if (point && isLinePoints(points)) {\n                    // 集中荷重の追加\n                    const params = createForceParams(\n                        event.target.id(),\n                        new Vector(points[0], points[1]),\n                        new Vector(points[2], points[3]),\n                        new Vector(point.x, point.y)\n                    );\n                    const name = `Force_${forces.length}`;\n                    onCreateForce({ ...params, name });\n                    cancelBubble = true;\n                }\n            }\n\n            event.cancelBubble = cancelBubble;\n        },\n        [forces.length, onCreateForce, onDeleteBeam, select, tool]\n    );\n\n    /**\n     * 節点のダブルクリック（ピン選択ダイアログの表示）\n     */\n    const handleDblClickNode = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                // 対象 node\n                const node = nodes.find(({ id }) => id === event.target.id());\n                if (point && node) {\n                    // Node を Record<string, unknown> にキャストするために\n                    // 一旦 unknown にキャストする\n                    open('nodes', { top: point.y, left: point.x }, node as unknown as PopupParams);\n                }\n            }\n        },\n        [nodes, open, tool]\n    );\n\n    /**\n     * node ドラッグ時の描画処理\n     */\n    const draw = useCallback(() => {\n        if (draggingNode) {\n            const { x, y } = dragPointRef.current;\n            // ドラッグ中の node に紐づく beam を更新する\n            beamRefs.current.forEach((beam) => {\n                if (beam) {\n                    const { nodeI, nodeJ } = beam.attrs;\n                    const points = beam.points();\n                    if (nodeI === draggingNode) {\n                        beam.points([x, y, points[2], points[3]]);\n                    }\n                    if (nodeJ === draggingNode) {\n                        beam.points([points[0], points[1], x, y]);\n                    }\n                }\n            });\n        }\n    }, [draggingNode]);\n\n    /**\n     * 節点のドラッグ開始\n     */\n    const handleDragStartNode = useCallback((event: KonvaEventObject<Event>) => {\n        // ポインタ位置\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            // ドラッグ中の節点ID\n            setDraggingNode(event.target.id());\n            // ドラッグ開始位置を保持\n            dragPointRef.current.x = point.x;\n            dragPointRef.current.y = point.y;\n        }\n    }, []);\n\n    useEffect(() => {\n        if (typeof draggingNode !== 'undefined') {\n            if (timerRef.current) {\n                // もし実行中のタイマーがあったらキャンセル\n                clearInterval(timerRef.current);\n            }\n\n            timerRef.current = setInterval(draw, 100);\n        }\n    }, [draggingNode, draw]);\n\n    /**\n     * ドラッグによる node 移動\n     */\n    const handleDragMoveNode = useCallback((event: KonvaEventObject<Event>) => {\n        // ポインタ位置\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            // ドラッグ開始位置を保持\n            dragPointRef.current.x = point.x;\n            dragPointRef.current.y = point.y;\n        }\n    }, []);\n\n    /**\n     * node のドラッグ終了\n     */\n    const handleDragEndNode = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            // ポインタ位置\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                if (timerRef.current) {\n                    // 描画終了\n                    clearInterval(timerRef.current);\n                }\n                // ドラッグ開始位置をリセット\n                dragPointRef.current.x = 0;\n                dragPointRef.current.y = 0;\n                // ドラッグ対象 node をリセット\n                setDraggingNode(undefined);\n\n                // 更新処理\n                const [px, py] = snap([point.x, point.y], snapSize);\n                onChangeNode({\n                    id: event.target.id(),\n                    x: px,\n                    y: py,\n                    pin: event.target.attrs.pin,\n                });\n            }\n        },\n        [onChangeNode, snapSize]\n    );\n\n    /**\n     * force のクリック\n     */\n    const handleClickForce = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            const forceId = event.currentTarget.id();\n            let cancelBubble = false;\n\n            if (tool === 'select') {\n                select({ type: 'forces', id: forceId });\n                cancelBubble = true;\n            } else if (tool === 'delete') {\n                onDeleteForce(forceId);\n                cancelBubble = true;\n            }\n\n            event.cancelBubble = cancelBubble;\n        },\n        [onDeleteForce, select, tool]\n    );\n\n    /**\n     * 集中荷重のダブルクリック（荷重値の入力ダイアログを表示）\n     */\n    const handleDblClickForce = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                // 対象 force\n                const force = forces.find(({ id }) => id === event.currentTarget.id());\n                if (point && force) {\n                    open(\n                        'forces',\n                        { top: point.y, left: point.x },\n                        force as unknown as PopupParams\n                    );\n                }\n            }\n        },\n        [forces, open, tool]\n    );\n\n    /**\n     * 分布荷重のクリック\n     */\n    const handleClickTrapezoid = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            const id = event.currentTarget.id();\n            let cancelBubble = false;\n\n            if (tool === 'select') {\n                select({ type: 'trapezoids', id });\n                cancelBubble = true;\n            } else if (tool === 'delete') {\n                onDeleteTrapezoid(id);\n                cancelBubble = true;\n            }\n\n            event.cancelBubble = cancelBubble;\n        },\n        [onDeleteTrapezoid, select, tool]\n    );\n\n    /**\n     * 分布荷重のダブルクリック（編集ダイアログの表示）\n     */\n    const handleDblClickTrapezoid = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                // 対象要素\n                const trapezoid = trapezoids.find(({ id }) => id === event.currentTarget.id());\n                if (point && trapezoid) {\n                    open(\n                        'trapezoids',\n                        { top: point.y, left: point.x },\n                        trapezoid as unknown as PopupParams\n                    );\n                }\n            }\n        },\n        [open, tool, trapezoids]\n    );\n\n    return (\n        <Layer ref={layerRef}>\n            {beams.map((beam, i) => (\n                <Beam\n                    key={beam.id}\n                    ref={(el) => (beamRefs.current[i] = el)}\n                    {...beam}\n                    points={getBeamPoints(beam.nodeI, beam.nodeJ)}\n                    selected={isSelected({ type: 'beams', id: beam.id })}\n                    onClick={handleClickBeam}\n                />\n            ))}\n            {nodes.map((node, i) => (\n                <Node\n                    key={node.id}\n                    ref={(el) => (nodeRefs.current[i] = el)}\n                    {...node}\n                    draggable={isNodeDraggable}\n                    isDragging={draggingNode === node.id}\n                    onDblClick={handleDblClickNode}\n                    onDragStart={handleDragStartNode}\n                    onDragMove={handleDragMoveNode}\n                    onDragEnd={handleDragEndNode}\n                />\n            ))}\n            {forces.map((force) => (\n                <Force\n                    key={force.id}\n                    {...force}\n                    ratio={force.force / forceAverage}\n                    points={getBeamPointsByBeamId(force.beam)}\n                    visible={!Boolean(draggingNode)}\n                    selected={isSelected({ type: 'forces', id: force.id })}\n                    onClick={handleClickForce}\n                    onDblClick={handleDblClickForce}\n                />\n            ))}\n            {trapezoids.map((trapezoid) => (\n                <Trapezoid\n                    key={trapezoid.id}\n                    {...trapezoid}\n                    points={getBeamPointsByBeamId(trapezoid.beam)}\n                    visible={!Boolean(draggingNode)}\n                    selected={isSelected({ type: 'trapezoids', id: trapezoid.id })}\n                    onClick={handleClickTrapezoid}\n                    onDblClick={handleDblClickTrapezoid}\n                />\n            ))}\n        </Layer>\n    );\n};\n\nexport default ShapeLayer;\n","import { Button, InputAdornment, Paper, Stack, TextField } from '@mui/material';\nimport { ChangeEvent, FormEvent, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Force, isForce } from '../../../types/shape';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (force: Force) => void;\n}\n\ninterface ForceEditorProps extends Omit<Props, 'values'> {\n    force: Force;\n}\n\nconst ForceEditor: React.VFC<ForceEditorProps> = ({ force, onChange, onClose }) => {\n    const [value, setValue] = useState('');\n    const [error, setError] = useState<string>();\n\n    const handleSubmit = useCallback(\n        (event: FormEvent<HTMLFormElement>) => {\n            event.preventDefault();\n\n            if (event.currentTarget.checkValidity() && typeof error === 'undefined') {\n                const num = parseFloat(value);\n                if (!isNaN(num)) {\n                    // 更新\n                    onChange({\n                        ...force,\n                        force: num,\n                    });\n                    // ポップアップ閉じる\n                    onClose();\n                }\n            }\n        },\n        [error, onChange, onClose, value, force]\n    );\n\n    const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.currentTarget;\n        let errorMessage: string | undefined;\n        setValue(value);\n\n        // 必須\n        if (value.length === 0) {\n            errorMessage = '数値を入力してください';\n        }\n        // 数値？\n        const num = parseFloat(value);\n        if (isNaN(num)) {\n            errorMessage = '数値を入力してください';\n        }\n        if (0 > num || num > Number.MAX_SAFE_INTEGER) {\n            errorMessage = '0 より大きい値を入力してください';\n        }\n\n        setError(errorMessage);\n    }, []);\n\n    useEffect(() => {\n        setValue(`${force.force}`);\n        setError(undefined);\n    }, [force]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"集中荷重\"\n                    value={value}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN</InputAdornment>,\n                    }}\n                    error={Boolean(error)}\n                    helperText={error}\n                />\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedForceEditor: React.VFC<Props> = ({ values, ...props }) => {\n    const force = useMemo(() => {\n        if (isForce(values)) {\n            return values;\n        }\n        // 空の force を渡す\n        return {\n            id: '',\n            name: '',\n            beam: '',\n            force: 0,\n            distanceI: 0,\n        };\n    }, [values]);\n\n    return <ForceEditor {...props} force={force} />;\n};\n\nexport default ConnectedForceEditor;\n","var _path, _circle, _circle2, _line;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80 0 L30 80 L130 80 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 45,\n    cy: 115,\n    r: 20\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 115,\n    cy: 115,\n    r: 20\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 30,\n    y1: 150,\n    x2: 130,\n    y2: 150,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin2);\nexport default __webpack_public_path__ + \"static/media/pin_2.2b2bb714.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _circle, _circle2, _line;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin3(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    style: {\n      width: 64\n    },\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30 3 L30 80 L130 80 L130 3 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 45,\n    cy: 115,\n    r: 20\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 115,\n    cy: 115,\n    r: 20\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 30,\n    y1: 150,\n    x2: 130,\n    y2: 150,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin3);\nexport default __webpack_public_path__ + \"static/media/pin_3.d7b6571b.svg\";\nexport { ForwardRef as ReactComponent };","var _line, _line2, _line3, _line4, _line5;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin4(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    style: {\n      width: 64\n    },\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 0,\n    y1: 3,\n    x2: 160,\n    y2: 3,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 20,\n    y1: 0,\n    x2: 0,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line3 || (_line3 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 60,\n    y1: 0,\n    x2: 40,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line4 || (_line4 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 100,\n    y1: 0,\n    x2: 80,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line5 || (_line5 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 140,\n    y1: 0,\n    x2: 120,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin4);\nexport default __webpack_public_path__ + \"static/media/pin_4.4442f3d6.svg\";\nexport { ForwardRef as ReactComponent };","import CircleOutlinedIcon from '@mui/icons-material/CircleOutlined';\nimport {\n    Button,\n    Paper,\n    Stack,\n    SvgIcon,\n    ToggleButton,\n    ToggleButtonGroup,\n    ToggleButtonProps,\n    Typography,\n} from '@mui/material';\nimport {\n    FormEvent,\n    MouseEvent,\n    ReactElement,\n    useCallback,\n    useEffect,\n    useMemo,\n    useState,\n} from 'react';\nimport { isNode, isNodePinType, Node, NodePinType } from '../../../types/shape';\nimport { ReactComponent as PinIcon1 } from './pins/pin_1.svg';\nimport { ReactComponent as PinIcon2 } from './pins/pin_2.svg';\nimport { ReactComponent as PinIcon3 } from './pins/pin_3.svg';\nimport { ReactComponent as PinIcon4 } from './pins/pin_4.svg';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (node: Node) => void;\n}\n\ninterface PinSelectorProps extends Omit<Props, 'values'> {\n    node: Node;\n}\n\ninterface PinButtonProps {\n    type: NodePinType;\n    icon: ReactElement;\n    label: string;\n}\n\nconst PinButtons: Readonly<Record<NodePinType, PinButtonProps>> = {\n    free: {\n        type: 'free',\n        icon: <CircleOutlinedIcon />,\n        label: '完全フリー',\n    },\n    pin: {\n        type: 'pin',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon1 />\n            </SvgIcon>\n        ),\n        label: '完全ピン',\n    },\n    pinX: {\n        type: 'pinX',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon2 />\n            </SvgIcon>\n        ),\n        label: 'ピンXローラー',\n    },\n    pinZ: {\n        type: 'pinZ',\n        icon: (\n            <SvgIcon sx={{ width: 24, transform: 'rotate(-90deg)' }} viewBox=\"0 0 160 160\">\n                <PinIcon2 />\n            </SvgIcon>\n        ),\n        label: 'ピンZローラー',\n    },\n    fixX: {\n        type: 'fixX',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon3 />\n            </SvgIcon>\n        ),\n        label: '固定Xローラー',\n    },\n    fix: {\n        type: 'fix',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon4 />\n            </SvgIcon>\n        ),\n        label: '完全固定',\n    },\n};\n\nconst defaultButtonProps: Partial<ToggleButtonProps> = {\n    sx: { justifyContent: 'flex-start', alignItems: 'center' },\n};\n\nconst PinSelector: React.VFC<PinSelectorProps> = ({ node, onChange, onClose }) => {\n    const [pin, setPin] = useState<NodePinType>();\n\n    const handleSubmit = useCallback(\n        (event: FormEvent) => {\n            event.preventDefault();\n\n            const values: Node = {\n                ...node,\n                pin,\n            };\n            onChange(values);\n            onClose();\n        },\n        [node, onChange, onClose, pin]\n    );\n\n    const handleChange = useCallback((_: MouseEvent<HTMLElement>, newValue: string | null) => {\n        if (newValue !== null && isNodePinType(newValue)) {\n            setPin(newValue);\n        }\n    }, []);\n\n    useEffect(() => {\n        setPin(node.pin ?? 'free');\n    }, [node.pin]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                <ToggleButtonGroup\n                    orientation=\"vertical\"\n                    value={pin}\n                    size=\"small\"\n                    exclusive\n                    fullWidth\n                    onChange={handleChange}\n                >\n                    {Object.entries(PinButtons).map(([key, { icon, label }]) => (\n                        <ToggleButton key={key} value={key} {...defaultButtonProps}>\n                            {icon}\n                            <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                                {label}\n                            </Typography>\n                        </ToggleButton>\n                    ))}\n                </ToggleButtonGroup>\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedPinSelector: React.VFC<Props> = ({ values, ...props }) => {\n    const node = useMemo(() => {\n        if (isNode(values)) {\n            return values;\n        }\n        return {\n            id: '',\n            x: 0,\n            y: 0,\n        };\n    }, [values]);\n\n    return <PinSelector {...props} node={node} />;\n};\n\nexport default ConnectedPinSelector;\n","import {\n    Button,\n    Checkbox,\n    FormControlLabel,\n    InputAdornment,\n    Paper,\n    Stack,\n    TextField,\n} from '@mui/material';\nimport { ChangeEvent, FormEvent, useCallback, useEffect, useMemo, useState } from 'react';\nimport { isTrapezoid, Trapezoid } from '../../../types/shape';\nimport { round } from '../util';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (trapezoid: Trapezoid) => void;\n}\n\ninterface FormProps extends Omit<Props, 'values'> {\n    trapezoid: Trapezoid;\n}\n\ninterface TrapezoidAttrs {\n    forceI: number;\n    forceJ: number;\n    angle: number;\n    isGlobal: boolean;\n}\ninterface FormValues {\n    forceI: string;\n    forceJ: string;\n    angle: string;\n    isGlobal: boolean;\n}\n\ntype ValidateTuple = [value: number, valid: boolean, error: string];\n\n/**\n * 必須かつ 0以上の数値\n * @param value\n */\nconst validateForce = (value: string): ValidateTuple => {\n    if (value.length === 0) {\n        // 必須\n        return [NaN, false, '数値を入力してください'];\n    } else {\n        const val = parseFloat(value);\n        if (isNaN(val)) {\n            // 数値でない\n            return [NaN, false, '数値を入力してください'];\n        } else if (0 >= val && val > Number.MAX_SAFE_INTEGER) {\n            // 数値が範囲外\n            return [val, false, '0 以上の数値を入力してください'];\n        }\n        // OK\n        return [round(val, 3), true, ''];\n    }\n};\n\n/**\n * -180 から 180 の範囲の数値\n * -180 の場合は 180 とする\n * @param value\n */\nconst validateAngle = (value: string): ValidateTuple => {\n    if (value.length > 0) {\n        let val = parseInt(value, 10);\n        if (isNaN(val) || value.indexOf('.') >= 0) {\n            // 整数でない\n            return [NaN, false, '整数を入力してください'];\n        } else if (-180 > val || 180 < val) {\n            // 180 から 180 の範囲外\n            return [val, false, '-180 〜 180 で入力してください'];\n        }\n        if (val === -180) {\n            // -180 の場合は 180 とする\n            val = 180;\n        }\n        // OK\n        return [val, true, ''];\n    }\n    // 未指定の場合は 90 を返す\n    return [90, true, ''];\n};\n\nconst parseFormValues = (values: Partial<FormValues>): [boolean, TrapezoidAttrs] => {\n    const attrs: TrapezoidAttrs = {\n        forceI: 0,\n        forceJ: 0,\n        angle: 90,\n        isGlobal: false,\n    };\n\n    // forceI\n    const [value1, valid1] = validateForce(values.forceI ?? '');\n    const [value2, valid2] = validateForce(values.forceJ ?? '');\n    const [value3, valid3] = validateAngle(values.angle ?? '');\n    const valid = valid1 && valid2 && valid3;\n\n    attrs.forceI = value1;\n    attrs.forceJ = value2;\n    attrs.angle = value3;\n    attrs.isGlobal = values.isGlobal ?? false;\n\n    return [valid, attrs];\n};\n\nconst toFormValues = (trapezoid: Trapezoid): Partial<FormValues> => {\n    const values: Partial<FormValues> = {};\n\n    values.forceI = `${trapezoid.forceI}`;\n    values.forceJ = `${trapezoid.forceJ}`;\n    values.angle = `${trapezoid.angle ?? ''}`;\n    values.isGlobal = trapezoid.isGlobal;\n\n    return values;\n};\n\nconst TrapezoidEditor: React.VFC<FormProps> = ({ trapezoid, onChange, onClose }) => {\n    const [values, setValues] = useState<Partial<FormValues>>({});\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    const handleSubmit = useCallback(\n        (event: FormEvent<HTMLFormElement>) => {\n            event.preventDefault();\n\n            if (event.currentTarget.checkValidity()) {\n                // エラーがあれば更新しない\n                const invalid = Object.values(errors).some((error) => error.length > 0);\n                if (!invalid) {\n                    // values を TrapezoidAttrs に変換する\n                    const [valid, attrs] = parseFormValues(values);\n                    console.log(valid, attrs);\n                    if (valid) {\n                        // 更新\n                        onChange({\n                            ...trapezoid,\n                            ...attrs,\n                        });\n                    }\n                    // ポップアップ閉じる\n                    onClose();\n                }\n            }\n        },\n        [errors, onChange, onClose, trapezoid, values]\n    );\n\n    const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target;\n        let errorMessage = '';\n        switch (name) {\n            case 'forceI':\n            case 'forceJ':\n                // 必須かつ 0以上の数値\n                const [, valid1, error1] = validateForce(value);\n                if (!valid1) {\n                    errorMessage = error1;\n                }\n                break;\n            case 'angle':\n                const [, valid2, error2] = validateAngle(value);\n                if (!valid2) {\n                    errorMessage = error2;\n                }\n                break;\n        }\n\n        // エラー情報の更新\n        setErrors((state) => ({\n            ...state,\n            [name]: errorMessage,\n        }));\n\n        // 値を更新\n        setValues((state) => ({\n            ...state,\n            [name]: value,\n        }));\n    }, []);\n\n    const handleChangeIsGlobal = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { checked } = event.target;\n        setValues((state) => ({\n            ...state,\n            isGlobal: checked,\n        }));\n    }, []);\n\n    useEffect(() => {\n        setValues(toFormValues(trapezoid));\n        setErrors({});\n    }, [trapezoid]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                {/* forceI */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"I端側の荷重\"\n                    name=\"forceI\"\n                    value={values['forceI'] ?? ''}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN/m</InputAdornment>,\n                    }}\n                    error={Boolean(errors['forceI'])}\n                    helperText={errors['forceI'] ?? ''}\n                />\n                {/* forceJ */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"J端側の荷重\"\n                    name=\"forceJ\"\n                    value={values['forceJ'] ?? ''}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN/m</InputAdornment>,\n                    }}\n                    error={Boolean(errors['forceJ'])}\n                    helperText={errors['forceJ'] ?? ''}\n                />\n                {/* angle */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"角度\"\n                    name=\"angle\"\n                    value={values['angle'] ?? ''}\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">°</InputAdornment>,\n                    }}\n                    error={Boolean(errors['angle'])}\n                    helperText={errors['angle'] ?? ''}\n                />\n                {/* isGlobal */}\n                <FormControlLabel\n                    label=\"全体座標系\"\n                    control={\n                        <Checkbox\n                            name=\"isGlobal\"\n                            size=\"small\"\n                            checked={values.isGlobal ?? false}\n                            onChange={handleChangeIsGlobal}\n                        />\n                    }\n                />\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedTrapezoidEditor: React.VFC<Props> = ({ values, ...props }) => {\n    const trapezoid = useMemo(() => {\n        if (isTrapezoid(values)) {\n            return values;\n        }\n        // 空データを返す\n        return {\n            id: '',\n            name: '',\n            beam: '',\n            forceI: 0,\n            distanceI: 0,\n            forceJ: 0,\n            distanceJ: 0,\n        };\n    }, [values]);\n\n    return <TrapezoidEditor {...props} trapezoid={trapezoid} />;\n};\n\nexport default ConnectedTrapezoidEditor;\n","import { Box } from '@mui/material';\nimport { useContext } from 'react';\nimport { CanvasContext } from '../provider/CanvasProvider';\nimport { PopupContext } from '../provider/PopupProvider';\nimport ForceEditor from './ForceEditor';\nimport PinSelector from './PinSelector';\nimport TrapezoidEditor from './TrapezoidEditor';\n\nconst Popup: React.VFC = () => {\n    const { popupType, popupPosition, popupParams, close } = useContext(PopupContext);\n    const { onChangeNode, onChangeForce, onChangeTrapezoid } = useContext(CanvasContext);\n\n    if (typeof popupType === 'undefined') {\n        return null;\n    }\n\n    return (\n        <Box\n            sx={{\n                position: 'absolute',\n                zIndex: 5000,\n                ...popupPosition,\n            }}\n        >\n            {popupType === 'forces' && (\n                <ForceEditor values={popupParams ?? {}} onClose={close} onChange={onChangeForce} />\n            )}\n            {popupType === 'trapezoids' && (\n                <TrapezoidEditor\n                    values={popupParams ?? {}}\n                    onClose={close}\n                    onChange={onChangeTrapezoid}\n                />\n            )}\n            {popupType === 'nodes' && (\n                <PinSelector values={popupParams ?? {}} onClose={close} onChange={onChangeNode} />\n            )}\n        </Box>\n    );\n};\n\nexport default Popup;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { forwardRef, useCallback, useContext, useImperativeHandle, useRef } from 'react';\nimport { Stage } from 'react-konva';\nimport { useContextBridge } from '../../hooks/useContextBridge';\nimport DrawLayer from './layer/DrawLayer';\nimport GridLayer from './layer/GridLayer';\nimport GuideLayer from './layer/GuideLayer';\nimport ShapeLayer from './layer/ShapeLayer';\nimport Popup from './popup';\nimport { CanvasContext } from './provider/CanvasProvider';\nimport { DrawContext } from './provider/DrawProvider';\nimport { PopupContext } from './provider/PopupProvider';\nimport { CanvasCoreHandler } from './types';\n\nconst CanvasCore: React.ForwardRefRenderFunction<CanvasCoreHandler> = (_, ref) => {\n    const { tool, size, getStructure, clearSelection } = useContext(CanvasContext);\n    const { close } = useContext(PopupContext);\n    const { onPointerDown, onPointerMove, onPointerUp } = useContext(DrawContext);\n\n    const ContextBridge = useContextBridge(CanvasContext, PopupContext, DrawContext);\n\n    const canvasRef = useRef<Konva.Stage>(null);\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            toDataURL: () => {\n                if (canvasRef.current) {\n                    return canvasRef.current.toDataURL();\n                }\n            },\n            getStructure,\n        }),\n        [getStructure]\n    );\n\n    /**\n     * Stage のクリック\n     */\n    const handleClick = useCallback(\n        (_: KonvaEventObject<PointerEvent>) => {\n            // ポップオーバーを閉じる\n            close();\n\n            if (tool === 'select') {\n                // 選択解除\n                clearSelection();\n            }\n        },\n        [clearSelection, close, tool]\n    );\n\n    return (\n        <>\n            <Stage\n                ref={canvasRef}\n                width={size.width}\n                height={size.height}\n                onClick={handleClick}\n                onTap={handleClick}\n                {...{ onPointerDown, onPointerMove, onPointerUp }}\n            >\n                <ContextBridge>\n                    <GridLayer />\n                    <GuideLayer />\n                    <ShapeLayer />\n                    <DrawLayer />\n                </ContextBridge>\n            </Stage>\n            {/* ポップアップ */}\n            <Popup />\n        </>\n    );\n};\n\nexport default forwardRef(CanvasCore);\n","import { Box } from '@mui/material';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasTool, DOMSize } from '../../types/common';\nimport { emptyStructure, Structure } from '../../types/shape';\nimport CanvasCore from './core';\nimport CanvasProvider from './provider/CanvasProvider';\nimport DrawProvider from './provider/DrawProvider';\nimport PopupProvider from './provider/PopupProvider';\nimport { CanvasCoreHandler } from './types';\n\ninterface Props {\n    structure: Structure;\n    tool?: CanvasTool;\n    readonly?: boolean;\n}\n\nexport type CanvasHandler = CanvasCoreHandler;\n\nconst Canvas: React.ForwardRefRenderFunction<CanvasHandler, Props> = (\n    { tool = 'select', structure: source, readonly = false },\n    ref\n) => {\n    // キャンバス表示領域\n    const [size, setSize] = useState<DOMSize>({ width: 0, height: 0 });\n    // キャンバスの親要素\n    const containerRef = useRef<HTMLDivElement>(null);\n    // キャンバス本体\n    const canvasRef = useRef<CanvasCoreHandler>(null);\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            toDataURL: () => {\n                if (canvasRef.current) {\n                    return canvasRef.current.toDataURL();\n                }\n            },\n            getStructure: () => {\n                if (canvasRef.current) {\n                    return canvasRef.current.getStructure();\n                }\n                return emptyStructure;\n            },\n        }),\n        []\n    );\n\n    // 要素のリサイズを監視\n    useEffect(() => {\n        const observer = new ResizeObserver((entries) => {\n            const { width, height } = entries[0].contentRect;\n            setSize({\n                width,\n                height,\n            });\n        });\n\n        if (containerRef.current) {\n            observer.observe(containerRef.current);\n        }\n\n        return () => {\n            observer.disconnect();\n        };\n    }, []);\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{\n                width: 'auto',\n                height: '100%',\n                backgroundColor: '#ffffff',\n                overscrollBehavior: 'contain',\n            }}\n        >\n            <CanvasProvider tool={tool} size={size} structure={source} readonly={readonly}>\n                <DrawProvider>\n                    <PopupProvider>\n                        <CanvasCore ref={canvasRef} />\n                    </PopupProvider>\n                </DrawProvider>\n            </CanvasProvider>\n        </Box>\n    );\n};\n\nexport default forwardRef(Canvas);\n","import { Layer, Line } from 'react-konva';\nimport { DrawingProps, DrawSettings } from '../../../types/note';\n\ninterface Props {\n    drawings: DrawingProps[];\n    // 描画中のデータ\n    settings: DrawSettings;\n    points?: number[];\n}\n\nconst Draw: React.VFC<Props> = ({ drawings, settings, points }) => {\n    return (\n        <Layer>\n            {drawings.map(({ eraser = false, ...lineProps }, index) => (\n                <Line\n                    key={`note-drawing-${index}`}\n                    {...lineProps}\n                    globalCompositeOperation={eraser ? 'destination-out' : 'source-over'}\n                />\n            ))}\n            {points && (\n                <Line\n                    {...settings}\n                    points={points}\n                    globalCompositeOperation={settings.eraser ? 'destination-out' : 'source-over'}\n                />\n            )}\n        </Layer>\n    );\n};\n\nexport default Draw;\n","import CloseIcon from '@mui/icons-material/Close';\nimport EditIcon from '@mui/icons-material/Edit';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { IconButton, Menu, MenuItem, styled } from '@mui/material';\nimport { MouseEvent, MouseEventHandler, useCallback, useState } from 'react';\nimport { Html } from 'react-konva-utils';\nimport { AppMode } from '../../../../types/common';\n\ninterface Props {\n    visible?: boolean;\n    mode: AppMode;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    onEdit?: MouseEventHandler<HTMLButtonElement>;\n    onCopy?: VoidFunction;\n    onDelete?: VoidFunction;\n    onCancel?: VoidFunction;\n}\n\nconst Background = styled('div')({\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    padding: '0 8',\n});\nconst Spacer = styled('div')({\n    flex: 1,\n});\n\nconst HeaderMenu: React.VFC<Props> = ({\n    visible = false,\n    mode,\n    y: top,\n    x: left,\n    width,\n    onEdit,\n    onCopy,\n    onDelete,\n    onCancel,\n}) => {\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n    const handleClickMore = useCallback((event: MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    }, []);\n    const handleCloseMenu = useCallback(() => {\n        setAnchorEl(null);\n    }, []);\n\n    if (!visible) {\n        return null;\n    }\n\n    return (\n        <Html\n            divProps={{\n                style: {\n                    top: `${top - 42}px`,\n                    left: `${left}px`,\n                    width: `${width}px`,\n                },\n            }}\n        >\n            <Background>\n                {mode === 'canvas' && (\n                    <IconButton size=\"small\" onClick={onCancel}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n                {mode === 'note' && (\n                    <>\n                        <IconButton size=\"small\" onClick={onEdit}>\n                            <EditIcon />\n                        </IconButton>\n                        <Spacer />\n                        <IconButton size=\"small\" onClick={handleClickMore}>\n                            <MoreVertIcon />\n                        </IconButton>\n                    </>\n                )}\n            </Background>\n            <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleCloseMenu}>\n                <MenuItem onClick={onCopy}>コピー</MenuItem>\n                <MenuItem onClick={onDelete}>削除</MenuItem>\n            </Menu>\n        </Html>\n    );\n};\n\nexport default HeaderMenu;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport { Box } from 'konva/lib/shapes/Transformer';\nimport {\n    Dispatch,\n    MouseEvent,\n    SetStateAction,\n    useCallback,\n    useContext,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { Image, Rect, Transformer } from 'react-konva';\nimport useImage from 'use-image';\nimport { AppSettingsContext } from '../../../../providers/AppSettingsProvider';\nimport { NoteSettingsContext } from '../../../../providers/NoteSettingsProvider';\nimport { ShapeBaseProps } from '../../../../types/common';\nimport {\n    MinCanvasSize,\n    PageProps,\n    PageSize,\n    PageSizeType,\n    StructureCanvasProps,\n} from '../../../../types/note';\nimport { clone } from '../../../Canvas/util';\nimport HeaderMenu from './HeaderMenu';\n\ninterface Props extends StructureCanvasProps {\n    // ページ情報\n    size: PageSizeType;\n    draggable?: boolean;\n    // キャンバス情報\n    index: number;\n    onChange: Dispatch<SetStateAction<PageProps>>;\n    // 選択状態\n    selected?: boolean;\n    onSelect: VoidFunction;\n}\n\nconst CanvasHandle: React.VFC<Props> = ({\n    size,\n    draggable = false,\n    index,\n    onChange,\n    selected = false,\n    onSelect,\n    data,\n    image: dataURL,\n    ...props\n}) => {\n    const rectRef = useRef<Konva.Rect>(null);\n    const tfRef = useRef<Konva.Transformer>(null);\n    const [isDragging, setDragging] = useState(false);\n    const [image] = useImage(dataURL ?? '');\n\n    const { mode: noteMode } = useContext(NoteSettingsContext);\n    const { mode: appMode, editCanvas, closeCanvas } = useContext(AppSettingsContext);\n\n    const pageSize = useMemo(() => {\n        return PageSize[size];\n    }, [size]);\n\n    const visibleMenu = useMemo(() => {\n        return selected && !isDragging && noteMode === 'select';\n    }, [isDragging, noteMode, selected]);\n\n    const visibleTransformer = useMemo(() => {\n        return draggable && selected;\n    }, [draggable, selected]);\n\n    // 選択時にサイズ変更を可能にする\n    useEffect(() => {\n        if (selected && tfRef.current && rectRef.current) {\n            tfRef.current.nodes([rectRef.current]);\n            // 強制描画\n            tfRef.current.getLayer()?.batchDraw();\n        }\n    }, [selected]);\n\n    /**\n     * 位置/サイズ変更の確定\n     */\n    const handleChange = useCallback(\n        (rect: ShapeBaseProps) => {\n            onChange((page) => {\n                const newPage = clone(page);\n                const structure = newPage.structures[index];\n                newPage.structures[index] = {\n                    ...structure,\n                    ...rect,\n                };\n\n                return newPage;\n            });\n        },\n        [index, onChange]\n    );\n\n    /**\n     * ドラッグ開始\n     */\n    const handleDragStart = useCallback(() => {\n        setDragging(true);\n    }, []);\n\n    /**\n     * 移動\n     */\n    const handleDragMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            // イベントを伝播させない\n            event.cancelBubble = true;\n\n            if (rectRef.current) {\n                // ドラッグした位置\n                const { x, y } = event.target.attrs;\n                if (typeof x === 'number' && typeof y === 'number') {\n                    // 位置がページサイズの範囲内になるように x, y を補正\n                    const { width, height } = rectRef.current.getSize();\n                    let [newX, newY] = [x, y];\n\n                    if (newX < 0) {\n                        newX = 0;\n                    } else if (newX > pageSize.width - width) {\n                        newX = pageSize.width - width;\n                    }\n                    if (newY < 0) {\n                        newY = 0;\n                    } else if (newY > pageSize.height - height) {\n                        newY = pageSize.height - height;\n                    }\n\n                    if (x !== newX || y !== newY) {\n                        rectRef.current.setPosition({ x: newX, y: newY });\n                    }\n                }\n            }\n        },\n        [pageSize.height, pageSize.width]\n    );\n\n    /**\n     * 移動の確定\n     */\n    const handleDragEnd = useCallback(\n        (_: KonvaEventObject<Event>) => {\n            if (rectRef.current) {\n                // 現在位置を取得\n                const { x, y } = rectRef.current.getPosition();\n                const { width, height } = rectRef.current.getSize();\n                const newRectProps: ShapeBaseProps = {\n                    x,\n                    y,\n                    width,\n                    height,\n                };\n                // ドラッグ終了\n                setDragging(false);\n                // 更新\n                handleChange(newRectProps);\n            }\n        },\n        [handleChange]\n    );\n\n    /**\n     * サイズを最小値以下にできないように制限\n     */\n    const handleChangeBoundBox = useCallback((oldBox: Box, newBox: Box) => {\n        if (newBox.width < MinCanvasSize.width || newBox.height < MinCanvasSize.height) {\n            return oldBox;\n        }\n        return newBox;\n    }, []);\n\n    /**\n     * サイズ変更の確定\n     */\n    const handleTransformEnd = useCallback(() => {\n        if (rectRef.current) {\n            const rect = rectRef.current;\n            const { x: scaleX, y: scaleY } = rect.scale();\n            // reset scale\n            rect.scale({ x: 1, y: 1 });\n            const newRectProps: ShapeBaseProps = {\n                x: rect.x(),\n                y: rect.y(),\n                width: Math.max(MinCanvasSize.width, rect.width() * scaleX),\n                height: Math.max(MinCanvasSize.height, rect.height() * scaleY),\n            };\n\n            handleChange(newRectProps);\n        }\n    }, [handleChange]);\n\n    const handleEdit = useCallback(\n        (event: MouseEvent<HTMLButtonElement>) => {\n            // ボタンの位置\n            const { top, left } = event.currentTarget.getBoundingClientRect();\n\n            // 編集開始\n            const canvasProps: ShapeBaseProps = {\n                x: left,\n                y: top + 42,\n                width: props.width,\n                height: props.height,\n            };\n            editCanvas(canvasProps);\n        },\n        [editCanvas, props.height, props.width]\n    );\n\n    return (\n        <>\n            <Rect {...props} fill=\"white\" />\n            {image && <Image {...props} image={image} />}\n            <Rect\n                ref={rectRef}\n                stroke=\"black\"\n                strokeWidth={2}\n                draggable={draggable}\n                {...props}\n                onClick={onSelect}\n                onTap={onSelect}\n                onDragStart={handleDragStart}\n                onDragMove={handleDragMove}\n                onDragEnd={handleDragEnd}\n                onTransformEnd={handleTransformEnd}\n            />\n            <HeaderMenu\n                visible={visibleMenu}\n                mode={appMode}\n                {...props}\n                onEdit={handleEdit}\n                onCancel={closeCanvas}\n            />\n            <Transformer\n                ref={tfRef}\n                visible={visibleTransformer}\n                rotateEnabled={false}\n                boundBoxFunc={handleChangeBoundBox}\n            />\n        </>\n    );\n};\n\nexport default CanvasHandle;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Dispatch, SetStateAction, useCallback, useContext, useMemo } from 'react';\nimport { Layer, Rect } from 'react-konva';\nimport { AppSettingsContext } from '../../../providers/AppSettingsProvider';\nimport { PageProps, PageSize } from '../../../types/note';\nimport CanvasHandle from '../nodes/CanvasHandle';\n\ninterface Props extends Pick<PageProps, 'size' | 'structures'> {\n    draggable?: boolean;\n    onChange: Dispatch<SetStateAction<PageProps>>;\n}\n\nconst Frame: React.VFC<Props> = ({ size, structures, draggable = false, onChange }) => {\n    const { selectedCanvasIndex, onSelectCanvas } = useContext(AppSettingsContext);\n\n    const pageSize = useMemo(() => {\n        return PageSize[size];\n    }, [size]);\n\n    const handleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (event.target.attrs.type === 'background') {\n                onSelectCanvas(undefined);\n            }\n        },\n        [onSelectCanvas]\n    );\n\n    return (\n        <Layer>\n            {/* クリックが空振りしたときに選択解除する */}\n            <Rect\n                x={0}\n                y={0}\n                {...pageSize}\n                attrs={{ type: 'background' }}\n                onClick={handleClick}\n                onTap={handleClick}\n            />\n            {structures.map((structure, index) => (\n                <CanvasHandle\n                    key={`handle-${index}`}\n                    size={size}\n                    draggable={draggable}\n                    index={index}\n                    onChange={onChange}\n                    selected={index === selectedCanvasIndex}\n                    onSelect={() => onSelectCanvas(index)}\n                    {...structure}\n                />\n            ))}\n        </Layer>\n    );\n};\n\nexport default Frame;\n","import { useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { PageSize, PageSizeType } from '../../../types/note';\n\ninterface LineProps {\n    id: string;\n    points: number[];\n    stroke: string;\n    strokeWidth: number;\n    dash: [number, number];\n    listening: boolean;\n}\n\nconst defaultLineProps: LineProps = {\n    id: '',\n    points: [],\n    stroke: '#c9e1ff',\n    strokeWidth: 1,\n    dash: [5, 3],\n    listening: false,\n};\n\nconst GridSize = 50;\n\ninterface Props {\n    size: PageSizeType;\n}\n\nconst Grid: React.VFC<Props> = ({ size }) => {\n    const layerSize = useMemo(() => {\n        return PageSize[size];\n    }, [size]);\n\n    const horizontalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let y = 0; y <= layerSize.height; y += GridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Horizontal_${count}`,\n                points: [0, y, layerSize.width, y],\n            });\n            count++;\n        }\n        return lines;\n    }, [layerSize]);\n\n    const verticalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let x = 0; x <= layerSize.width; x += GridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Vertical_${count}`,\n                points: [x, 0, x, layerSize.height],\n            });\n            count++;\n        }\n        return lines;\n    }, [layerSize]);\n\n    return (\n        <Layer>\n            {/* horizontal */}\n            {horizontalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n            {/* vertical */}\n            {verticalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default Grid;\n","import Konva from 'konva';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport {\n    Dispatch,\n    SetStateAction,\n    useCallback,\n    useContext,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { Stage } from 'react-konva';\nimport { useContextBridge } from '../../hooks/useContextBridge';\nimport { AppSettingsContext } from '../../providers/AppSettingsProvider';\nimport { ConfigurationContext } from '../../providers/ConfigurationProvider';\nimport { NoteSettingsContext } from '../../providers/NoteSettingsProvider';\nimport { DOMSize } from '../../types/common';\nimport { PageProps, PageSize } from '../../types/note';\nimport { clone } from '../Canvas/util';\nimport Draw from './layer/Draw';\nimport Frame from './layer/Frame';\nimport Grid from './layer/Grid';\n\ninterface Props extends PageProps {\n    viewBox: DOMSize;\n    onChange: Dispatch<SetStateAction<PageProps>>;\n}\n\nconst Page: React.VFC<Props> = ({ viewBox, size, drawings, structures, onChange }) => {\n    const stageRef = useRef<Konva.Stage>(null);\n    const { mode: noteMode, settings } = useContext(NoteSettingsContext);\n    const { mode: appMode } = useContext(AppSettingsContext);\n\n    // Stage 以降で使用する Context を Bridge する\n    const ContextBridge = useContextBridge(\n        AppSettingsContext,\n        ConfigurationContext,\n        NoteSettingsContext\n    );\n\n    // 描画用\n    const isDrawing = useRef<boolean>();\n    const [points, setPoints] = useState<number[]>([]);\n\n    const pageSize = useMemo(() => {\n        return PageSize[size];\n    }, [size]);\n\n    const draggable = useMemo(() => {\n        return appMode === 'note' && noteMode === 'select';\n    }, [appMode, noteMode]);\n\n    /**\n     * ページサイズの範囲で表示領域を移動する\n     */\n    const handleDragMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            const { x, y } = event.target.attrs;\n            if (stageRef.current && typeof x === 'number' && typeof y === 'number') {\n                let [newX, newY] = [x, y];\n                let modified = false;\n\n                if (newX > 0) {\n                    newX = 0;\n                    modified = true;\n                } else if (Math.abs(newX) + viewBox.width > pageSize.width) {\n                    newX = viewBox.width - pageSize.width;\n                    modified = true;\n                }\n\n                if (newY > 0) {\n                    newY = 0;\n                    modified = true;\n                } else if (Math.abs(newY) + viewBox.height > pageSize.height) {\n                    newY = viewBox.height - pageSize.height;\n                    modified = true;\n                }\n\n                if (modified) {\n                    stageRef.current.setPosition({ x: newX, y: newY });\n                }\n            }\n        },\n        [pageSize.height, pageSize.width, viewBox.height, viewBox.width]\n    );\n\n    /**\n     * 描画の開始\n     */\n    const handlePointerDown = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (noteMode !== 'edit') {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (stageRef.current && point) {\n                isDrawing.current = true;\n\n                const { x, y } = stageRef.current.getPosition();\n                setPoints([point.x + Math.abs(x), point.y + Math.abs(y)]);\n            }\n        },\n        [noteMode]\n    );\n\n    /**\n     * ポインタの移動時に位置を取得\n     */\n    const handlePointerMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (noteMode !== 'edit') {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (stageRef.current && point) {\n                const { x, y } = stageRef.current.getPosition();\n                setPoints((state) => [...state, point.x + Math.abs(x), point.y + Math.abs(y)]);\n            }\n        },\n        [noteMode]\n    );\n\n    /**\n     * 描画の確定\n     */\n    const handlePointerUp = useCallback(\n        (_: KonvaEventObject<Event>) => {\n            if (noteMode !== 'edit') {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            isDrawing.current = false;\n            // 更新を確定\n            onChange((page) => {\n                const data = clone(page);\n                // 描画データを追加\n                data.drawings.push({\n                    ...settings,\n                    points,\n                });\n\n                return data;\n            });\n            // 現在の描画データをクリア\n            setPoints([]);\n        },\n        [noteMode, onChange, points, settings]\n    );\n\n    return (\n        <Stage\n            ref={stageRef}\n            width={viewBox.width}\n            height={viewBox.height}\n            draggable={draggable}\n            onDragMove={handleDragMove}\n            onPointerDown={handlePointerDown}\n            onPointerMove={handlePointerMove}\n            onPointerUp={handlePointerUp}\n        >\n            <ContextBridge>\n                <Grid size={size} />\n                <Frame\n                    size={size}\n                    structures={structures}\n                    draggable={draggable}\n                    onChange={onChange}\n                />\n                <Draw drawings={drawings} settings={settings} points={points} />\n            </ContextBridge>\n        </Stage>\n    );\n};\n\nexport default Page;\n","import { Box } from '@mui/material';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { AppSettingsContext } from '../../providers/AppSettingsProvider';\nimport { DOMSize } from '../../types/common';\nimport Page from './Page';\n\nconst Note: React.VFC = () => {\n    // キャンバスの親要素\n    const containerRef = useRef<HTMLDivElement>(null);\n    // 表示領域\n    const [viewBox, setViewBox] = useState<DOMSize>({ width: 0, height: 0 });\n    // ページデータ\n    const { page, onChange } = useContext(AppSettingsContext);\n\n    // 要素のリサイズを監視\n    useEffect(() => {\n        const observer = new ResizeObserver((entries) => {\n            const { width, height } = entries[0].contentRect;\n            setViewBox({\n                width,\n                height,\n            });\n        });\n\n        if (containerRef.current) {\n            observer.observe(containerRef.current);\n        }\n\n        return () => {\n            observer.disconnect();\n        };\n    }, []);\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{\n                width: 'auto',\n                height: '100%',\n                backgroundColor: '#ffffff',\n                overscrollBehavior: 'contain',\n                overflow: 'hidden',\n            }}\n        >\n            <Page viewBox={viewBox} {...page} onChange={onChange} />\n        </Box>\n    );\n};\n\nexport default Note;\n","import { Box } from '@mui/material';\nimport { useContext, useMemo } from 'react';\nimport { AppSettingsContext } from '../providers/AppSettingsProvider';\nimport { ConfigurationContext } from '../providers/ConfigurationProvider';\nimport { emptyStructure } from '../types/shape';\nimport Canvas from './Canvas';\nimport Note from './Note';\n\nconst MainContainer: React.VFC = () => {\n    const { page, selectedCanvasIndex, canvasProps, canvasRef } = useContext(AppSettingsContext);\n    const { tool } = useContext(ConfigurationContext);\n\n    const structure = useMemo(() => {\n        if (typeof selectedCanvasIndex === 'number') {\n            return page.structures[selectedCanvasIndex].data;\n        }\n    }, [page.structures, selectedCanvasIndex]);\n\n    return (\n        <>\n            <Box\n                sx={{\n                    boxSizing: 'border-box',\n                    ml: 1,\n                    mb: 1,\n                    flex: 1,\n                    border: (theme) => `1px solid ${theme.palette.divider}`,\n                    borderRadius: 1,\n                    overflow: 'hidden',\n                }}\n            >\n                <Note />\n            </Box>\n            {canvasProps && (\n                <Box\n                    sx={{\n                        position: 'absolute',\n                        top: canvasProps.y,\n                        left: canvasProps.x,\n                        width: canvasProps.width,\n                        height: canvasProps.height,\n                        backgroundColor: 'red',\n                    }}\n                >\n                    <Canvas ref={canvasRef} tool={tool} structure={structure ?? emptyStructure} />\n                </Box>\n            )}\n        </>\n    );\n};\n\nexport default MainContainer;\n","import { ArrowDownward, Delete, Edit, PanToolAlt, Texture } from '@mui/icons-material';\nimport { Stack, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { MouseEvent, ReactElement, useCallback, useContext } from 'react';\nimport { ConfigurationContext } from '../../providers/ConfigurationProvider';\nimport { CanvasTool, isCanvasTool } from '../../types/common';\n\ninterface Props {\n    tool: CanvasTool;\n    onChange: (tool: CanvasTool) => void;\n}\n\ninterface ButtonProps {\n    tool: CanvasTool;\n    icon: ReactElement;\n    label: string;\n}\n\nconst ToolboxButtons: Readonly<Record<CanvasTool, ButtonProps>> = {\n    select: {\n        tool: 'select',\n        icon: <PanToolAlt />,\n        label: '選択',\n    },\n    pen: {\n        tool: 'pen',\n        icon: <Edit />,\n        label: '梁要素の描画',\n    },\n    force: {\n        tool: 'force',\n        icon: <ArrowDownward />,\n        label: '集中荷重の追加',\n    },\n    trapezoid: {\n        tool: 'trapezoid',\n        icon: <Texture />,\n        label: '分布荷重の追加',\n    },\n    delete: {\n        tool: 'delete',\n        icon: <Delete />,\n        label: '要素の削除',\n    },\n};\n\nconst CanvasToolboxCore: React.VFC<Props> = ({ tool, onChange }) => {\n    /**\n     * ツールの変更\n     */\n    const handleChange = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isCanvasTool(newValue)) {\n                onChange(newValue);\n            }\n        },\n        [onChange]\n    );\n\n    return (\n        <Stack sx={{ width: 160 }} alignItems=\"flex-start\">\n            <Typography variant=\"caption\">Toolbox</Typography>\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={tool}\n                exclusive\n                fullWidth\n                onChange={handleChange}\n            >\n                {Object.entries(ToolboxButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n        </Stack>\n    );\n};\n\nconst CanvasToolbox: React.VFC = () => {\n    const { tool, setTool } = useContext(ConfigurationContext);\n    return <CanvasToolboxCore tool={tool} onChange={setTool} />;\n};\n\nexport default CanvasToolbox;\n","import { AutoFixNormal, Edit, PanToolAlt } from '@mui/icons-material';\nimport {\n    Slider,\n    Stack,\n    TextField,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography,\n} from '@mui/material';\nimport {\n    ChangeEvent,\n    Dispatch,\n    MouseEvent,\n    ReactElement,\n    SetStateAction,\n    useCallback,\n    useContext,\n} from 'react';\nimport { NoteSettingsContext } from '../../providers/NoteSettingsProvider';\nimport { DrawSettings, isNoteMode, NoteMode } from '../../types/note';\n\ninterface Props {\n    mode: NoteMode;\n    settings: DrawSettings;\n    onChangeMode: Dispatch<SetStateAction<NoteMode>>;\n    onChangeDrawSettings: Dispatch<SetStateAction<DrawSettings>>;\n}\n\nconst DrawModes = ['pen', 'eraser'] as const;\ntype DrawMode = typeof DrawModes[number];\nconst isDrawMode = (item: unknown): item is DrawMode => {\n    if (typeof item === 'string') {\n        return DrawModes.some((mode) => mode === item);\n    }\n    return false;\n};\n\ninterface ButtonProps {\n    mode: NoteMode | DrawMode;\n    icon: ReactElement;\n    label: string;\n}\n\nconst NoteModeButtons: Readonly<Record<NoteMode, ButtonProps>> = {\n    select: {\n        mode: 'select',\n        icon: <PanToolAlt />,\n        label: '選択',\n    },\n    edit: {\n        mode: 'edit',\n        icon: <Edit />,\n        label: '描画',\n    },\n};\n\nconst DrawModeButtons: Readonly<Record<DrawMode, ButtonProps>> = {\n    pen: {\n        mode: 'pen',\n        icon: <Edit />,\n        label: 'ペンツール',\n    },\n    eraser: {\n        mode: 'eraser',\n        icon: <AutoFixNormal />,\n        label: '消しゴム',\n    },\n};\n\nconst MinStrokeWidth = 4;\nconst MaxStrokeWidth = 20;\nconst StrokeWidthStep = 4;\n\nconst NoteToolboxCore: React.VFC<Props> = ({\n    mode,\n    settings,\n    onChangeMode,\n    onChangeDrawSettings,\n}) => {\n    /**\n     * モードの変更\n     */\n    const handleChangeMode = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isNoteMode(newValue)) {\n                onChangeMode(newValue);\n            }\n        },\n        [onChangeMode]\n    );\n\n    /**\n     * 描画ツールの選択\n     */\n    const handleChangeTool = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isDrawMode(newValue)) {\n                onChangeDrawSettings((state) => ({\n                    ...state,\n                    eraser: newValue === 'eraser',\n                }));\n            }\n        },\n        [onChangeDrawSettings]\n    );\n\n    const handleChangeStrokeWidth = useCallback(\n        (_: Event, value: number | number[]) => {\n            if (typeof value === 'number') {\n                onChangeDrawSettings((state) => ({\n                    ...state,\n                    strokeWidth: value,\n                }));\n            }\n        },\n        [onChangeDrawSettings]\n    );\n\n    const handleChangeStroke = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            if (event.target.checkValidity()) {\n                const { value } = event.target;\n                onChangeDrawSettings((state) => ({\n                    ...state,\n                    stroke: value,\n                }));\n            }\n        },\n        [onChangeDrawSettings]\n    );\n\n    return (\n        <Stack sx={{ width: 160 }} alignItems=\"flex-start\">\n            <Typography variant=\"caption\">Toolbox</Typography>\n            {/* 選択 / 編集の切り替え */}\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={mode}\n                exclusive\n                fullWidth\n                onChange={handleChangeMode}\n            >\n                {Object.entries(NoteModeButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n            <Typography variant=\"caption\" sx={{ mt: 1 }}>\n                描画ツール\n            </Typography>\n            {/* eraser */}\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={settings.eraser ? 'eraser' : 'pen'}\n                exclusive\n                fullWidth\n                disabled={mode === 'select'}\n                onChange={handleChangeTool}\n            >\n                {Object.entries(DrawModeButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n            {/* strokeWidth */}\n            <Typography variant=\"caption\" sx={{ mt: 1 }}>\n                太さ\n            </Typography>\n            <Slider\n                sx={{ ml: 1, mb: 2, boxSizing: 'border-box', width: 140 }}\n                value={settings.strokeWidth}\n                min={MinStrokeWidth}\n                max={MaxStrokeWidth}\n                step={StrokeWidthStep}\n                marks\n                valueLabelDisplay=\"auto\"\n                disabled={mode === 'select'}\n                onChange={handleChangeStrokeWidth}\n            />\n            {/* stroke */}\n            <TextField\n                type=\"color\"\n                label=\"ペンの色\"\n                value={settings.stroke}\n                disabled={mode === 'select' || settings.eraser}\n                fullWidth\n                margin=\"dense\"\n                size=\"small\"\n                onChange={handleChangeStroke}\n            />\n        </Stack>\n    );\n};\n\nconst NoteToolbox: React.VFC = () => {\n    const props = useContext(NoteSettingsContext);\n    return <NoteToolboxCore {...props} />;\n};\n\nexport default NoteToolbox;\n","import { useContext } from 'react';\nimport { AppSettingsContext } from '../../providers/AppSettingsProvider';\nimport CanvasToolbox from './CanvasToolbox';\nimport NoteToolbox from './NoteToolbox';\n\nconst Toolbox: React.VFC = () => {\n    const { mode } = useContext(AppSettingsContext);\n    if (mode === 'canvas') {\n        return <CanvasToolbox />;\n    }\n    return <NoteToolbox />;\n};\n\nexport default Toolbox;\n","import { Box } from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport { DOMSize } from '../types/common';\nimport Header from './Header';\nimport MainContainer from './MainContainer';\nimport Toolbox from './Toolbox';\n\nconst Layout: React.VFC = () => {\n    const [windowRect, setWindowRect] = useState<DOMSize>({ width: 0, height: 0 });\n\n    const fitWindowSize = useCallback(() => {\n        const { innerHeight, innerWidth } = window;\n        setWindowRect({\n            height: innerHeight,\n            width: innerWidth,\n        });\n    }, []);\n\n    useEffect(() => {\n        fitWindowSize();\n        window.addEventListener('resize', fitWindowSize);\n\n        return () => {\n            window.removeEventListener('resize', fitWindowSize);\n        };\n    }, [fitWindowSize]);\n\n    return (\n        <Box sx={{ ...windowRect, overflow: 'hidden' }}>\n            <Header />\n            <Box\n                sx={{\n                    boxSizing: 'border-box',\n                    width: 'auto',\n                    height: 'calc(100% - 48px)',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    flexWrap: 'nowrap',\n                    alignItems: 'stretch',\n                    pt: 1,\n                    px: 1,\n                }}\n            >\n                <Toolbox />\n                <MainContainer />\n            </Box>\n        </Box>\n    );\n};\n\nexport default Layout;\n","import { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport React from 'react';\nimport AppSettingsProvider from '../providers/AppSettingsProvider';\nimport ConfigurationProvider from '../providers/ConfigurationProvider';\nimport NoteSettingsProvider from '../providers/NoteSettingsProvider';\nimport Layout from './Layout';\n\nconst theme = createTheme();\n\nconst App: React.VFC = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <AppSettingsProvider>\n                <ConfigurationProvider>\n                    <NoteSettingsProvider>\n                        <CssBaseline />\n                        <Layout />\n                    </NoteSettingsProvider>\n                </ConfigurationProvider>\n            </AppSettingsProvider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}