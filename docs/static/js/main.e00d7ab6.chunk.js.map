{"version":3,"sources":["providers/ConfigurationProvider.tsx","types/shape.ts","components/Canvas/util/common.ts","components/Canvas/util/structure.ts","components/Canvas/hook/draw.ts","components/Canvas/layer/DrawLayer.tsx","components/Canvas/provider/StructureProvider.tsx","components/Canvas/layer/GridLayer.tsx","components/Canvas/shape/Guide.tsx","components/Canvas/layer/GuideLayer.tsx","components/Canvas/shape/Beam.tsx","components/Canvas/shape/Force.tsx","components/Canvas/util/vector.ts","components/Canvas/shape/Node.tsx","components/Canvas/layer/ShapeLayer.tsx","components/Canvas/core.tsx","components/Canvas/index.tsx","components/CanvasContainer.tsx","components/Version.tsx","components/Header.tsx","types/common.ts","components/Toolbox/index.tsx","components/Layout.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ConfigurationContext","createContext","undefined","ConfigurationProvider","children","useState","tool","setTool","Provider","value","emptyStructure","unit","force","length","nodes","beams","forces","trapezoids","clone","data","JSON","parse","stringify","round","figure","n","result","Math","snapping","snapSize","i","snap","x","y","createNode","id","uuid","useDraw","disabled","structure","setStructure","points","setPoints","isDrawing","useRef","handlePointerDown","useCallback","event","point","target","getStage","getPointerPosition","current","handlePointerMove","state","handlePointerUp","start","slice","end","edgeI","edgeJ","nodeI","n1","find","node","push","nodeJ","n2","beam","name","createBeam","useEffect","onPointerDown","onPointerMove","onPointerUp","DrawLayer","strokeWidth","stroke","StructureContext","StructureProvider","size","gridSize","useMemo","map","forEach","item","items","average","reduce","p","c","forceRatio","addForce","params","createForce","deleteForce","index","findIndex","splice","deleteBeam","exists","some","j","filter","defaultLineProps","dash","listening","GridLayer","useContext","horizontalLines","lines","count","height","width","verticalLines","props","defaultGuideProps","fill","defaultGuideArrowProps","pointerLength","pointerWidth","pointerAtBeginning","GuideLine","v1Ref","Vector","v2Ref","distance","setDistance","rotation","setRotation","basis","setBasis","dist","angle","subtract","normalize","angleDeg","text","fontSize","align","wrap","ellipsis","GuideInterval","GuideLayer","guide","maxX","Number","MIN_SAFE_INTEGER","minX","MAX_SAFE_INTEGER","guidesX","maxY","minY","guidesY","pointsX","Set","pointsY","Object","values","has","add","array","Array","from","sort","a","b","prev","key","localX","max","GlobalVerticalGuidePositionX","GlobalHorizontalGuidePositionY","Guide","Beam","viRef","vjRef","handleClick","vp","vi","vj","beamLength","distanceI","createForceParams","cancelBubble","onClick","onTap","Force","tail","v1","v2","alpha","dir","mv","multiplyScalar","lerp","vertical","verticalNormalizeVector","head","Node","draggable","onChange","onCommit","isDragging","setIsDragging","pointRef","timerRef","redraw","handleDragStart","handleDragMove","handleDragEnd","clearInterval","timer","setInterval","radius","onDragStart","onDragMove","onDragEnd","_useStrictMode","ConnectedNode","Boolean","handleChange","px","py","handleCommit","targetId","newId","ShapeLayer","entries","CanvasCore","readonly","handlers","Canvas","setSize","containerRef","observer","ResizeObserver","contentRect","observe","disconnect","Box","ref","sx","backgroundColor","overscrollBehavior","CanvasContainer","boxSizing","ml","mb","flex","border","theme","palette","divider","borderRadius","overflow","hash","process","substring","date","version","Version","Typography","variant","Header","AppBar","position","Toolbar","component","color","CanvasTools","ToolboxButtons","select","icon","PanToolAlt","label","pen","Edit","ArrowDownward","trapezoid","Texture","delete","Delete","ToolboxCore","_","newValue","Stack","alignItems","ToggleButtonGroup","orientation","exclusive","fullWidth","ToggleButton","justifyContent","Toolbox","Layout","windowRect","setWindowRect","fitWindowSize","window","innerHeight","innerWidth","addEventListener","removeEventListener","display","flexDirection","flexWrap","pt","createTheme","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e00d7ab6.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\nimport { CanvasTool } from '../types/common';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface IConfigurationContext {\n    tool: CanvasTool;\n    setTool: (tool: CanvasTool) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const ConfigurationContext = createContext<IConfigurationContext>(undefined!);\n\nconst ConfigurationProvider: React.VFC<Props> = ({ children }) => {\n    const [tool, setTool] = useState<CanvasTool>('select');\n\n    return (\n        <ConfigurationContext.Provider value={{ tool, setTool }}>\n            {children}\n        </ConfigurationContext.Provider>\n    );\n};\n\nexport default ConfigurationProvider;\n","/**\n * 単位: 力\n */\nexport const ForceUnitValues = ['N', 'kN'] as const;\n\n/**\n * 単位: 長さ\n */\nexport const LengthUnitValues = ['mm', 'cm', 'm'] as const;\n\nexport type ForceUnitType = typeof ForceUnitValues[number];\nexport type LengthUnitType = typeof LengthUnitValues[number];\n\n/**\n * 単位\n */\nexport interface Unit {\n    force: ForceUnitType;\n    length: LengthUnitType;\n}\n\nexport interface Node {\n    id: string;\n    x: number;\n    y: number;\n}\n\nexport interface Beam {\n    id: string;\n    name: string;\n    nodeI: string;\n    nodeJ: string;\n}\n\nexport interface Force {\n    id: string;\n    name: string;\n    beam: string;\n    force: number;\n    // i端からの距離 (0 〜 1)\n    distanceI: number;\n}\n\nexport interface Trapezoid {\n    id: string;\n    name: string;\n    beam: string;\n    forceI: number;\n    forceJ: number;\n    // i端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceI: number;\n    // j端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceJ: number;\n}\n\nexport interface Structure {\n    unit: Unit;\n    nodes: Node[];\n    beams: Beam[];\n    forces: Force[];\n    trapezoids: Trapezoid[];\n}\n\nexport type StructureFieldType = keyof Omit<Structure, 'unit'>;\n\nexport const defaultUnit: Unit = {\n    force: 'kN',\n    length: 'm',\n};\n\nexport const emptyStructure: Structure = {\n    unit: defaultUnit,\n    nodes: [],\n    beams: [],\n    forces: [],\n    trapezoids: [],\n};\n","export const clone = <T>(data: T): T => {\n    return JSON.parse(JSON.stringify(data)) as T;\n};\n\nexport const round = (value: number, figure = 3): number => {\n    const n = 10 ** figure;\n    const result = Math.round(value * n) / n;\n    return result;\n};\n\nconst snapping = (value: number, snapSize = 25): number => {\n    const n = value / snapSize;\n    const i = Math.round(n) * snapSize;\n    return i;\n};\n\nexport const snap = ([x, y]: [number, number], snapSize = 25): [number, number] => {\n    return [snapping(x, snapSize), snapping(y, snapSize)];\n};\n","import { v4 as uuid } from 'uuid';\nimport { Beam, Force, Node, Structure } from '../../../types/shape';\nimport { round } from './common';\nimport { Vector } from './vector';\n\n/**\n * 節点の作成\n * @param x\n * @param y\n * @returns\n */\nexport const createNode = (x: number, y: number): Node => {\n    return {\n        id: uuid(),\n        x,\n        y,\n    };\n};\n\nexport const createBeam = (name: string, nodeI: string, nodeJ: string): Beam => {\n    return {\n        id: uuid(),\n        name,\n        nodeI,\n        nodeJ,\n    };\n};\n\ntype CreateForceParams = Omit<Force, 'id'>;\n\nexport const createForce = (params: CreateForceParams): Force => {\n    return {\n        ...params,\n        id: uuid(),\n    };\n};\n\nexport const createForceParams = (\n    beam: string,\n    vi: Vector,\n    vj: Vector,\n    vp: Vector\n): Omit<Force, 'id' | 'name'> => {\n    const beamLength = vi.distance(vj);\n    // クリック位置までの距離\n    const distance = vi.distance(vp);\n\n    return {\n        beam,\n        force: 10, // TODO: どうやって指定する？\n        distanceI: round(distance / beamLength),\n    };\n};\n\nexport const replaceNode = (structure: Structure, targetId: string, newId: string): Structure => {\n    structure.beams.forEach((beam) => {\n        if (beam.nodeI === targetId) {\n            beam.nodeI = newId;\n        }\n        if (beam.nodeJ === targetId) {\n            beam.nodeJ = newId;\n        }\n    });\n    return structure;\n};\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Dispatch, SetStateAction, useCallback, useEffect, useRef, useState } from 'react';\nimport { Structure } from '../../../types/shape';\nimport { clone, createBeam, createNode, snap } from '../util';\n\ninterface StageEventHandlers {\n    onPointerDown: (event: KonvaEventObject<PointerEvent>) => void;\n    onPointerMove: (event: KonvaEventObject<PointerEvent>) => void;\n    onPointerUp: (event: KonvaEventObject<PointerEvent>) => void;\n}\n\ninterface HookProps {\n    disabled?: boolean;\n    snapSize?: number;\n    structure: Structure;\n    setStructure?: Dispatch<SetStateAction<Structure>>;\n}\n\ninterface HookResponse extends StageEventHandlers {\n    points: number[];\n}\n\nexport const useDraw = ({\n    disabled = false,\n    snapSize = 25,\n    structure,\n    setStructure,\n}: HookProps): HookResponse => {\n    const [points, setPoints] = useState<number[]>([]);\n    const isDrawing = useRef(false);\n\n    const handlePointerDown = useCallback(\n        (event: KonvaEventObject<PointerEvent>) => {\n            if (disabled) {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                isDrawing.current = true;\n                setPoints([point.x, point.y]);\n            }\n        },\n        [disabled]\n    );\n\n    const handlePointerMove = useCallback(\n        (event: KonvaEventObject<PointerEvent>) => {\n            if (disabled) {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                isDrawing.current = true;\n                setPoints((state) => [...state, point.x, point.y]);\n            }\n        },\n        [disabled]\n    );\n\n    const handlePointerUp = useCallback(() => {\n        if (disabled) {\n            return;\n        }\n\n        isDrawing.current = false;\n\n        if (setStructure && points.length >= 4) {\n            const data = clone(structure);\n            // 開始点\n            const start = points.slice(0, 2);\n            // 終了点\n            const end = points.slice(-2);\n\n            // スナップさせる\n            const edgeI = snap([start[0], start[1]], snapSize);\n            const edgeJ = snap([end[0], end[1]], snapSize);\n\n            const nodeI = createNode(...edgeI);\n            // 同一座標の節点が存在するか？\n            const n1 = data.nodes.find((node) => node.x === nodeI.x && node.y === nodeI.y);\n            if (n1) {\n                // 既存の節点を使用する\n                nodeI.id = n1.id;\n            } else {\n                // 新規追加\n                data.nodes.push(nodeI);\n            }\n\n            const nodeJ = createNode(...edgeJ);\n            const n2 = data.nodes.find((node) => node.x === nodeJ.x && node.y === nodeJ.y);\n            if (n2) {\n                // 既存の節点を使用する\n                nodeJ.id = n2.id;\n            } else {\n                // 新規追加\n                data.nodes.push(nodeJ);\n            }\n\n            const name = `Beam_${data.beams.length + 1}`;\n            const beam = createBeam(name, nodeI.id, nodeJ.id);\n            data.beams.push(beam);\n\n            setStructure(data);\n            setPoints([]);\n        }\n    }, [disabled, points, setStructure, snapSize, structure]);\n\n    useEffect(() => {\n        if (disabled) {\n            // 無効になったら描画中の線を消去\n            setPoints([]);\n        }\n    }, [disabled]);\n\n    return {\n        points,\n        onPointerDown: handlePointerDown,\n        onPointerMove: handlePointerMove,\n        onPointerUp: handlePointerUp,\n    };\n};\n","import { Layer, Line } from 'react-konva';\n\ninterface Props {\n    points: number[];\n}\n\nconst DrawLayer: React.VFC<Props> = ({ points }) => {\n    return (\n        <Layer>\n            <Line points={points} strokeWidth={3} stroke=\"blue\" />\n        </Layer>\n    );\n};\n\nexport default DrawLayer;\n","import { createContext, Dispatch, SetStateAction, useCallback, useMemo } from 'react';\nimport { CanvasTool, DOMSize } from '../../../types/common';\nimport { Force, Node, Structure } from '../../../types/shape';\nimport { BeamProps, ForceProps } from '../types';\nimport { clone, createForce } from '../util';\n\ninterface Props {\n    children: React.ReactNode;\n    size: DOMSize;\n    gridSize?: number;\n    snapSize?: number;\n    tool?: CanvasTool;\n    structure: Structure;\n    setStructure?: Dispatch<SetStateAction<Structure>>;\n}\n\ntype AddForceFunction = (params: Omit<Force, 'id' | 'name'>) => void;\n\ninterface IStructureContext {\n    // 選択されているツール\n    tool: CanvasTool;\n    // キャンバスのサイズ\n    size: DOMSize;\n    // グリッドの幅\n    gridSize: number;\n    // スナップする単位\n    snapSize: number;\n    // 単位変換された構造データ\n    structure: Structure;\n    // Node の Map\n    nodes: Record<string, Node>;\n    // Beam の Map\n    beams: Record<string, BeamProps>;\n    // force の Map\n    forces: Record<string, ForceProps>;\n    // 集中荷重の追加\n    addForce: AddForceFunction;\n    // 集中荷重の削除\n    deleteForce: (id: string) => void;\n    // 梁要素の削除\n    deleteBeam: (id: string) => void;\n    // 構造データの更新\n    setStructure?: Dispatch<SetStateAction<Structure>>;\n}\n\n// Context | React TypeScript Cheatsheets\n// https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/context/\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const StructureContext = createContext<IStructureContext>(undefined!);\n\nconst StructureProvider: React.VFC<Props> = ({\n    children,\n    tool = 'select',\n    size,\n    gridSize = 25,\n    snapSize = 25,\n    structure,\n    setStructure,\n}) => {\n    const nodes = useMemo(() => {\n        const map: Record<string, Node> = {};\n\n        structure.nodes.forEach((node) => {\n            map[node.id] = node;\n        });\n\n        return map;\n    }, [structure.nodes]);\n\n    const beams = useMemo(() => {\n        const map: Record<string, BeamProps> = {};\n\n        structure.beams.forEach(({ nodeI, nodeJ, ...beam }) => {\n            const item: BeamProps = {\n                ...beam,\n                nodeI: nodes[nodeI],\n                nodeJ: nodes[nodeJ],\n            };\n            map[beam.id] = item;\n        });\n\n        return map;\n    }, [nodes, structure.beams]);\n\n    const forces = useMemo(() => {\n        const { forces: items } = structure;\n        const map: Record<string, ForceProps> = {};\n\n        if (items.length > 0) {\n            const total = items.map((item) => item.force).reduce((p, c) => p + c);\n            const average = total / items.length;\n            items.forEach(({ beam, force: value, ...force }) => {\n                const forceRatio = value / average;\n                map[force.id] = {\n                    ...force,\n                    force: value,\n                    forceRatio,\n                    beam: beams[beam],\n                };\n            });\n        }\n\n        return map;\n    }, [beams, structure]);\n\n    const addForce = useCallback(\n        (params: Omit<Force, 'id' | 'name'>) => {\n            const data = clone(structure);\n            const name = `Force_${data.forces.length + 1}`;\n            const force = createForce({ name, ...params });\n            data.forces.push(force);\n            setStructure && setStructure(data);\n        },\n        [setStructure, structure]\n    );\n\n    const deleteForce = useCallback(\n        (id: string) => {\n            const index = structure.forces.findIndex(({ id: itemId }) => itemId === id);\n            if (index >= 0) {\n                const data = clone(structure);\n                data.forces.splice(index, 1);\n                setStructure && setStructure(data);\n            }\n        },\n        [setStructure, structure]\n    );\n\n    const deleteBeam = useCallback(\n        (id: string) => {\n            const index = structure.beams.findIndex(({ id: itemId }) => itemId === id);\n            if (index >= 0) {\n                const { nodeI, nodeJ } = structure.beams[index];\n                // 梁要素を削除\n                const data = clone(structure);\n                data.beams.splice(index, 1);\n\n                // beam の両端の節点について、該当 beam 以外で使用していなければ削除\n                [nodeI, nodeJ].forEach((node) => {\n                    // 他 beam で使用されていないかチェック\n                    const exists = data.beams.some(({ nodeI: i, nodeJ: j }) => {\n                        return node === i || node === j;\n                    });\n\n                    if (!exists) {\n                        // 該当 node を削除\n                        const i = data.nodes.findIndex(({ id: nodeId }) => nodeId === node);\n                        if (i >= 0) {\n                            data.nodes.splice(i, 1);\n                        }\n                    }\n                });\n\n                // beam に紐づく集中荷重を削除\n                const forces = data.forces.filter(({ beam }) => beam !== id);\n                data.forces = forces;\n                // beam に紐づく分布荷重を削除\n                const trapezoids = data.trapezoids.filter(({ beam }) => beam !== id);\n                data.trapezoids = trapezoids;\n\n                setStructure && setStructure(data);\n            }\n        },\n        [setStructure, structure]\n    );\n\n    return (\n        <StructureContext.Provider\n            value={{\n                tool,\n                size,\n                gridSize,\n                snapSize,\n                structure,\n                nodes,\n                beams,\n                forces,\n                addForce,\n                deleteForce,\n                deleteBeam,\n                setStructure,\n            }}\n        >\n            {children}\n        </StructureContext.Provider>\n    );\n};\n\nexport default StructureProvider;\n","import { useContext, useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { StructureContext } from '../provider/StructureProvider';\n\ninterface LineProps {\n    id: string;\n    points: number[];\n    stroke: string;\n    strokeWidth: number;\n    dash: [number, number];\n    listening: boolean;\n}\n\nconst defaultLineProps: LineProps = {\n    id: '',\n    points: [],\n    stroke: '#c9e1ff',\n    strokeWidth: 1,\n    dash: [5, 3],\n    listening: false,\n};\n\nconst GridLayer: React.VFC = () => {\n    // キャンバスサイズ, グリッドの幅\n    const { size, gridSize } = useContext(StructureContext);\n\n    const horizontalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let y = 0; y <= size.height; y += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Horizontal_${count}`,\n                points: [0, y, size.width, y],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    const verticalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let x = 0; x <= size.width; x += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Vertical_${count}`,\n                points: [x, 0, x, size.height],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    return (\n        <Layer listening={false}>\n            {/* horizontal */}\n            {horizontalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n            {/* vertical */}\n            {verticalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GridLayer;\n","import { useEffect, useRef, useState } from 'react';\nimport { Arrow, Group, Line, Text } from 'react-konva';\nimport { Vector } from '../util';\n\ninterface Props {\n    start: [number, number];\n    end: [number, number];\n    visible?: boolean;\n}\n\ninterface GuideProps {\n    fill: string;\n    stroke: string;\n    strokeWidth: number;\n    listening: boolean;\n}\n\ninterface GuideArrowProps extends GuideProps {\n    pointerLength: number;\n    pointerWidth: number;\n    pointerAtBeginning: boolean;\n}\n\nconst defaultGuideProps: GuideProps = {\n    fill: 'silver',\n    stroke: 'silver',\n    strokeWidth: 1,\n    listening: false,\n};\n\nconst defaultGuideArrowProps: GuideArrowProps = {\n    pointerLength: 6,\n    pointerWidth: 6,\n    pointerAtBeginning: true,\n    ...defaultGuideProps,\n};\n\nconst GuideLine: React.VFC<Props> = ({ start, end }) => {\n    const v1Ref = useRef<Vector>(new Vector(0, 0));\n    const v2Ref = useRef<Vector>(new Vector(0, 0));\n\n    const [distance, setDistance] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    const [basis, setBasis] = useState<[number, number]>([0, 0]);\n\n    useEffect(() => {\n        v1Ref.current.x = start[0];\n        v1Ref.current.y = start[1];\n        v2Ref.current.x = end[0];\n        v2Ref.current.y = end[1];\n\n        const dist = v1Ref.current.distance(v2Ref.current);\n        const dir = v2Ref.current.clone().subtract(v1Ref.current).normalize();\n        const angle = dir.angleDeg();\n\n        setDistance(dist);\n        setRotation(angle === 90 ? -90 : angle);\n        setBasis(angle === 90 ? end : start);\n    }, [end, start]);\n\n    return (\n        <Group x={basis[0]} y={basis[1]} rotation={rotation}>\n            {/* 左端 */}\n            <Line points={[0, 0, 0, 10]} {...defaultGuideProps} />\n            {/* 矢印部分 */}\n            <Arrow points={[0, 5, distance, 5]} {...defaultGuideArrowProps} />\n            {/* 右端 */}\n            <Line points={[distance, 0, distance, 10]} {...defaultGuideProps} />\n            {/* ラベル */}\n            <Text\n                x={0}\n                y={-8}\n                text={`${distance}px`}\n                fontSize={12}\n                fill=\"silver\"\n                width={distance}\n                align=\"center\"\n                listening={false}\n                wrap=\"none\"\n                ellipsis\n            />\n        </Group>\n    );\n};\n\nexport default GuideLine;\n","import { useContext, useMemo } from 'react';\nimport { Layer } from 'react-konva';\nimport { StructureContext } from '../provider/StructureProvider';\nimport GuideLine from '../shape/Guide';\n\ninterface GuideLineProps {\n    key: string;\n    start: [number, number];\n    end: [number, number];\n}\n\ninterface GuidePoint {\n    minX: number;\n    maxX: number;\n    guidesX: GuideLineProps[];\n    minY: number;\n    maxY: number;\n    guidesY: GuideLineProps[];\n}\n\nconst GuideInterval = 25;\n\nconst GuideLayer: React.VFC = () => {\n    const { nodes } = useContext(StructureContext);\n\n    const { minX, maxX, guidesX, minY, maxY, guidesY }: GuidePoint = useMemo(() => {\n        const guide: GuidePoint = {\n            maxX: Number.MIN_SAFE_INTEGER,\n            minX: Number.MAX_SAFE_INTEGER,\n            guidesX: [],\n            maxY: Number.MIN_SAFE_INTEGER,\n            minY: Number.MAX_SAFE_INTEGER,\n            guidesY: [],\n        };\n\n        const pointsX = new Set<number>();\n        const pointsY = new Set<number>();\n        Object.values(nodes).forEach(({ x, y }) => {\n            if (guide.maxX < x) {\n                guide.maxX = x;\n            }\n            if (guide.minX > x) {\n                guide.minX = x;\n            }\n            if (!pointsX.has(x)) {\n                pointsX.add(x);\n            }\n            if (guide.maxY < y) {\n                guide.maxY = y;\n            }\n            if (guide.minY > y) {\n                guide.minY = y;\n            }\n            if (!pointsY.has(y)) {\n                pointsY.add(y);\n            }\n        });\n\n        // ガイドの生成\n        if (pointsX.size > 1) {\n            const array = Array.from(pointsX).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideX_${i}`,\n                    start: [prev, guide.maxY + GuideInterval * 4],\n                    end: [current, guide.maxY + GuideInterval * 4],\n                };\n                prev = current;\n                guide.guidesX.push(props);\n            }\n        }\n        if (pointsY.size > 1) {\n            const array = Array.from(pointsY).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            const localX = Math.max(guide.minX - GuideInterval * 4, GuideInterval * 2);\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideY_${i}`,\n                    start: [localX, prev],\n                    end: [localX, current],\n                };\n                prev = current;\n                guide.guidesY.push(props);\n            }\n        }\n\n        return guide;\n    }, [nodes]);\n\n    const GlobalVerticalGuidePositionX = useMemo(() => {\n        if (minX !== Number.MAX_SAFE_INTEGER) {\n            return Math.max(GuideInterval, minX - GuideInterval * 5);\n        }\n        return 0;\n    }, [minX]);\n\n    const GlobalHorizontalGuidePositionY = useMemo(() => {\n        if (maxY !== Number.MIN_SAFE_INTEGER) {\n            return maxY + GuideInterval * 5;\n        }\n        return 0;\n    }, [maxY]);\n\n    return (\n        <Layer listening={false}>\n            {/* Horizontal */}\n            {minX !== Number.MAX_SAFE_INTEGER && maxX !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[minX, GlobalHorizontalGuidePositionY]}\n                    end={[maxX, GlobalHorizontalGuidePositionY]}\n                />\n            )}\n            {guidesX.map((props) => (\n                <GuideLine {...props} />\n            ))}\n            {/* Vertical */}\n            {minY !== Number.MAX_SAFE_INTEGER && maxY !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[GlobalVerticalGuidePositionX, minY]}\n                    end={[GlobalVerticalGuidePositionX, maxY]}\n                />\n            )}\n            {guidesY.map((props) => (\n                <GuideLine {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GuideLayer;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { Line } from 'react-konva';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { BeamProps } from '../types';\nimport { createForceParams, Vector } from '../util';\n\ntype Props = BeamProps;\n\nconst Beam: React.VFC<Props> = ({ id: beam, nodeI, nodeJ }) => {\n    const { tool, addForce, deleteBeam } = useContext(StructureContext);\n    const [points, setPoints] = useState<number[]>([]);\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    /**\n     * beam をクリック\n     * - 該当位置に集中荷重を追加する\n     * - 該当要素を削除\n     */\n    const handleClick = useCallback(\n        (event: KonvaEventObject<MouseEvent>) => {\n            // 集中荷重の追加モードの場合\n            if (tool === 'force') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                if (point) {\n                    const vp = new Vector(point.x, point.y);\n                    const force = createForceParams(beam, viRef.current, vjRef.current, vp);\n                    // 追加\n                    addForce(force);\n                    // イベントの伝播を止める\n                    event.cancelBubble = true;\n                }\n            } else if (tool === 'delete') {\n                // 梁要素の削除\n                deleteBeam(beam);\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            }\n        },\n        [addForce, beam, deleteBeam, tool]\n    );\n\n    useEffect(() => {\n        setPoints([nodeI.x, nodeI.y, nodeJ.x, nodeJ.y]);\n        viRef.current.x = nodeI.x;\n        viRef.current.y = nodeI.y;\n        vjRef.current.x = nodeJ.x;\n        vjRef.current.y = nodeJ.y;\n    }, [nodeI.x, nodeI.y, nodeJ.x, nodeJ.y]);\n\n    return (\n        <Line\n            points={points}\n            stroke=\"black\"\n            strokeWidth={3}\n            onClick={handleClick}\n            onTap={handleClick}\n        />\n    );\n};\n\nexport default Beam;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useCallback, useContext, useMemo } from 'react';\nimport { Arrow } from 'react-konva';\nimport Vector from 'victor';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { ForceProps } from '../types';\nimport { lerp, verticalNormalizeVector } from '../util';\n\ntype Props = ForceProps;\n\nconst BaseLength = 30;\n\nconst Force: React.VFC<Props> = ({ id: force, beam, distanceI, forceRatio }) => {\n    const { deleteForce, tool } = useContext(StructureContext);\n\n    const points = useMemo(() => {\n        const { nodeI, nodeJ } = beam;\n\n        // i端、j端\n        const vi = new Vector(nodeI.x, nodeI.y);\n        const vj = new Vector(nodeJ.x, nodeJ.y);\n        // 矢印のお尻\n        const tail = lerp(vi, vj, distanceI);\n        // 梁に直交する単位ベクトル\n        const vertical = verticalNormalizeVector(vi, vj);\n        // 矢印の頭\n        const head = tail.clone().add(vertical.multiplyScalar(BaseLength * forceRatio));\n\n        return [head.x, head.y, tail.x, tail.y];\n    }, [beam, distanceI, forceRatio]);\n\n    const handleClick = useCallback(\n        (event: KonvaEventObject<MouseEvent>) => {\n            if (tool === 'delete') {\n                deleteForce(force);\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            }\n        },\n        [deleteForce, force, tool]\n    );\n\n    return (\n        <Arrow\n            points={points}\n            pointerLength={6}\n            pointerWidth={6}\n            fill=\"orange\"\n            stroke=\"orange\"\n            strokeWidth={2}\n            onClick={handleClick}\n            onTap={handleClick}\n        />\n    );\n};\n\nexport default Force;\n","import Vector from 'victor';\n\nexport { Vector };\n\nexport const lerp = (v1: Vector, v2: Vector, alpha: number): Vector => {\n    const dir = v2.clone().subtract(v1).normalize();\n    const distance = v1.distance(v2);\n    const mv = dir.multiplyScalar(distance * alpha);\n    return v1.clone().add(mv);\n};\n\nexport const verticalNormalizeVector = (v1: Vector, v2: Vector): Vector => {\n    const dir = v2.clone().subtract(v1).normalize();\n    const v = new Vector(dir.y, dir.x * -1).normalize();\n    return v;\n};\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Vector2d } from 'konva/lib/types';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Circle } from 'react-konva';\nimport { Node as NodeProps } from '../../../types/shape';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { clone, replaceNode, snap } from '../util';\n\ninterface Props extends NodeProps {\n    draggable?: boolean;\n    onChange?: (node: NodeProps) => void;\n    onCommit?: (node: NodeProps) => void;\n}\n\nconst DrawInterval = 100;\n\nconst Node: React.VFC<Props> = ({ id, x, y, draggable = false, onChange, onCommit }) => {\n    const [isDragging, setIsDragging] = useState(false);\n    const pointRef = useRef<Vector2d>({ x, y });\n    const timerRef = useRef<NodeJS.Timer>();\n\n    const redraw = useCallback(() => {\n        if (draggable) {\n            const node: NodeProps = { id, x: pointRef.current.x, y: pointRef.current.y };\n            onChange && onChange(node);\n        }\n    }, [draggable, id, onChange]);\n\n    const handleDragStart = useCallback((event: KonvaEventObject<DragEvent>) => {\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            pointRef.current = point;\n            setIsDragging(true);\n        }\n    }, []);\n\n    const handleDragMove = useCallback((event: KonvaEventObject<DragEvent>) => {\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            pointRef.current = point;\n        }\n    }, []);\n\n    const handleDragEnd = useCallback(\n        (event: KonvaEventObject<DragEvent>) => {\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                pointRef.current = point;\n                setIsDragging(false);\n                if (timerRef.current) {\n                    clearInterval(timerRef.current);\n                    timerRef.current = undefined;\n                }\n\n                // 節点のマージ処理\n                const node: NodeProps = { id, x: pointRef.current.x, y: pointRef.current.y };\n                onCommit && onCommit(node);\n            }\n        },\n        [id, onCommit]\n    );\n\n    useEffect(() => {\n        const timer = timerRef.current;\n        if (draggable) {\n            if (isDragging) {\n                redraw();\n                timerRef.current = setInterval(redraw, DrawInterval);\n            }\n        }\n\n        return () => {\n            if (timer) {\n                clearInterval(timer);\n            }\n        };\n    }, [draggable, isDragging, redraw]);\n\n    return (\n        <Circle\n            id={id}\n            x={x}\n            y={y}\n            fill={isDragging ? 'blue' : 'black'}\n            radius={4}\n            draggable={draggable}\n            onDragStart={handleDragStart}\n            onDragMove={handleDragMove}\n            onDragEnd={handleDragEnd}\n            _useStrictMode\n        />\n    );\n};\n\nconst ConnectedNode: React.VFC<NodeProps> = (props) => {\n    const { tool, snapSize, setStructure } = useContext(StructureContext);\n\n    const draggable = useMemo(() => {\n        return tool !== 'pen' && Boolean(setStructure);\n    }, [setStructure, tool]);\n\n    const handleChange = useCallback(\n        ({ id, x, y }: NodeProps) => {\n            if (setStructure) {\n                const [px, py] = snap([x, y], snapSize);\n                setStructure((values) => {\n                    const data = clone(values);\n                    const node = data.nodes.find((item) => item.id === id);\n                    if (node) {\n                        node.x = px;\n                        node.y = py;\n                    }\n                    return data;\n                });\n            }\n        },\n        [setStructure, snapSize]\n    );\n\n    const handleCommit = useCallback(\n        ({ id, x, y }: NodeProps) => {\n            if (setStructure) {\n                const [px, py] = snap([x, y], snapSize);\n                setStructure((values) => {\n                    const data = clone(values);\n                    // 該当ID の index\n                    const index = data.nodes.findIndex((item) => item.id === id);\n                    if (index >= 0) {\n                        // 座標が一致する別の節点が存在する？\n                        const node = data.nodes.find((item) => {\n                            return item.id !== id && item.x === px && item.y === py;\n                        });\n                        if (node) {\n                            // 現在の node を座標が一致する node に置き換える\n                            replaceNode(data, id, node.id);\n                            // 不要となった現在の node を削除する\n                            data.nodes.splice(index, 1);\n                        }\n                    }\n\n                    return data;\n                });\n            }\n        },\n        [setStructure, snapSize]\n    );\n\n    return (\n        <Node {...props} draggable={draggable} onChange={handleChange} onCommit={handleCommit} />\n    );\n};\n\nexport default ConnectedNode;\n","import { useContext } from 'react';\nimport { Layer } from 'react-konva';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { Beam, Force, Node } from '../shape';\n\nconst ShapeLayer: React.VFC = () => {\n    const { nodes, beams, forces } = useContext(StructureContext);\n\n    return (\n        <Layer>\n            {Object.entries(beams).map(([key, beam]) => (\n                <Beam key={key} {...beam} />\n            ))}\n            {Object.entries(nodes).map(([key, node]) => (\n                <Node key={key} {...node} />\n            ))}\n            {Object.entries(forces).map(([key, force]) => (\n                <Force key={key} {...force} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default ShapeLayer;\n","import { Dispatch, SetStateAction } from 'react';\nimport { Stage } from 'react-konva';\nimport { CanvasTool, DOMSize } from '../../types/common';\nimport { Structure } from '../../types/shape';\nimport { useDraw } from './hook/draw';\nimport DrawLayer from './layer/DrawLayer';\nimport GridLayer from './layer/GridLayer';\nimport GuideLayer from './layer/GuideLayer';\nimport ShapeLayer from './layer/ShapeLayer';\nimport StructureProvider from './provider/StructureProvider';\n\nexport interface CanvasProps {\n    tool: CanvasTool;\n    structure: Structure;\n    size: DOMSize;\n    readonly?: boolean;\n    setStructure?: Dispatch<SetStateAction<Structure>>;\n}\n\nconst CanvasCore: React.VFC<CanvasProps> = ({\n    tool,\n    structure,\n    size,\n    readonly = false,\n    setStructure,\n}) => {\n    const { points, ...handlers } = useDraw({\n        disabled: readonly || tool !== 'pen',\n        structure,\n        setStructure,\n    });\n\n    return (\n        <Stage width={size.width} height={size.height} {...handlers}>\n            <StructureProvider\n                size={size}\n                structure={structure}\n                tool={tool}\n                setStructure={setStructure}\n            >\n                <GridLayer />\n                <GuideLayer />\n                <ShapeLayer />\n                <DrawLayer points={points} />\n            </StructureProvider>\n        </Stage>\n    );\n};\n\nexport default CanvasCore;\n","import { Box } from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\nimport { CanvasTool, DOMSize } from '../../types/common';\nimport CanvasCore, { CanvasProps } from './core';\n\ninterface Props extends Omit<CanvasProps, 'size' | 'tool'> {\n    tool?: CanvasTool;\n}\n\nconst Canvas: React.VFC<Props> = ({ tool = 'select', ...props }) => {\n    const [size, setSize] = useState<DOMSize>({ width: 0, height: 0 });\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    // 要素のリサイズを監視\n    useEffect(() => {\n        const observer = new ResizeObserver((entries) => {\n            const { width, height } = entries[0].contentRect;\n            setSize({\n                width,\n                height,\n            });\n        });\n\n        if (containerRef.current) {\n            observer.observe(containerRef.current);\n        }\n\n        return () => {\n            observer.disconnect();\n        };\n    }, []);\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{\n                width: 'auto',\n                height: '100%',\n                backgroundColor: '#ffffff',\n                overscrollBehavior: 'contain',\n            }}\n        >\n            <CanvasCore size={size} tool={tool} {...props} />\n        </Box>\n    );\n};\n\nexport default Canvas;\n","import { Box } from '@mui/material';\nimport { useContext, useState } from 'react';\nimport { ConfigurationContext } from '../providers/ConfigurationProvider';\nimport { emptyStructure } from '../types/shape';\nimport Canvas from './Canvas';\n\nconst CanvasContainer: React.VFC = () => {\n    const { tool } = useContext(ConfigurationContext);\n    const [structure, setStructure] = useState(emptyStructure);\n\n    return (\n        <Box\n            sx={{\n                boxSizing: 'border-box',\n                ml: 1,\n                mb: 1,\n                flex: 1,\n                border: (theme) => `1px solid ${theme.palette.divider}`,\n                borderRadius: 1,\n                overflow: 'hidden',\n            }}\n        >\n            <Canvas tool={tool} structure={structure} setStructure={setStructure} />\n        </Box>\n    );\n};\n\nexport default CanvasContainer;\n","import { Typography } from '@mui/material';\n\nconst hash = process.env.REACT_APP_GIT_COMMIT_HASH?.substring(0, 7) ?? '';\nconst date = process.env.REACT_APP_GIT_COMMIT_DATE ?? '';\nconst version = process.env.REACT_APP_PACKAGE_VERSION ?? '';\n\nconst Version: React.VFC = () => {\n    return (\n        <Typography\n            variant=\"caption\"\n            sx={{ ml: 2 }}\n        >{`ver ${version} (${hash}: ${date})`}</Typography>\n    );\n};\n\nexport default Version;\n","import { AppBar, Toolbar, Typography } from '@mui/material';\nimport Version from './Version';\n\nconst Header: React.VFC = () => {\n    return (\n        <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\">\n                    Drawing Sample\n                </Typography>\n                <Version />\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Header;\n","export interface DOMSize {\n    width: number;\n    height: number;\n}\n\nexport const CanvasTools = ['select', 'pen', 'force', 'trapezoid', 'delete'] as const;\nexport type CanvasTool = typeof CanvasTools[number];\nexport const isCanvasTool = (item: unknown): item is CanvasTool => {\n    if (typeof item === 'string') {\n        return CanvasTools.some((tool) => tool === item);\n    }\n    return false;\n};\n","import { ArrowDownward, Delete, Edit, PanToolAlt, Texture } from '@mui/icons-material';\nimport { Stack, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { MouseEvent, ReactElement, useCallback, useContext } from 'react';\nimport { ConfigurationContext } from '../../providers/ConfigurationProvider';\nimport { CanvasTool, isCanvasTool } from '../../types/common';\n\ninterface Props {\n    tool: CanvasTool;\n    onChange: (tool: CanvasTool) => void;\n}\n\ninterface ButtonProps {\n    tool: CanvasTool;\n    icon: ReactElement;\n    label: string;\n}\n\nconst ToolboxButtons: Readonly<Record<CanvasTool, ButtonProps>> = {\n    select: {\n        tool: 'select',\n        icon: <PanToolAlt />,\n        label: '選択',\n    },\n    pen: {\n        tool: 'pen',\n        icon: <Edit />,\n        label: '梁要素の描画',\n    },\n    force: {\n        tool: 'force',\n        icon: <ArrowDownward />,\n        label: '集中荷重の追加',\n    },\n    trapezoid: {\n        tool: 'trapezoid',\n        icon: <Texture />,\n        label: '分布荷重の追加',\n    },\n    delete: {\n        tool: 'delete',\n        icon: <Delete />,\n        label: '要素の削除',\n    },\n};\n\nconst ToolboxCore: React.VFC<Props> = ({ tool, onChange }) => {\n    /**\n     * ツールの変更\n     */\n    const handleChange = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isCanvasTool(newValue)) {\n                onChange(newValue);\n            }\n        },\n        [onChange]\n    );\n\n    return (\n        <Stack sx={{ width: 160 }} alignItems=\"flex-start\">\n            <Typography variant=\"caption\">Toolbox</Typography>\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={tool}\n                exclusive\n                fullWidth\n                onChange={handleChange}\n            >\n                {Object.entries(ToolboxButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n        </Stack>\n    );\n};\n\nconst Toolbox: React.VFC = () => {\n    const { tool, setTool } = useContext(ConfigurationContext);\n    return <ToolboxCore tool={tool} onChange={setTool} />;\n};\n\nexport default Toolbox;\n","import { Box } from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport { DOMSize } from '../types/common';\nimport CanvasContainer from './CanvasContainer';\nimport Header from './Header';\nimport Toolbox from './Toolbox';\n\nconst Layout: React.VFC = () => {\n    const [windowRect, setWindowRect] = useState<DOMSize>({ width: 0, height: 0 });\n\n    const fitWindowSize = useCallback(() => {\n        const { innerHeight, innerWidth } = window;\n        setWindowRect({\n            height: innerHeight,\n            width: innerWidth,\n        });\n    }, []);\n\n    useEffect(() => {\n        fitWindowSize();\n        window.addEventListener('resize', fitWindowSize);\n\n        return () => {\n            window.removeEventListener('resize', fitWindowSize);\n        };\n    }, [fitWindowSize]);\n\n    return (\n        <Box sx={{ ...windowRect, overflow: 'hidden' }}>\n            <Header />\n            <Box\n                sx={{\n                    boxSizing: 'border-box',\n                    width: 'auto',\n                    height: 'calc(100% - 48px)',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    flexWrap: 'nowrap',\n                    alignItems: 'stretch',\n                    pt: 1,\n                    px: 1,\n                }}\n            >\n                <Toolbox />\n                <CanvasContainer />\n            </Box>\n        </Box>\n    );\n};\n\nexport default Layout;\n","import { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport React from 'react';\nimport ConfigurationProvider from '../providers/ConfigurationProvider';\nimport Layout from './Layout';\n\nconst theme = createTheme();\n\nconst App: React.VFC = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <ConfigurationProvider>\n                <CssBaseline />\n                <Layout />\n            </ConfigurationProvider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}