{"version":3,"sources":["providers/ConfigurationProvider.tsx","types/shape.ts","components/Canvas/util/common.ts","components/Canvas/util/structure.ts","components/Canvas/util/vector.ts","components/Canvas/hook/draw.ts","components/Canvas/layer/DrawLayer.tsx","components/Canvas/provider/StructureProvider.tsx","components/Canvas/layer/GridLayer.tsx","components/Canvas/provider/SelectProvider.tsx","components/Canvas/shape/Beam.tsx","components/Canvas/shape/Force.tsx","components/Canvas/shape/Guide.tsx","components/Canvas/shape/Node.tsx","components/Canvas/layer/GuideLayer.tsx","components/Canvas/layer/ShapeLayer.tsx","components/Canvas/core.tsx","components/Canvas/index.tsx","components/CanvasContainer.tsx","components/Version.tsx","components/Header.tsx","types/common.ts","components/Toolbox/index.tsx","components/Layout.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ConfigurationContext","createContext","undefined","ConfigurationProvider","children","useState","tool","setTool","Provider","value","emptyStructure","unit","force","length","nodes","beams","forces","trapezoids","clone","data","JSON","parse","stringify","round","figure","n","result","Math","snapping","snapSize","i","snap","x","y","createNode","id","uuid","vX","Vector","vY","verticalNormalizeVector","v1","v2","dir","subtract","normalize","v","dot","invert","useDraw","disabled","structure","setStructure","points","setPoints","isDrawing","useRef","handlePointerDown","useCallback","event","point","target","getStage","getPointerPosition","current","handlePointerMove","state","handlePointerUp","start","slice","end","edgeI","edgeJ","nodeI","n1","find","node","push","nodeJ","n2","beam","name","createBeam","useEffect","onPointerDown","onPointerMove","onPointerUp","DrawLayer","strokeWidth","stroke","StructureContext","StructureProvider","size","gridSize","useMemo","map","forEach","item","items","average","reduce","p","c","forceRatio","addForce","params","createForce","deleteForce","index","findIndex","splice","deleteBeam","exists","some","j","filter","defaultLineProps","dash","listening","GridLayer","useContext","horizontalLines","lines","count","height","width","verticalLines","props","SelectContext","SelectProvider","selected","setSelected","isSelected","type","select","toggle","Beam","onDelete","onSelect","labelPosition","setLabelPosition","labelWidth","setLabelWidth","labelAngle","setLabelAngle","guidePoints","setGuidePoints","viRef","vjRef","handleClick","cancelBubble","vi","vj","distance","label","add","multiplyScalar","angle","angleDeg","guideDir","guideI","guideJ","onClick","onTap","rotation","text","fontSize","fill","align","wrap","ellipsis","Guide","ConnectedBeam","handleAddForce","vp","beamLength","distanceI","createForceParams","handleDelete","handleSelect","Force","setDistance","setRotation","tail","alpha","mv","lerp","vertical","arrowLength","head","max","color","pointerLength","pointerWidth","offsetX","ConnectedForce","defaultGuideProps","defaultGuideArrowProps","pointerAtBeginning","GuideLine","v1Ref","v2Ref","basis","setBasis","dist","Node","draggable","onChange","onCommit","isDragging","setIsDragging","pointRef","timerRef","redraw","handleDragStart","handleDragMove","handleDragEnd","clearInterval","timer","setInterval","radius","onDragStart","onDragMove","onDragEnd","_useStrictMode","ConnectedNode","Boolean","handleChange","px","py","values","handleCommit","targetId","newId","GuideInterval","GuideLayer","guide","maxX","Number","MIN_SAFE_INTEGER","minX","MAX_SAFE_INTEGER","guidesX","maxY","minY","guidesY","pointsX","Set","pointsY","Object","has","array","Array","from","sort","a","b","prev","key","localX","GlobalVerticalGuidePositionX","GlobalHorizontalGuidePositionY","ShapeLayer","entries","CanvasCore","readonly","handlers","Canvas","setSize","containerRef","observer","ResizeObserver","contentRect","observe","disconnect","Box","ref","sx","backgroundColor","overscrollBehavior","CanvasContainer","boxSizing","ml","mb","flex","border","theme","palette","divider","borderRadius","overflow","hash","process","substring","date","version","Version","Typography","variant","Header","AppBar","position","Toolbar","component","CanvasTools","ToolboxButtons","icon","PanToolAlt","pen","Edit","ArrowDownward","trapezoid","Texture","delete","Delete","ToolboxCore","_","newValue","Stack","alignItems","ToggleButtonGroup","orientation","exclusive","fullWidth","ToggleButton","justifyContent","Toolbox","Layout","windowRect","setWindowRect","fitWindowSize","window","innerHeight","innerWidth","addEventListener","removeEventListener","display","flexDirection","flexWrap","pt","createTheme","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ad9a591.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\nimport { CanvasTool } from '../types/common';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface IConfigurationContext {\n    tool: CanvasTool;\n    setTool: (tool: CanvasTool) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const ConfigurationContext = createContext<IConfigurationContext>(undefined!);\n\nconst ConfigurationProvider: React.VFC<Props> = ({ children }) => {\n    const [tool, setTool] = useState<CanvasTool>('select');\n\n    return (\n        <ConfigurationContext.Provider value={{ tool, setTool }}>\n            {children}\n        </ConfigurationContext.Provider>\n    );\n};\n\nexport default ConfigurationProvider;\n","/**\n * 単位: 力\n */\nexport const ForceUnitValues = ['N', 'kN'] as const;\n\n/**\n * 単位: 長さ\n */\nexport const LengthUnitValues = ['mm', 'cm', 'm'] as const;\n\nexport type ForceUnitType = typeof ForceUnitValues[number];\nexport type LengthUnitType = typeof LengthUnitValues[number];\n\n/**\n * 単位\n */\nexport interface Unit {\n    force: ForceUnitType;\n    length: LengthUnitType;\n}\n\nexport interface Node {\n    id: string;\n    x: number;\n    y: number;\n}\n\nexport interface Beam {\n    id: string;\n    name: string;\n    nodeI: string;\n    nodeJ: string;\n}\n\nexport interface Force {\n    id: string;\n    name: string;\n    beam: string;\n    force: number;\n    // i端からの距離 (0 〜 1)\n    distanceI: number;\n}\n\nexport interface Trapezoid {\n    id: string;\n    name: string;\n    beam: string;\n    forceI: number;\n    forceJ: number;\n    // i端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceI: number;\n    // j端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceJ: number;\n}\n\nexport interface Structure {\n    unit: Unit;\n    nodes: Node[];\n    beams: Beam[];\n    forces: Force[];\n    trapezoids: Trapezoid[];\n}\n\nexport type StructureFieldType = keyof Omit<Structure, 'unit'>;\n\nexport const defaultUnit: Unit = {\n    force: 'kN',\n    length: 'm',\n};\n\nexport const emptyStructure: Structure = {\n    unit: defaultUnit,\n    nodes: [],\n    beams: [],\n    forces: [],\n    trapezoids: [],\n};\n","export const clone = <T>(data: T): T => {\n    return JSON.parse(JSON.stringify(data)) as T;\n};\n\nexport const round = (value: number, figure = 3): number => {\n    const n = 10 ** figure;\n    const result = Math.round(value * n) / n;\n    return result;\n};\n\nconst snapping = (value: number, snapSize = 25): number => {\n    const n = value / snapSize;\n    const i = Math.round(n) * snapSize;\n    return i;\n};\n\nexport const snap = ([x, y]: [number, number], snapSize = 25): [number, number] => {\n    return [snapping(x, snapSize), snapping(y, snapSize)];\n};\n","import { v4 as uuid } from 'uuid';\nimport { Beam, Force, Node, Structure } from '../../../types/shape';\nimport { round } from './common';\nimport { Vector } from './vector';\n\n/**\n * 節点の作成\n * @param x\n * @param y\n * @returns\n */\nexport const createNode = (x: number, y: number): Node => {\n    return {\n        id: uuid(),\n        x,\n        y,\n    };\n};\n\nexport const createBeam = (name: string, nodeI: string, nodeJ: string): Beam => {\n    return {\n        id: uuid(),\n        name,\n        nodeI,\n        nodeJ,\n    };\n};\n\ntype CreateForceParams = Omit<Force, 'id'>;\n\nexport const createForce = (params: CreateForceParams): Force => {\n    return {\n        ...params,\n        id: uuid(),\n    };\n};\n\nexport const createForceParams = (\n    beam: string,\n    vi: Vector,\n    vj: Vector,\n    vp: Vector\n): Omit<Force, 'id' | 'name'> => {\n    const beamLength = vi.distance(vj);\n    // クリック位置までの距離\n    const distance = vi.distance(vp);\n\n    return {\n        beam,\n        force: 10, // TODO: どうやって指定する？\n        distanceI: round(distance / beamLength),\n    };\n};\n\nexport const replaceNode = (structure: Structure, targetId: string, newId: string): Structure => {\n    structure.beams.forEach((beam) => {\n        if (beam.nodeI === targetId) {\n            beam.nodeI = newId;\n        }\n        if (beam.nodeJ === targetId) {\n            beam.nodeJ = newId;\n        }\n    });\n    return structure;\n};\n","import Vector from 'victor';\n\nexport { Vector };\n\n// X方向のベクトル\nexport const vX = new Vector(1, 0);\n// Y方向のベクトル\nexport const vY = new Vector(0, 1);\n\n/**\n * v1 と v2 の間にある vp を取得する\n * @param v1\n * @param v2\n * @param alpha\n * @returns\n */\nexport const lerp = (v1: Vector, v2: Vector, alpha: number): Vector => {\n    if (alpha >= 1) {\n        return v2;\n    }\n    if (alpha <= 0) {\n        return v1;\n    }\n    const dir = v2.clone().subtract(v1).normalize();\n    const distance = v1.distance(v2);\n    const mv = dir.multiplyScalar(distance * alpha);\n    return v1.clone().add(mv);\n};\n\n/**\n * v1 と v2 に直交する単位ベクトルを返す\n * @param v1\n * @param v2\n * @returns\n */\nexport const verticalNormalizeVector = (v1: Vector, v2: Vector): Vector => {\n    const dir = v2.clone().subtract(v1).normalize();\n    const v = new Vector(dir.y, dir.x * -1).normalize();\n\n    const value = vY.dot(v);\n    if (value > 0) {\n        v.invert();\n    }\n\n    return v;\n};\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Dispatch, SetStateAction, useCallback, useEffect, useRef, useState } from 'react';\nimport { Structure } from '../../../types/shape';\nimport { clone, createBeam, createNode, snap } from '../util';\n\ninterface StageEventHandlers {\n    onPointerDown: (event: KonvaEventObject<PointerEvent>) => void;\n    onPointerMove: (event: KonvaEventObject<PointerEvent>) => void;\n    onPointerUp: (event: KonvaEventObject<PointerEvent>) => void;\n}\n\ninterface HookProps {\n    disabled?: boolean;\n    snapSize?: number;\n    structure: Structure;\n    setStructure?: Dispatch<SetStateAction<Structure>>;\n}\n\ninterface HookResponse extends StageEventHandlers {\n    points: number[];\n}\n\nexport const useDraw = ({\n    disabled = false,\n    snapSize = 25,\n    structure,\n    setStructure,\n}: HookProps): HookResponse => {\n    const [points, setPoints] = useState<number[]>([]);\n    const isDrawing = useRef(false);\n\n    const handlePointerDown = useCallback(\n        (event: KonvaEventObject<PointerEvent>) => {\n            if (disabled) {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                isDrawing.current = true;\n                setPoints([point.x, point.y]);\n            }\n        },\n        [disabled]\n    );\n\n    const handlePointerMove = useCallback(\n        (event: KonvaEventObject<PointerEvent>) => {\n            if (disabled) {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                isDrawing.current = true;\n                setPoints((state) => [...state, point.x, point.y]);\n            }\n        },\n        [disabled]\n    );\n\n    const handlePointerUp = useCallback(() => {\n        if (disabled) {\n            return;\n        }\n\n        isDrawing.current = false;\n\n        if (setStructure && points.length >= 4) {\n            const data = clone(structure);\n            // 開始点\n            const start = points.slice(0, 2);\n            // 終了点\n            const end = points.slice(-2);\n\n            // スナップさせる\n            const edgeI = snap([start[0], start[1]], snapSize);\n            const edgeJ = snap([end[0], end[1]], snapSize);\n\n            const nodeI = createNode(...edgeI);\n            // 同一座標の節点が存在するか？\n            const n1 = data.nodes.find((node) => node.x === nodeI.x && node.y === nodeI.y);\n            if (n1) {\n                // 既存の節点を使用する\n                nodeI.id = n1.id;\n            } else {\n                // 新規追加\n                data.nodes.push(nodeI);\n            }\n\n            const nodeJ = createNode(...edgeJ);\n            const n2 = data.nodes.find((node) => node.x === nodeJ.x && node.y === nodeJ.y);\n            if (n2) {\n                // 既存の節点を使用する\n                nodeJ.id = n2.id;\n            } else {\n                // 新規追加\n                data.nodes.push(nodeJ);\n            }\n\n            const name = `Beam_${data.beams.length + 1}`;\n            const beam = createBeam(name, nodeI.id, nodeJ.id);\n            data.beams.push(beam);\n\n            setStructure(data);\n            setPoints([]);\n        }\n    }, [disabled, points, setStructure, snapSize, structure]);\n\n    useEffect(() => {\n        if (disabled) {\n            // 無効になったら描画中の線を消去\n            setPoints([]);\n        }\n    }, [disabled]);\n\n    return {\n        points,\n        onPointerDown: handlePointerDown,\n        onPointerMove: handlePointerMove,\n        onPointerUp: handlePointerUp,\n    };\n};\n","import { Layer, Line } from 'react-konva';\n\ninterface Props {\n    points: number[];\n}\n\nconst DrawLayer: React.VFC<Props> = ({ points }) => {\n    return (\n        <Layer>\n            <Line points={points} strokeWidth={3} stroke=\"blue\" />\n        </Layer>\n    );\n};\n\nexport default DrawLayer;\n","import { createContext, Dispatch, SetStateAction, useCallback, useMemo } from 'react';\nimport { CanvasTool, DOMSize } from '../../../types/common';\nimport { Force, Node, Structure } from '../../../types/shape';\nimport { BeamProps, ForceProps } from '../types';\nimport { clone, createForce } from '../util';\n\ninterface Props {\n    children: React.ReactNode;\n    size: DOMSize;\n    gridSize?: number;\n    snapSize?: number;\n    tool?: CanvasTool;\n    structure: Structure;\n    setStructure?: Dispatch<SetStateAction<Structure>>;\n}\n\ntype AddForceFunction = (params: Omit<Force, 'id' | 'name'>) => void;\n\ninterface IStructureContext {\n    // 選択されているツール\n    tool: CanvasTool;\n    // キャンバスのサイズ\n    size: DOMSize;\n    // グリッドの幅\n    gridSize: number;\n    // スナップする単位\n    snapSize: number;\n    // 単位変換された構造データ\n    structure: Structure;\n    // Node の Map\n    nodes: Record<string, Node>;\n    // Beam の Map\n    beams: Record<string, BeamProps>;\n    // force の Map\n    forces: Record<string, ForceProps>;\n    // 集中荷重の追加\n    addForce: AddForceFunction;\n    // 集中荷重の削除\n    deleteForce: (id: string) => void;\n    // 梁要素の削除\n    deleteBeam: (id: string) => void;\n    // 構造データの更新\n    setStructure?: Dispatch<SetStateAction<Structure>>;\n}\n\n// Context | React TypeScript Cheatsheets\n// https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/context/\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const StructureContext = createContext<IStructureContext>(undefined!);\n\nconst StructureProvider: React.VFC<Props> = ({\n    children,\n    tool = 'select',\n    size,\n    gridSize = 25,\n    snapSize = 25,\n    structure,\n    setStructure,\n}) => {\n    const nodes = useMemo(() => {\n        const map: Record<string, Node> = {};\n\n        structure.nodes.forEach((node) => {\n            map[node.id] = node;\n        });\n\n        return map;\n    }, [structure.nodes]);\n\n    const beams = useMemo(() => {\n        const map: Record<string, BeamProps> = {};\n\n        structure.beams.forEach(({ nodeI, nodeJ, ...beam }) => {\n            const item: BeamProps = {\n                ...beam,\n                nodeI: nodes[nodeI],\n                nodeJ: nodes[nodeJ],\n            };\n            map[beam.id] = item;\n        });\n\n        return map;\n    }, [nodes, structure.beams]);\n\n    const forces = useMemo(() => {\n        const { forces: items } = structure;\n        const map: Record<string, ForceProps> = {};\n\n        if (items.length > 0) {\n            const total = items.map((item) => item.force).reduce((p, c) => p + c);\n            const average = total / items.length;\n            items.forEach(({ beam, force: value, ...force }) => {\n                const forceRatio = value / average;\n                map[force.id] = {\n                    ...force,\n                    force: value,\n                    forceRatio,\n                    beam: beams[beam],\n                };\n            });\n        }\n\n        return map;\n    }, [beams, structure]);\n\n    const addForce = useCallback(\n        (params: Omit<Force, 'id' | 'name'>) => {\n            const data = clone(structure);\n            const name = `Force_${data.forces.length + 1}`;\n            const force = createForce({ name, ...params });\n            data.forces.push(force);\n            setStructure && setStructure(data);\n        },\n        [setStructure, structure]\n    );\n\n    const deleteForce = useCallback(\n        (id: string) => {\n            const index = structure.forces.findIndex(({ id: itemId }) => itemId === id);\n            if (index >= 0) {\n                const data = clone(structure);\n                data.forces.splice(index, 1);\n                setStructure && setStructure(data);\n            }\n        },\n        [setStructure, structure]\n    );\n\n    const deleteBeam = useCallback(\n        (id: string) => {\n            const index = structure.beams.findIndex(({ id: itemId }) => itemId === id);\n            if (index >= 0) {\n                const { nodeI, nodeJ } = structure.beams[index];\n                // 梁要素を削除\n                const data = clone(structure);\n                data.beams.splice(index, 1);\n\n                // beam の両端の節点について、該当 beam 以外で使用していなければ削除\n                [nodeI, nodeJ].forEach((node) => {\n                    // 他 beam で使用されていないかチェック\n                    const exists = data.beams.some(({ nodeI: i, nodeJ: j }) => {\n                        return node === i || node === j;\n                    });\n\n                    if (!exists) {\n                        // 該当 node を削除\n                        const i = data.nodes.findIndex(({ id: nodeId }) => nodeId === node);\n                        if (i >= 0) {\n                            data.nodes.splice(i, 1);\n                        }\n                    }\n                });\n\n                // beam に紐づく集中荷重を削除\n                const forces = data.forces.filter(({ beam }) => beam !== id);\n                data.forces = forces;\n                // beam に紐づく分布荷重を削除\n                const trapezoids = data.trapezoids.filter(({ beam }) => beam !== id);\n                data.trapezoids = trapezoids;\n\n                setStructure && setStructure(data);\n            }\n        },\n        [setStructure, structure]\n    );\n\n    return (\n        <StructureContext.Provider\n            value={{\n                tool,\n                size,\n                gridSize,\n                snapSize,\n                structure,\n                nodes,\n                beams,\n                forces,\n                addForce,\n                deleteForce,\n                deleteBeam,\n                setStructure,\n            }}\n        >\n            {children}\n        </StructureContext.Provider>\n    );\n};\n\nexport default StructureProvider;\n","import { useContext, useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { StructureContext } from '../provider/StructureProvider';\n\ninterface LineProps {\n    id: string;\n    points: number[];\n    stroke: string;\n    strokeWidth: number;\n    dash: [number, number];\n    listening: boolean;\n}\n\nconst defaultLineProps: LineProps = {\n    id: '',\n    points: [],\n    stroke: '#c9e1ff',\n    strokeWidth: 1,\n    dash: [5, 3],\n    listening: false,\n};\n\nconst GridLayer: React.VFC = () => {\n    // キャンバスサイズ, グリッドの幅\n    const { size, gridSize } = useContext(StructureContext);\n\n    const horizontalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let y = 0; y <= size.height; y += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Horizontal_${count}`,\n                points: [0, y, size.width, y],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    const verticalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let x = 0; x <= size.width; x += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Vertical_${count}`,\n                points: [x, 0, x, size.height],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    return (\n        <Layer listening={false}>\n            {/* horizontal */}\n            {horizontalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n            {/* vertical */}\n            {verticalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GridLayer;\n","import { createContext, Dispatch, ReactNode, SetStateAction, useCallback } from 'react';\nimport { Shape } from '../types';\n\ninterface Props {\n    value: { selected: Shape[]; setSelected: Dispatch<SetStateAction<Shape[]>> };\n    children: ReactNode;\n}\n\ninterface ISelectContext {\n    selected: Shape[];\n    setSelected: Dispatch<SetStateAction<Shape[]>>;\n    isSelected: (item: Shape) => boolean;\n    select: (item: Shape) => void;\n    toggle: (item: Shape) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const SelectContext = createContext<ISelectContext>(undefined!);\n\n/**\n * 要素選択 provider\n */\nconst SelectProvider: React.VFC<Props> = ({ value: { selected, setSelected }, children }) => {\n    const isSelected = useCallback(\n        (item: Shape) => {\n            return selected.some(({ type, id }) => type === item.type && id === item.id);\n        },\n        [selected]\n    );\n\n    const select = useCallback(\n        (item: Shape) => {\n            if (!isSelected(item)) {\n                setSelected((state) => [...state, item]);\n            }\n        },\n        [isSelected, setSelected]\n    );\n\n    const toggle = useCallback(\n        (item: Shape) => {\n            if (isSelected(item)) {\n                // 削除\n                setSelected((state) =>\n                    state.filter(({ type, id }) => !(type === item.type && id === item.id))\n                );\n            } else {\n                // 追加\n                setSelected((state) => [...state, item]);\n            }\n        },\n        [isSelected, setSelected]\n    );\n\n    return (\n        <SelectContext.Provider\n            value={{\n                selected,\n                setSelected,\n                isSelected,\n                select,\n                toggle,\n            }}\n        >\n            {children}\n        </SelectContext.Provider>\n    );\n};\n\nexport default SelectProvider;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Vector2d } from 'konva/lib/types';\nimport { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { Line, Text } from 'react-konva';\nimport { Guide } from '.';\nimport { CanvasTool } from '../../../types/common';\nimport { SelectContext } from '../provider/SelectProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { BeamProps, Point } from '../types';\nimport { createForceParams, Vector, verticalNormalizeVector } from '../util';\n\ninterface Props extends BeamProps {\n    tool: CanvasTool;\n    selected?: boolean;\n    addForce: (point: Vector2d, vi: Vector, vj: Vector) => void;\n    onDelete: VoidFunction;\n    onSelect: VoidFunction;\n}\n\nconst Beam: React.VFC<Props> = ({\n    name,\n    nodeI,\n    nodeJ,\n    tool,\n    selected = false,\n    addForce,\n    onDelete,\n    onSelect,\n}) => {\n    const [points, setPoints] = useState<number[]>([]);\n    const [labelPosition, setLabelPosition] = useState<Point>([0, 0]);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const [labelAngle, setLabelAngle] = useState(0);\n    const [guidePoints, setGuidePoints] = useState<[Point, Point]>([\n        [0, 0],\n        [0, 0],\n    ]);\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    /**\n     * beam をクリック\n     * - 該当位置に集中荷重を追加する\n     * - 該当要素を削除\n     */\n    const handleClick = useCallback(\n        (event: KonvaEventObject<MouseEvent>) => {\n            // 集中荷重の追加モードの場合\n            if (tool === 'force') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                if (point) {\n                    addForce(point, viRef.current, vjRef.current);\n                    // イベントの伝播を止める\n                    event.cancelBubble = true;\n                }\n            } else if (tool === 'delete') {\n                // 梁要素の削除\n                onDelete();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            } else if (tool === 'select') {\n                // 梁要素の選択\n                onSelect();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            }\n        },\n        [addForce, onDelete, onSelect, tool]\n    );\n\n    useEffect(() => {\n        setPoints([nodeI.x, nodeI.y, nodeJ.x, nodeJ.y]);\n        viRef.current.x = nodeI.x;\n        viRef.current.y = nodeI.y;\n        vjRef.current.x = nodeJ.x;\n        vjRef.current.y = nodeJ.y;\n\n        if (selected) {\n            // 必ず左から右になるようにする\n            let vi = viRef.current;\n            let vj = vjRef.current;\n            if (vi.x > vj.x) {\n                [vi, vj] = [vj, vi];\n            }\n\n            // 梁要素の長さ\n            const distance = vi.distance(vj);\n            // 梁要素に対して垂直なベクトル\n            const dir = verticalNormalizeVector(vi, vj);\n            // ラベル位置\n            const label = vi.clone().add(dir.clone().multiplyScalar(16));\n            // ラベル方向\n            const angle = vj.clone().subtract(vi).angleDeg();\n            // 寸法線位置\n            const guideDir = dir.clone().multiplyScalar(75);\n            const guideI = vi.clone().add(guideDir);\n            const guideJ = vj.clone().add(guideDir);\n\n            setLabelWidth(distance);\n            setLabelPosition([label.x, label.y]);\n            setLabelAngle(angle);\n            setGuidePoints([\n                [guideI.x, guideI.y],\n                [guideJ.x, guideJ.y],\n            ]);\n        }\n    }, [nodeI.x, nodeI.y, nodeJ.x, nodeJ.y, selected]);\n\n    return (\n        <>\n            <Line\n                points={points}\n                stroke={selected ? 'blue' : 'black'}\n                strokeWidth={4}\n                onClick={handleClick}\n                onTap={handleClick}\n            />\n            {selected && (\n                <>\n                    {/* ラベル */}\n                    <Text\n                        x={labelPosition[0]}\n                        y={labelPosition[1]}\n                        rotation={labelAngle}\n                        text={name}\n                        fontSize={12}\n                        width={labelWidth}\n                        fill=\"blue\"\n                        align=\"center\"\n                        wrap=\"none\"\n                        ellipsis\n                        listening={false}\n                    />\n                    {/* 寸法線 */}\n                    <Guide start={guidePoints[0]} end={guidePoints[1]} />\n                </>\n            )}\n        </>\n    );\n};\n\nconst ConnectedBeam: React.VFC<BeamProps> = (props) => {\n    const { tool, addForce, deleteBeam } = useContext(StructureContext);\n    const { isSelected, toggle } = useContext(SelectContext);\n\n    const handleAddForce = useCallback(\n        (point: Vector2d, vi: Vector, vj: Vector) => {\n            const vp = new Vector(point.x, point.y);\n            const force = createForceParams(props.id, vi, vj, vp);\n            addForce(force);\n        },\n        [addForce, props.id]\n    );\n\n    const handleDelete = useCallback(() => {\n        deleteBeam(props.id);\n    }, [deleteBeam, props.id]);\n\n    const handleSelect = useCallback(() => {\n        toggle({ type: 'beams', id: props.id });\n    }, [props.id, toggle]);\n\n    return (\n        <Beam\n            {...props}\n            tool={tool}\n            selected={isSelected({ type: 'beams', id: props.id })}\n            addForce={handleAddForce}\n            onDelete={handleDelete}\n            onSelect={handleSelect}\n        />\n    );\n};\n\nexport default ConnectedBeam;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Arrow, Text } from 'react-konva';\nimport { CanvasTool } from '../../../types/common';\nimport { SelectContext } from '../provider/SelectProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { ForceProps, Point } from '../types';\nimport { lerp, Vector, verticalNormalizeVector, vX } from '../util';\n\ninterface Props extends ForceProps {\n    tool: CanvasTool;\n    selected?: boolean;\n    onDelete: VoidFunction;\n    onSelect: VoidFunction;\n}\n\nconst BaseLength = 30;\n\nconst Force: React.VFC<Props> = ({\n    beam,\n    distanceI,\n    force,\n    forceRatio,\n    tool,\n    selected = false,\n    onDelete,\n    onSelect,\n}) => {\n    const [points, setPoints] = useState<number[]>([]);\n    const [distance, setDistance] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    const [labelPosition, setLabelPosition] = useState<Point>([0, 0]);\n\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    useEffect(() => {\n        const { nodeI, nodeJ } = beam;\n\n        // i端、j端\n        viRef.current.x = nodeI.x;\n        viRef.current.y = nodeI.y;\n        vjRef.current.x = nodeJ.x;\n        vjRef.current.y = nodeJ.y;\n        // 矢印の先端\n        const tail = lerp(viRef.current, vjRef.current, distanceI);\n        // 梁に直交する単位ベクトル\n        const vertical = verticalNormalizeVector(viRef.current, vjRef.current);\n        // 矢印の開始点\n        const arrowLength = BaseLength * forceRatio;\n        const head = tail.clone().add(vertical.multiplyScalar(arrowLength));\n\n        setPoints([head.x, head.y, tail.x, tail.y]);\n\n        // ラベル描画用\n        setDistance(Math.max(arrowLength, 140));\n        const angle = vertical.clone().angleDeg();\n        setRotation(angle);\n        const dir = viRef.current.clone().subtract(vjRef.current).normalize();\n        if (vX.dot(dir) < 0) {\n            dir.invert();\n        }\n        const p = tail.clone().add(dir.multiplyScalar(6));\n        setLabelPosition([p.x, p.y]);\n    }, [beam, distanceI, forceRatio]);\n\n    const handleClick = useCallback(\n        (event: KonvaEventObject<MouseEvent>) => {\n            if (tool === 'delete') {\n                onDelete();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            } else if (tool === 'select') {\n                onSelect();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            }\n        },\n        [onDelete, onSelect, tool]\n    );\n\n    const color = useMemo(() => {\n        return selected ? 'red' : 'orange';\n    }, [selected]);\n\n    return (\n        <>\n            <Arrow\n                points={points}\n                pointerLength={6}\n                pointerWidth={6}\n                fill={color}\n                stroke={color}\n                strokeWidth={2}\n                onClick={handleClick}\n                onTap={handleClick}\n            />\n            {selected && (\n                <Text\n                    x={labelPosition[0]}\n                    y={labelPosition[1]}\n                    offsetX={-6}\n                    text={`${force}kN`}\n                    fontSize={12}\n                    width={distance}\n                    rotation={rotation}\n                    fill={color}\n                    listening={false}\n                    wrap=\"none\"\n                    ellipsis\n                />\n            )}\n        </>\n    );\n};\n\nconst ConnectedForce: React.VFC<ForceProps> = (props) => {\n    const { tool, deleteForce } = useContext(StructureContext);\n    const { isSelected, toggle } = useContext(SelectContext);\n\n    const handleDelete = useCallback(() => {\n        deleteForce(props.id);\n    }, [deleteForce, props.id]);\n\n    const handleSelect = useCallback(() => {\n        toggle({ type: 'forces', id: props.id });\n    }, [props.id, toggle]);\n\n    return (\n        <Force\n            {...props}\n            tool={tool}\n            selected={isSelected({ type: 'forces', id: props.id })}\n            onDelete={handleDelete}\n            onSelect={handleSelect}\n        />\n    );\n};\n\nexport default ConnectedForce;\n","import { useEffect, useRef, useState } from 'react';\nimport { Arrow, Group, Line, Text } from 'react-konva';\nimport { Point } from '../types';\nimport { Vector } from '../util';\n\ninterface Props {\n    start: Point;\n    end: Point;\n}\n\ninterface GuideProps {\n    fill: string;\n    stroke: string;\n    strokeWidth: number;\n    listening: boolean;\n}\n\ninterface GuideArrowProps extends GuideProps {\n    pointerLength: number;\n    pointerWidth: number;\n    pointerAtBeginning: boolean;\n}\n\nconst defaultGuideProps: GuideProps = {\n    fill: 'silver',\n    stroke: 'silver',\n    strokeWidth: 1,\n    listening: false,\n};\n\nconst defaultGuideArrowProps: GuideArrowProps = {\n    pointerLength: 6,\n    pointerWidth: 6,\n    pointerAtBeginning: true,\n    ...defaultGuideProps,\n};\n\nconst GuideLine: React.VFC<Props> = ({ start, end }) => {\n    const v1Ref = useRef<Vector>(new Vector(0, 0));\n    const v2Ref = useRef<Vector>(new Vector(0, 0));\n\n    const [distance, setDistance] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    const [basis, setBasis] = useState<Point>([0, 0]);\n\n    useEffect(() => {\n        v1Ref.current.x = start[0];\n        v1Ref.current.y = start[1];\n        v2Ref.current.x = end[0];\n        v2Ref.current.y = end[1];\n\n        const dist = v1Ref.current.distance(v2Ref.current);\n        const dir = v2Ref.current.clone().subtract(v1Ref.current).normalize();\n        const angle = dir.angleDeg();\n\n        setDistance(Math.round(dist));\n        setRotation(angle === 90 ? -90 : angle);\n        setBasis(angle === 90 ? end : start);\n    }, [end, start]);\n\n    return (\n        <Group x={basis[0]} y={basis[1]} rotation={rotation}>\n            {/* 左端 */}\n            <Line points={[0, 0, 0, 10]} {...defaultGuideProps} />\n            {/* 矢印部分 */}\n            <Arrow points={[0, 5, distance, 5]} {...defaultGuideArrowProps} />\n            {/* 右端 */}\n            <Line points={[distance, 0, distance, 10]} {...defaultGuideProps} />\n            {/* ラベル */}\n            <Text\n                x={0}\n                y={-8}\n                text={`${distance}px`}\n                fontSize={12}\n                fill=\"silver\"\n                width={distance}\n                align=\"center\"\n                listening={false}\n                wrap=\"none\"\n                ellipsis\n            />\n        </Group>\n    );\n};\n\nexport default GuideLine;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Vector2d } from 'konva/lib/types';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Circle } from 'react-konva';\nimport { Node as NodeProps } from '../../../types/shape';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { clone, replaceNode, snap } from '../util';\n\ninterface Props extends NodeProps {\n    draggable?: boolean;\n    onChange?: (node: NodeProps) => void;\n    onCommit?: (node: NodeProps) => void;\n}\n\nconst DrawInterval = 100;\n\nconst Node: React.VFC<Props> = ({ id, x, y, draggable = false, onChange, onCommit }) => {\n    const [isDragging, setIsDragging] = useState(false);\n    const pointRef = useRef<Vector2d>({ x, y });\n    const timerRef = useRef<NodeJS.Timer>();\n\n    const redraw = useCallback(() => {\n        if (draggable) {\n            const node: NodeProps = { id, x: pointRef.current.x, y: pointRef.current.y };\n            onChange && onChange(node);\n        }\n    }, [draggable, id, onChange]);\n\n    const handleDragStart = useCallback((event: KonvaEventObject<DragEvent>) => {\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            pointRef.current = point;\n            setIsDragging(true);\n        }\n    }, []);\n\n    const handleDragMove = useCallback((event: KonvaEventObject<DragEvent>) => {\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            pointRef.current = point;\n        }\n    }, []);\n\n    const handleDragEnd = useCallback(\n        (event: KonvaEventObject<DragEvent>) => {\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                pointRef.current = point;\n                setIsDragging(false);\n                if (timerRef.current) {\n                    clearInterval(timerRef.current);\n                    timerRef.current = undefined;\n                }\n\n                // 節点のマージ処理\n                const node: NodeProps = { id, x: pointRef.current.x, y: pointRef.current.y };\n                onCommit && onCommit(node);\n            }\n        },\n        [id, onCommit]\n    );\n\n    useEffect(() => {\n        const timer = timerRef.current;\n        if (draggable) {\n            if (isDragging) {\n                redraw();\n                timerRef.current = setInterval(redraw, DrawInterval);\n            }\n        }\n\n        return () => {\n            if (timer) {\n                clearInterval(timer);\n            }\n        };\n    }, [draggable, isDragging, redraw]);\n\n    return (\n        <Circle\n            id={id}\n            x={x}\n            y={y}\n            fill={isDragging ? 'blue' : 'black'}\n            radius={4}\n            draggable={draggable}\n            onDragStart={handleDragStart}\n            onDragMove={handleDragMove}\n            onDragEnd={handleDragEnd}\n            _useStrictMode\n        />\n    );\n};\n\nconst ConnectedNode: React.VFC<NodeProps> = (props) => {\n    const { tool, snapSize, setStructure } = useContext(StructureContext);\n\n    const draggable = useMemo(() => {\n        return tool !== 'pen' && Boolean(setStructure);\n    }, [setStructure, tool]);\n\n    const handleChange = useCallback(\n        ({ id, x, y }: NodeProps) => {\n            if (setStructure) {\n                const [px, py] = snap([x, y], snapSize);\n                setStructure((values) => {\n                    const data = clone(values);\n                    const node = data.nodes.find((item) => item.id === id);\n                    if (node) {\n                        node.x = px;\n                        node.y = py;\n                    }\n                    return data;\n                });\n            }\n        },\n        [setStructure, snapSize]\n    );\n\n    const handleCommit = useCallback(\n        ({ id, x, y }: NodeProps) => {\n            if (setStructure) {\n                const [px, py] = snap([x, y], snapSize);\n                setStructure((values) => {\n                    const data = clone(values);\n                    // 該当ID の index\n                    const index = data.nodes.findIndex((item) => item.id === id);\n                    if (index >= 0) {\n                        // 座標が一致する別の節点が存在する？\n                        const node = data.nodes.find((item) => {\n                            return item.id !== id && item.x === px && item.y === py;\n                        });\n                        if (node) {\n                            // 現在の node を座標が一致する node に置き換える\n                            replaceNode(data, id, node.id);\n                            // 不要となった現在の node を削除する\n                            data.nodes.splice(index, 1);\n                        }\n                    }\n\n                    return data;\n                });\n            }\n        },\n        [setStructure, snapSize]\n    );\n\n    return (\n        <Node {...props} draggable={draggable} onChange={handleChange} onCommit={handleCommit} />\n    );\n};\n\nexport default ConnectedNode;\n","import { useContext, useMemo } from 'react';\nimport { Layer } from 'react-konva';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { Guide as GuideLine } from '../shape';\n\ninterface GuideLineProps {\n    key: string;\n    start: [number, number];\n    end: [number, number];\n}\n\ninterface GuidePoint {\n    minX: number;\n    maxX: number;\n    guidesX: GuideLineProps[];\n    minY: number;\n    maxY: number;\n    guidesY: GuideLineProps[];\n}\n\nconst GuideInterval = 25;\n\nconst GuideLayer: React.VFC = () => {\n    const { nodes } = useContext(StructureContext);\n\n    const { minX, maxX, guidesX, minY, maxY, guidesY }: GuidePoint = useMemo(() => {\n        const guide: GuidePoint = {\n            maxX: Number.MIN_SAFE_INTEGER,\n            minX: Number.MAX_SAFE_INTEGER,\n            guidesX: [],\n            maxY: Number.MIN_SAFE_INTEGER,\n            minY: Number.MAX_SAFE_INTEGER,\n            guidesY: [],\n        };\n\n        const pointsX = new Set<number>();\n        const pointsY = new Set<number>();\n        Object.values(nodes).forEach(({ x, y }) => {\n            if (guide.maxX < x) {\n                guide.maxX = x;\n            }\n            if (guide.minX > x) {\n                guide.minX = x;\n            }\n            if (!pointsX.has(x)) {\n                pointsX.add(x);\n            }\n            if (guide.maxY < y) {\n                guide.maxY = y;\n            }\n            if (guide.minY > y) {\n                guide.minY = y;\n            }\n            if (!pointsY.has(y)) {\n                pointsY.add(y);\n            }\n        });\n\n        // ガイドの生成\n        if (pointsX.size > 1) {\n            const array = Array.from(pointsX).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideX_${i}`,\n                    start: [prev, guide.maxY + GuideInterval * 4],\n                    end: [current, guide.maxY + GuideInterval * 4],\n                };\n                prev = current;\n                guide.guidesX.push(props);\n            }\n        }\n        if (pointsY.size > 1) {\n            const array = Array.from(pointsY).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            const localX = Math.max(guide.minX - GuideInterval * 4, GuideInterval * 2);\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideY_${i}`,\n                    start: [localX, prev],\n                    end: [localX, current],\n                };\n                prev = current;\n                guide.guidesY.push(props);\n            }\n        }\n\n        return guide;\n    }, [nodes]);\n\n    const GlobalVerticalGuidePositionX = useMemo(() => {\n        if (minX !== Number.MAX_SAFE_INTEGER) {\n            return Math.max(GuideInterval, minX - GuideInterval * 5);\n        }\n        return 0;\n    }, [minX]);\n\n    const GlobalHorizontalGuidePositionY = useMemo(() => {\n        if (maxY !== Number.MIN_SAFE_INTEGER) {\n            return maxY + GuideInterval * 5;\n        }\n        return 0;\n    }, [maxY]);\n\n    return (\n        <Layer listening={false}>\n            {/* Horizontal */}\n            {minX !== Number.MAX_SAFE_INTEGER && maxX !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[minX, GlobalHorizontalGuidePositionY]}\n                    end={[maxX, GlobalHorizontalGuidePositionY]}\n                />\n            )}\n            {guidesX.map((props) => (\n                <GuideLine {...props} />\n            ))}\n            {/* Vertical */}\n            {minY !== Number.MAX_SAFE_INTEGER && maxY !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[GlobalVerticalGuidePositionX, minY]}\n                    end={[GlobalVerticalGuidePositionX, maxY]}\n                />\n            )}\n            {guidesY.map((props) => (\n                <GuideLine {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GuideLayer;\n","import { useContext } from 'react';\nimport { Layer } from 'react-konva';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { Beam, Force, Node } from '../shape';\n\nconst ShapeLayer: React.VFC = () => {\n    const { nodes, beams, forces } = useContext(StructureContext);\n\n    return (\n        <Layer>\n            {Object.entries(beams).map(([key, beam]) => (\n                <Beam key={key} {...beam} />\n            ))}\n            {Object.entries(nodes).map(([key, node]) => (\n                <Node key={key} {...node} />\n            ))}\n            {Object.entries(forces).map(([key, force]) => (\n                <Force key={key} {...force} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default ShapeLayer;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Dispatch, SetStateAction, useCallback, useContext } from 'react';\nimport { Stage } from 'react-konva';\nimport { CanvasTool, DOMSize } from '../../types/common';\nimport { Structure } from '../../types/shape';\nimport { useDraw } from './hook/draw';\nimport DrawLayer from './layer/DrawLayer';\nimport GridLayer from './layer/GridLayer';\nimport GuideLayer from './layer/GuideLayer';\nimport ShapeLayer from './layer/ShapeLayer';\nimport SelectProvider, { SelectContext } from './provider/SelectProvider';\nimport StructureProvider from './provider/StructureProvider';\n\nexport interface CanvasProps {\n    tool: CanvasTool;\n    structure: Structure;\n    size: DOMSize;\n    readonly?: boolean;\n    setStructure?: Dispatch<SetStateAction<Structure>>;\n}\n\nconst CanvasCore: React.VFC<CanvasProps> = ({\n    tool,\n    structure,\n    size,\n    readonly = false,\n    setStructure,\n}) => {\n    const { selected, setSelected } = useContext(SelectContext);\n    const { points, ...handlers } = useDraw({\n        disabled: readonly || tool !== 'pen',\n        structure,\n        setStructure,\n    });\n\n    const handleClick = useCallback(\n        (event: KonvaEventObject<PointerEvent>) => {\n            if (tool === 'select') {\n                setSelected([]);\n            }\n        },\n        [setSelected, tool]\n    );\n\n    return (\n        <Stage\n            width={size.width}\n            height={size.height}\n            {...handlers}\n            onClick={handleClick}\n            onTap={handleClick}\n        >\n            <StructureProvider\n                size={size}\n                structure={structure}\n                tool={tool}\n                setStructure={setStructure}\n            >\n                <SelectProvider value={{ selected, setSelected }}>\n                    <GridLayer />\n                    <GuideLayer />\n                    <ShapeLayer />\n                    <DrawLayer points={points} />\n                </SelectProvider>\n            </StructureProvider>\n        </Stage>\n    );\n};\n\nexport default CanvasCore;\n","import { Box } from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\nimport { CanvasTool, DOMSize } from '../../types/common';\nimport CanvasCore, { CanvasProps } from './core';\nimport SelectProvider from './provider/SelectProvider';\nimport { Shape } from './types';\n\ninterface Props extends Omit<CanvasProps, 'size' | 'tool'> {\n    tool?: CanvasTool;\n}\n\nconst Canvas: React.VFC<Props> = ({ tool = 'select', ...props }) => {\n    const [size, setSize] = useState<DOMSize>({ width: 0, height: 0 });\n    const [selected, setSelected] = useState<Shape[]>([]);\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    // 要素のリサイズを監視\n    useEffect(() => {\n        const observer = new ResizeObserver((entries) => {\n            const { width, height } = entries[0].contentRect;\n            setSize({\n                width,\n                height,\n            });\n        });\n\n        if (containerRef.current) {\n            observer.observe(containerRef.current);\n        }\n\n        return () => {\n            observer.disconnect();\n        };\n    }, []);\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{\n                width: 'auto',\n                height: '100%',\n                backgroundColor: '#ffffff',\n                overscrollBehavior: 'contain',\n            }}\n        >\n            <SelectProvider value={{ selected, setSelected }}>\n                <CanvasCore size={size} tool={tool} {...props} />\n            </SelectProvider>\n        </Box>\n    );\n};\n\nexport default Canvas;\n","import { Box } from '@mui/material';\nimport { useContext, useState } from 'react';\nimport { ConfigurationContext } from '../providers/ConfigurationProvider';\nimport { emptyStructure } from '../types/shape';\nimport Canvas from './Canvas';\n\nconst CanvasContainer: React.VFC = () => {\n    const { tool } = useContext(ConfigurationContext);\n    const [structure, setStructure] = useState(emptyStructure);\n\n    return (\n        <Box\n            sx={{\n                boxSizing: 'border-box',\n                ml: 1,\n                mb: 1,\n                flex: 1,\n                border: (theme) => `1px solid ${theme.palette.divider}`,\n                borderRadius: 1,\n                overflow: 'hidden',\n            }}\n        >\n            <Canvas tool={tool} structure={structure} setStructure={setStructure} />\n        </Box>\n    );\n};\n\nexport default CanvasContainer;\n","import { Typography } from '@mui/material';\n\nconst hash = process.env.REACT_APP_GIT_COMMIT_HASH?.substring(0, 7) ?? '';\nconst date = process.env.REACT_APP_GIT_COMMIT_DATE ?? '';\nconst version = process.env.REACT_APP_PACKAGE_VERSION ?? '';\n\nconst Version: React.VFC = () => {\n    return (\n        <Typography\n            variant=\"caption\"\n            sx={{ ml: 2 }}\n        >{`ver ${version} (${hash}: ${date})`}</Typography>\n    );\n};\n\nexport default Version;\n","import { AppBar, Toolbar, Typography } from '@mui/material';\nimport Version from './Version';\n\nconst Header: React.VFC = () => {\n    return (\n        <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\">\n                    Drawing Sample\n                </Typography>\n                <Version />\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Header;\n","export interface DOMSize {\n    width: number;\n    height: number;\n}\n\nexport const CanvasTools = ['select', 'pen', 'force', 'trapezoid', 'delete'] as const;\nexport type CanvasTool = typeof CanvasTools[number];\nexport const isCanvasTool = (item: unknown): item is CanvasTool => {\n    if (typeof item === 'string') {\n        return CanvasTools.some((tool) => tool === item);\n    }\n    return false;\n};\n","import { ArrowDownward, Delete, Edit, PanToolAlt, Texture } from '@mui/icons-material';\nimport { Stack, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { MouseEvent, ReactElement, useCallback, useContext } from 'react';\nimport { ConfigurationContext } from '../../providers/ConfigurationProvider';\nimport { CanvasTool, isCanvasTool } from '../../types/common';\n\ninterface Props {\n    tool: CanvasTool;\n    onChange: (tool: CanvasTool) => void;\n}\n\ninterface ButtonProps {\n    tool: CanvasTool;\n    icon: ReactElement;\n    label: string;\n}\n\nconst ToolboxButtons: Readonly<Record<CanvasTool, ButtonProps>> = {\n    select: {\n        tool: 'select',\n        icon: <PanToolAlt />,\n        label: '選択',\n    },\n    pen: {\n        tool: 'pen',\n        icon: <Edit />,\n        label: '梁要素の描画',\n    },\n    force: {\n        tool: 'force',\n        icon: <ArrowDownward />,\n        label: '集中荷重の追加',\n    },\n    trapezoid: {\n        tool: 'trapezoid',\n        icon: <Texture />,\n        label: '分布荷重の追加',\n    },\n    delete: {\n        tool: 'delete',\n        icon: <Delete />,\n        label: '要素の削除',\n    },\n};\n\nconst ToolboxCore: React.VFC<Props> = ({ tool, onChange }) => {\n    /**\n     * ツールの変更\n     */\n    const handleChange = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isCanvasTool(newValue)) {\n                onChange(newValue);\n            }\n        },\n        [onChange]\n    );\n\n    return (\n        <Stack sx={{ width: 160 }} alignItems=\"flex-start\">\n            <Typography variant=\"caption\">Toolbox</Typography>\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={tool}\n                exclusive\n                fullWidth\n                onChange={handleChange}\n            >\n                {Object.entries(ToolboxButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n        </Stack>\n    );\n};\n\nconst Toolbox: React.VFC = () => {\n    const { tool, setTool } = useContext(ConfigurationContext);\n    return <ToolboxCore tool={tool} onChange={setTool} />;\n};\n\nexport default Toolbox;\n","import { Box } from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport { DOMSize } from '../types/common';\nimport CanvasContainer from './CanvasContainer';\nimport Header from './Header';\nimport Toolbox from './Toolbox';\n\nconst Layout: React.VFC = () => {\n    const [windowRect, setWindowRect] = useState<DOMSize>({ width: 0, height: 0 });\n\n    const fitWindowSize = useCallback(() => {\n        const { innerHeight, innerWidth } = window;\n        setWindowRect({\n            height: innerHeight,\n            width: innerWidth,\n        });\n    }, []);\n\n    useEffect(() => {\n        fitWindowSize();\n        window.addEventListener('resize', fitWindowSize);\n\n        return () => {\n            window.removeEventListener('resize', fitWindowSize);\n        };\n    }, [fitWindowSize]);\n\n    return (\n        <Box sx={{ ...windowRect, overflow: 'hidden' }}>\n            <Header />\n            <Box\n                sx={{\n                    boxSizing: 'border-box',\n                    width: 'auto',\n                    height: 'calc(100% - 48px)',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    flexWrap: 'nowrap',\n                    alignItems: 'stretch',\n                    pt: 1,\n                    px: 1,\n                }}\n            >\n                <Toolbox />\n                <CanvasContainer />\n            </Box>\n        </Box>\n    );\n};\n\nexport default Layout;\n","import { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport React from 'react';\nimport ConfigurationProvider from '../providers/ConfigurationProvider';\nimport Layout from './Layout';\n\nconst theme = createTheme();\n\nconst App: React.VFC = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <ConfigurationProvider>\n                <CssBaseline />\n                <Layout />\n            </ConfigurationProvider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}