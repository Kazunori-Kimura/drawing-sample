{"version":3,"sources":["components/Canvas/popup/pins/pin_1.svg","providers/ConfigurationProvider.tsx","types/shape.ts","types/common.ts","components/Canvas/util/vector.ts","components/Canvas/util/common.ts","components/Canvas/util/structure.ts","components/Canvas/provider/DrawProvider.tsx","components/Canvas/layer/DrawLayer.tsx","components/Canvas/provider/StructureProvider.tsx","components/Canvas/layer/GridLayer.tsx","components/Canvas/provider/SelectProvider.tsx","components/Canvas/shape/Beam.tsx","components/Canvas/provider/PopupProvider.tsx","components/Canvas/shape/Force.tsx","components/Canvas/shape/Guide.tsx","components/Canvas/shape/Node.tsx","components/Canvas/shape/Trapezoid.tsx","components/Canvas/layer/GuideLayer.tsx","components/Canvas/popup/ForceEditor.tsx","components/Canvas/popup/pins/pin_2.svg","components/Canvas/popup/pins/pin_3.svg","components/Canvas/popup/pins/pin_4.svg","components/Canvas/popup/PinSelector.tsx","components/Canvas/popup/TrapezoidEditor.tsx","components/Canvas/popup/index.tsx","components/Canvas/layer/ShapeLayer.tsx","components/Canvas/core.tsx","components/Canvas/index.tsx","components/CanvasContainer.tsx","components/Version.tsx","components/Header.tsx","components/Toolbox/index.tsx","components/Layout.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["_path","ConfigurationContext","createContext","undefined","ConfigurationProvider","children","useState","tool","setTool","Provider","value","NodePinTypes","emptyStructure","unit","force","length","nodes","beams","forces","trapezoids","CanvasTools","vX","Vector","vY","lerp","v1","v2","alpha","dir","clone","subtract","normalize","distance","mv","multiplyScalar","add","verticalNormalizeVector","v","y","x","dot","invert","data","JSON","parse","stringify","round","figure","n","result","Math","snapping","snapSize","i","snap","createNode","id","uuid","DrawContext","DrawProvider","readonly","points","setPoints","structure","setStructure","isDrawing","useRef","beamRef","disabled","useMemo","handlePointerDown","useCallback","event","target","attrs","beamId","beamPoints","item","Array","isArray","every","current","point","getStage","getPointerPosition","handlePointerMove","state","makeBeam","start","end","edgeI","edgeJ","nodeI","n1","find","node","push","nodeJ","n2","beam","name","createBeam","makeTrapezoid","trapezoid","pi","slice","pj","bi","bj","beamLength","beamDirection","ps","pe","disStart","disEnd","ti","angle","r","cos","tj","distanceI","distanceJ","forceI","forceJ","isGlobal","createTrapezoid","handlePointerUp","onPointerDown","onPointerMove","onPointerUp","DrawLayer","color","strokeWidth","stroke","ConnectedDrawLayer","useContext","StructureContext","StructureProvider","size","gridSize","map","forEach","items","average","reduce","p","c","forceRatio","props","addForce","params","createForce","deleteForce","index","findIndex","splice","deleteTrapezoid","deleteBeam","exists","some","j","filter","defaultLineProps","dash","listening","GridLayer","horizontalLines","lines","count","height","width","verticalLines","SelectContext","SelectProvider","selected","setSelected","isSelected","type","select","toggle","Beam","onDelete","onSelect","labelPosition","setLabelPosition","labelWidth","setLabelWidth","labelAngle","setLabelAngle","guidePoints","setGuidePoints","viRef","vjRef","handleClick","cancelBubble","useEffect","vi","vj","label","angleDeg","guideDir","guideI","guideJ","onClick","onTap","rotation","text","fontSize","fill","align","wrap","ellipsis","Guide","ConnectedBeam","handleAddForce","vp","createForceParams","handleDelete","handleSelect","PopupContext","PopupProvider","popupType","setPopupType","popupPosition","setPopupPosition","popupParams","setPopupParams","open","position","close","top","left","Force","onEdit","setDistance","setRotation","tail","vertical","arrowLength","head","max","handleLabelClick","handleLabelDoubleClick","pointerLength","pointerWidth","offsetX","onDblClick","onDblTap","ConnectedForce","handleEdit","defaultGuideProps","defaultGuideArrowProps","pointerAtBeginning","GuideLine","v1Ref","v2Ref","basis","setBasis","dist","Pins","free","pin","pinX","pinZ","fixX","fix","Node","draggable","onChange","onCommit","isDragging","setIsDragging","pointRef","timerRef","imageUrl","process","useImage","image","redraw","handleDragStart","handleDragMove","handleDragEnd","clearInterval","handleDoubleClick","timer","setInterval","radius","onDragStart","onDragMove","onDragEnd","_useStrictMode","offsetY","ConnectedNode","Boolean","handleChange","px","py","values","handleCommit","targetId","newId","defaultArrowProps","defaultLabelProps","Trapezoid","arrows","setArrows","line","setLine","labelI","setLabelI","labelJ","setLabelJ","vI","vJ","vd","rotateDeg","direction","interval","getInsidePoints","slope","NaN","intercept","isNaN","insideArrows","pd","pu","targetLine","slope1","intercept1","slope2","intercept2","rangeX","sort","a","b","rangeY","err","console","error","intercectPoint","arrow","guidePosition","gi","gj","ConnectedTrapezoid","GuideInterval","GuideLayer","guide","maxX","Number","MIN_SAFE_INTEGER","minX","MAX_SAFE_INTEGER","guidesX","maxY","minY","guidesY","pointsX","Set","pointsY","Object","has","array","from","prev","key","localX","GlobalVerticalGuidePositionX","GlobalHorizontalGuidePositionY","ForceEditor","onClose","setValue","setError","handleSubmit","preventDefault","currentTarget","checkValidity","num","parseFloat","errorMessage","Paper","Stack","spacing","sx","component","autoComplete","noValidate","onSubmit","TextField","variant","margin","required","fullWidth","InputProps","endAdornment","InputAdornment","helperText","justifyContent","Button","ConnectedForceEditor","isForce","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPin1","_ref","svgRef","title","titleId","viewBox","xmlns","ref","d","_circle","_circle2","_line","ForwardRef","SvgPin2","cx","cy","x1","y1","x2","y2","SvgPin3","style","_line2","_line3","_line4","_line5","SvgPin4","PinButtons","icon","SvgIcon","transform","defaultButtonProps","alignItems","PinSelector","setPin","_","newValue","ToggleButtonGroup","orientation","exclusive","entries","ToggleButton","Typography","ml","ConnectedPinSelector","isNode","validateForce","val","validateAngle","parseInt","TrapezoidEditor","setValues","errors","setErrors","value1","valid1","value2","valid2","value3","valid3","valid","parseFormValues","log","error1","error2","handleChangeIsGlobal","checked","toFormValues","FormControlLabel","control","Checkbox","ConnectedTrapezoidEditor","isTrapezoid","Popup","divProps","zIndex","handleChangeForce","handleChangeTrapezoid","handleChangeNode","ShapeLayer","CanvasCore","drawContextValues","Canvas","setSize","containerRef","observer","ResizeObserver","contentRect","observe","disconnect","Box","backgroundColor","overscrollBehavior","CanvasContainer","boxSizing","mb","flex","border","theme","palette","divider","borderRadius","overflow","hash","substring","date","version","Version","Header","AppBar","Toolbar","ToolboxButtons","PanToolAlt","pen","Edit","ArrowDownward","Texture","delete","Delete","ToolboxCore","Toolbox","Layout","windowRect","setWindowRect","fitWindowSize","window","innerHeight","innerWidth","addEventListener","removeEventListener","display","flexDirection","flexWrap","pt","createTheme","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.346b86c3.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80 0 L30 80 L130 80 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin1);\nexport default __webpack_public_path__ + \"static/media/pin_1.92d54adc.svg\";\nexport { ForwardRef as ReactComponent };","import { createContext, useState } from 'react';\nimport { CanvasTool } from '../types/common';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface IConfigurationContext {\n    tool: CanvasTool;\n    setTool: (tool: CanvasTool) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const ConfigurationContext = createContext<IConfigurationContext>(undefined!);\n\nconst ConfigurationProvider: React.VFC<Props> = ({ children }) => {\n    const [tool, setTool] = useState<CanvasTool>('select');\n\n    return (\n        <ConfigurationContext.Provider value={{ tool, setTool }}>\n            {children}\n        </ConfigurationContext.Provider>\n    );\n};\n\nexport default ConfigurationProvider;\n","/**\n * 単位: 力\n */\nexport const ForceUnitValues = ['N', 'kN'] as const;\n\n/**\n * 単位: 長さ\n */\nexport const LengthUnitValues = ['mm', 'cm', 'm'] as const;\n\nexport type ForceUnitType = typeof ForceUnitValues[number];\nexport type LengthUnitType = typeof LengthUnitValues[number];\n\n/**\n * 単位\n */\nexport interface Unit {\n    force: ForceUnitType;\n    length: LengthUnitType;\n}\n\nexport const NodePinTypes = ['free', 'pin', 'pinX', 'pinZ', 'fixX', 'fix'] as const;\nexport type NodePinType = typeof NodePinTypes[number];\n\nexport const isNodePinType = (item: unknown): item is NodePinType => {\n    if (typeof item === 'string') {\n        return NodePinTypes.some((type) => type === item);\n    }\n    return false;\n};\n\nexport interface Node {\n    id: string;\n    x: number;\n    y: number;\n    pin?: NodePinType;\n}\n\nexport const isNode = (item: unknown): item is Node => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.x === 'number' &&\n            typeof value.y === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Beam {\n    id: string;\n    name: string;\n    nodeI: string;\n    nodeJ: string;\n}\n\nexport interface Force {\n    id: string;\n    name: string;\n    beam: string;\n    force: number;\n    // i端からの距離 (0 〜 1)\n    distanceI: number;\n}\nexport const isForce = (item: unknown): item is Force => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.name === 'string' &&\n            typeof value.beam === 'string' &&\n            typeof value.force === 'number' &&\n            typeof value.distanceI === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Trapezoid {\n    id: string;\n    name: string;\n    beam: string;\n    // kN/m\n    forceI: number;\n    // kN/m\n    forceJ: number;\n    // i端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceI: number;\n    // j端からの距離 (0 〜 1, distanceI + distanceJ <= 1)\n    distanceJ: number;\n    // 角度、デフォルト 90度、-179 〜 180 度の間で指定 (-180 = 180)\n    angle?: number;\n    // 全体座標系に垂直か、部材に垂直か デフォルト false\n    isGlobal?: boolean;\n}\n\nexport const isTrapezoid = (item: unknown): item is Trapezoid => {\n    if (item && typeof item === 'object') {\n        const value = item as Record<string, unknown>;\n        return (\n            typeof value.id === 'string' &&\n            typeof value.name === 'string' &&\n            typeof value.beam === 'string' &&\n            typeof value.forceI === 'number' &&\n            typeof value.distanceI === 'number' &&\n            typeof value.forceJ === 'number' &&\n            typeof value.distanceJ === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Structure {\n    unit: Unit;\n    nodes: Node[];\n    beams: Beam[];\n    forces: Force[];\n    trapezoids: Trapezoid[];\n}\n\nexport type StructureFieldType = keyof Omit<Structure, 'unit'>;\n\nexport const defaultUnit: Unit = {\n    force: 'kN',\n    length: 'm',\n};\n\nexport const emptyStructure: Structure = {\n    unit: defaultUnit,\n    nodes: [],\n    beams: [],\n    forces: [],\n    trapezoids: [],\n};\n","export interface DOMSize {\n    width: number;\n    height: number;\n}\n\nexport const CanvasTools = ['select', 'pen', 'force', 'trapezoid', 'delete'] as const;\nexport type CanvasTool = typeof CanvasTools[number];\nexport const isCanvasTool = (item: unknown): item is CanvasTool => {\n    if (typeof item === 'string') {\n        return CanvasTools.some((tool) => tool === item);\n    }\n    return false;\n};\n\nexport const isNumberArray = (item: unknown): item is number[] => {\n    if (Array.isArray(item)) {\n        if (item.length === 0) {\n            return true;\n        }\n\n        return item.every((value) => typeof value === 'number');\n    }\n    return false;\n};\n","import Vector from 'victor';\n\nexport { Vector };\n\n// X方向のベクトル\nexport const vX = new Vector(1, 0);\n// Y方向のベクトル\nexport const vY = new Vector(0, 1);\n\n/**\n * v1 と v2 の間にある vp を取得する\n * @param v1\n * @param v2\n * @param alpha\n * @returns\n */\nexport const lerp = (v1: Vector, v2: Vector, alpha: number): Vector => {\n    if (alpha >= 1) {\n        return v2;\n    }\n    if (alpha <= 0) {\n        return v1;\n    }\n    const dir = v2.clone().subtract(v1).normalize();\n    const distance = v1.distance(v2);\n    const mv = dir.multiplyScalar(distance * alpha);\n    return v1.clone().add(mv);\n};\n\n/**\n * v1 と v2 に直交する単位ベクトルを返す\n * @param v1\n * @param v2\n * @returns\n */\nexport const verticalNormalizeVector = (v1: Vector, v2: Vector): Vector => {\n    const dir = v2.clone().subtract(v1).normalize();\n    const v = new Vector(dir.y, dir.x * -1).normalize();\n\n    const value = vY.dot(v);\n    if (value > 0) {\n        v.invert();\n    }\n\n    return v;\n};\n","import { Point } from '../types';\nimport { lerp, Vector } from './vector';\n\nexport const clone = <T>(data: T): T => {\n    return JSON.parse(JSON.stringify(data)) as T;\n};\n\nexport const round = (value: number, figure = 3): number => {\n    const n = 10 ** figure;\n    const result = Math.round(value * n) / n;\n    return result;\n};\n\nconst snapping = (value: number, snapSize = 25): number => {\n    const n = value / snapSize;\n    const i = Math.round(n) * snapSize;\n    return i;\n};\n\nexport const DEFAULT_SNAP_SIZE = 25;\n\nexport const snap = ([x, y]: [number, number], snapSize = DEFAULT_SNAP_SIZE): [number, number] => {\n    return [snapping(x, snapSize), snapping(y, snapSize)];\n};\n\nconst InsideArrowCount = 10;\nconst InsideArrowInterval = 25;\nconst InsideArrowMinInterval = 10;\n\n/**\n * 開始点から終了点まで等間隔に点を取る\n * @param start\n * @param end\n * @param direction\n * @returns\n */\nexport const getInsidePoints = (start: Vector, end: Vector, direction: Vector): Vector[] => {\n    const points: Vector[] = [];\n    // 2点間の距離\n    const distance = start.distance(end);\n    // 分割数\n    let count = InsideArrowCount;\n    // 間隔\n    let interval = distance / (count + 1);\n    while (interval < InsideArrowInterval && count > 0) {\n        count--;\n        interval = distance / (count + 1);\n    }\n\n    if (count > 0) {\n        // 始点から interval の間隔で count 個 点を取る\n        for (let i = 1; i <= count; i++) {\n            const point = start.clone().add(direction.clone().multiplyScalar(interval * i));\n            points.push(point);\n        }\n    } else {\n        // 半分にしてみる\n        interval = distance / 2;\n        if (interval >= InsideArrowMinInterval) {\n            // 半分の位置に点を置く\n            const point = lerp(start, end, 0.5);\n            points.push(point);\n        }\n    }\n\n    return points;\n};\n\n/**\n * 開始点からある方向に伸ばした線が対象となる線と交わる点を取得する\n * @param targetLine 対象となる Line [始点、終点、傾き、切片]\n * @param start 開始点\n * @param dir 方向\n * @returns 交点（なければ null）\n */\nexport const intercectPoint = (\n    targetLine: [Vector, Vector, number, number],\n    start: Vector,\n    dir: Vector\n): Point | null => {\n    const [pi, pj, slope1, intercept1] = targetLine;\n    let point: Point | null = null;\n    try {\n        // dir の傾き\n        const end: Vector = start.clone().add(dir);\n        const slope2 = end.x - start.x !== 0 ? (end.y - start.y) / (end.x - start.x) : NaN;\n        // dir の切片\n        const intercept2 = isNaN(slope2) ? NaN : start.y - slope2 * start.x;\n\n        if (slope1 === slope2) {\n            // 平行なので交点なし\n            return null;\n        }\n\n        if (!isNaN(slope1) && !isNaN(slope2)) {\n            // どちらも垂直でない\n            const px = (intercept2 - intercept1) / (slope1 - slope2);\n            const py = slope1 * px + intercept1;\n\n            point = [px, py];\n        } else if (isNaN(slope1)) {\n            // 対象の Line が垂直\n            const px = pi.x;\n            const py = px * slope2 + intercept2;\n\n            point = [px, py];\n        } else if (isNaN(slope2)) {\n            // dir が垂直\n            const px = start.x;\n            const py = px * slope1 + intercept1;\n\n            point = [px, py];\n        }\n\n        // 交点が Line の内側？\n        if (point) {\n            const [x, y] = point;\n            const rangeX = [pi.x, pj.x].sort((a, b) => a - b);\n            const rangeY = [pi.y, pj.y].sort((a, b) => a - b);\n            if (x >= rangeX[0] && x <= rangeX[1] && y >= rangeY[0] && y <= rangeY[1]) {\n                return point;\n            }\n        }\n        return null;\n    } catch (err) {\n        console.error(err);\n    }\n\n    return null;\n};\n","import { v4 as uuid } from 'uuid';\nimport { Beam, Force, Node, Structure, Trapezoid } from '../../../types/shape';\nimport { round } from './common';\nimport { Vector } from './vector';\n\n/**\n * 節点の作成\n * @param x\n * @param y\n * @returns\n */\nexport const createNode = (x: number, y: number): Node => {\n    return {\n        id: uuid(),\n        x,\n        y,\n    };\n};\n\nexport const createBeam = (name: string, nodeI: string, nodeJ: string): Beam => {\n    return {\n        id: uuid(),\n        name,\n        nodeI,\n        nodeJ,\n    };\n};\n\ntype CreateForceParams = Omit<Force, 'id'>;\n\nexport const createForce = (params: CreateForceParams): Force => {\n    return {\n        ...params,\n        id: uuid(),\n    };\n};\n\nexport const createForceParams = (\n    beam: string,\n    vi: Vector,\n    vj: Vector,\n    vp: Vector\n): Omit<Force, 'id' | 'name'> => {\n    const beamLength = vi.distance(vj);\n    // クリック位置までの距離\n    const distance = vi.distance(vp);\n\n    return {\n        beam,\n        force: 10,\n        distanceI: round(distance / beamLength),\n    };\n};\n\nexport const replaceNode = (structure: Structure, targetId: string, newId: string): Structure => {\n    structure.beams.forEach((beam) => {\n        if (beam.nodeI === targetId) {\n            beam.nodeI = newId;\n        }\n        if (beam.nodeJ === targetId) {\n            beam.nodeJ = newId;\n        }\n    });\n    return structure;\n};\n\nexport const createTrapezoid = (\n    start: number[],\n    end: number[],\n    beamId: string,\n    beamPoints: number[]\n): Trapezoid => {\n    // 梁要素の情報\n    const pi = beamPoints.slice(0, 2);\n    const pj = beamPoints.slice(-2);\n    const bi = new Vector(pi[0], pi[1]);\n    const bj = new Vector(pj[0], pj[1]);\n    const beamLength = bi.distance(bj);\n    const beamDirection = bj.clone().subtract(bi).normalize();\n\n    // ドラッグ開始点/終了点\n    let ps = new Vector(start[0], start[1]);\n    let pe = new Vector(end[0], end[1]);\n    // 開始点と終了点のどちらが i端に近い？\n    let disStart = bi.distance(ps);\n    let disEnd = bi.distance(pe);\n    if (disStart > disEnd) {\n        // 終了点の方が i端に近ければ入れ替える\n        [ps, pe] = [pe, ps];\n        [disStart, disEnd] = [disEnd, disStart];\n    }\n\n    // 分布荷重の開始点を梁要素上の座標に取り直す\n    const ti = bi.clone().add(beamDirection.clone().multiplyScalar(disStart));\n    // ドラッグ方向\n    const dir = pe.clone().subtract(ti).normalize();\n    // 梁要素とドラッグ方向が成す角度\n    const angle = beamDirection.angle() - dir.angle();\n    // 開始点からドラッグ終了点までの長さ\n    const dragLength = ti.distance(pe);\n    // 角度と長さから分布荷重の終了点を計算する\n    const r = dragLength * Math.cos(angle);\n    const tj = ti.clone().add(beamDirection.clone().multiplyScalar(r));\n    // j端から分布荷重の終了点までの距離を取り直す\n    disEnd = bj.distance(tj);\n\n    // i端から開始点までの比率\n    const distanceI = round(disStart / beamLength, 3);\n    const distanceJ = round(disEnd / beamLength, 3);\n\n    const trapezoid: Trapezoid = {\n        id: uuid(),\n        name: 'Trapezoid_N', //仮に名前を設定\n        beam: beamId,\n        forceI: 10,\n        forceJ: 10,\n        distanceI,\n        distanceJ,\n        angle: 90,\n        isGlobal: false,\n    };\n\n    return trapezoid;\n};\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport {\n    createContext,\n    Dispatch,\n    ReactNode,\n    SetStateAction,\n    useCallback,\n    useMemo,\n    useRef,\n} from 'react';\nimport { isNumberArray } from '../../../types/common';\nimport { CanvasProps } from '../core';\nimport { clone, createBeam, createNode, createTrapezoid, DEFAULT_SNAP_SIZE, snap } from '../util';\n\ninterface DrawEventHandlers {\n    onPointerDown: (event: KonvaEventObject<Event>) => void;\n    onPointerMove: (event: KonvaEventObject<Event>) => void;\n    onPointerUp: (event: KonvaEventObject<Event>) => void;\n}\n\ninterface DrawContextValue extends Omit<CanvasProps, 'size'> {\n    points: number[];\n    setPoints: Dispatch<SetStateAction<number[]>>;\n}\n\ntype IDrawContext = DrawContextValue & DrawEventHandlers;\n\ninterface Props {\n    value: DrawContextValue;\n    children: ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const DrawContext = createContext<IDrawContext>(undefined!);\n\ntype BeamAttrs = {\n    id: string;\n    points: number[];\n};\n\nconst DrawProvider: React.VFC<Props> = ({\n    value: { tool, readonly, points, setPoints, structure, setStructure },\n    children,\n}) => {\n    const isDrawing = useRef<boolean>();\n    const beamRef = useRef<BeamAttrs>();\n\n    const disabled = useMemo(() => {\n        if (!readonly && typeof setStructure !== 'undefined') {\n            return !(tool === 'pen' || tool === 'trapezoid');\n        }\n        return true;\n    }, [readonly, setStructure, tool]);\n\n    const handlePointerDown = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n\n            if (tool === 'trapezoid') {\n                // 梁要素の選択でなければ無視する\n                if (event.target.attrs['type'] !== 'beam') {\n                    return;\n                }\n                const beamId = event.target.attrs['id'];\n                const beamPoints = event.target.attrs['points'];\n                if (isNumberArray(beamPoints) && typeof beamId === 'string') {\n                    beamRef.current = {\n                        id: beamId,\n                        points: beamPoints,\n                    };\n                }\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                isDrawing.current = true;\n                setPoints([point.x, point.y]);\n            }\n        },\n        [disabled, setPoints, tool]\n    );\n\n    const handlePointerMove = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n            if (!isDrawing.current) {\n                return;\n            }\n\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                setPoints((state) => [...state, point.x, point.y]);\n            }\n        },\n        [disabled, setPoints]\n    );\n\n    const makeBeam = useCallback(\n        (start: number[], end: number[]) => {\n            if (setStructure) {\n                // スナップさせる\n                const edgeI = snap([start[0], start[1]], DEFAULT_SNAP_SIZE);\n                const edgeJ = snap([end[0], end[1]], DEFAULT_SNAP_SIZE);\n\n                setStructure((structure) => {\n                    const data = clone(structure);\n                    const nodeI = createNode(...edgeI);\n                    // 同一座標の節点が存在するか？\n                    const n1 = data.nodes.find((node) => node.x === nodeI.x && node.y === nodeI.y);\n                    if (n1) {\n                        // 既存の節点を使用する\n                        nodeI.id = n1.id;\n                    } else {\n                        // 新規追加\n                        data.nodes.push(nodeI);\n                    }\n\n                    const nodeJ = createNode(...edgeJ);\n                    const n2 = data.nodes.find((node) => node.x === nodeJ.x && node.y === nodeJ.y);\n                    if (n2) {\n                        // 既存の節点を使用する\n                        nodeJ.id = n2.id;\n                    } else {\n                        // 新規追加\n                        data.nodes.push(nodeJ);\n                    }\n\n                    const name = `Beam_${data.beams.length + 1}`;\n                    const beam = createBeam(name, nodeI.id, nodeJ.id);\n                    data.beams.push(beam);\n\n                    return data;\n                });\n            }\n        },\n        [setStructure]\n    );\n\n    const makeTrapezoid = useCallback(\n        (start: number[], end: number[], attrs: BeamAttrs) => {\n            if (setStructure) {\n                // 分布荷重の登録\n                const trapezoid = createTrapezoid(start, end, attrs.id, attrs.points);\n                setStructure((structure) => {\n                    const data = clone(structure);\n\n                    // 分布荷重を追加\n                    const name = `Trapezoid_${data.trapezoids.length + 1}`;\n                    trapezoid.name = name;\n                    data.trapezoids.push(trapezoid);\n\n                    return data;\n                });\n            }\n        },\n        [setStructure]\n    );\n\n    const handlePointerUp = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (disabled) {\n                return;\n            }\n\n            if (isDrawing.current) {\n                isDrawing.current = false;\n\n                if (points.length >= 4) {\n                    // 開始点\n                    const start = points.slice(0, 2);\n                    // 終了点\n                    const end = points.slice(-2);\n\n                    if (tool === 'pen') {\n                        // 梁要素の生成\n                        makeBeam(start, end);\n                    } else if (tool === 'trapezoid' && beamRef.current) {\n                        // 分布荷重の生成\n                        makeTrapezoid(start, end, beamRef.current);\n                    }\n\n                    setPoints([]);\n                    beamRef.current = undefined;\n                }\n            }\n        },\n        [disabled, makeBeam, makeTrapezoid, points, setPoints, tool]\n    );\n\n    return (\n        <DrawContext.Provider\n            value={{\n                tool,\n                readonly,\n                points,\n                setPoints,\n                structure,\n                setStructure,\n                onPointerDown: handlePointerDown,\n                onPointerMove: handlePointerMove,\n                onPointerUp: handlePointerUp,\n            }}\n        >\n            {children}\n        </DrawContext.Provider>\n    );\n};\n\nexport default DrawProvider;\n","import { useContext, useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { CanvasTool } from '../../../types/common';\nimport { DrawContext } from '../provider/DrawProvider';\n\ninterface Props {\n    tool: CanvasTool;\n    points: number[];\n}\n\nconst DrawLayer: React.VFC<Props> = ({ tool, points }) => {\n    const color = useMemo(() => {\n        switch (tool) {\n            case 'pen':\n                return 'blue';\n            case 'trapezoid':\n                return 'red';\n            default:\n                return 'black';\n        }\n    }, [tool]);\n\n    return (\n        <Layer>\n            <Line points={points} strokeWidth={3} stroke={color} />\n        </Layer>\n    );\n};\n\nconst ConnectedDrawLayer: React.VFC = () => {\n    const { tool, points } = useContext(DrawContext);\n    return <DrawLayer tool={tool} points={points} />;\n};\n\nexport default ConnectedDrawLayer;\n","import { createContext, Dispatch, SetStateAction, useCallback, useMemo } from 'react';\nimport { CanvasTool, DOMSize } from '../../../types/common';\nimport { Force, Node, Structure } from '../../../types/shape';\nimport { BeamProps, ForceProps, TrapezoidProps } from '../types';\nimport { clone, createForce } from '../util';\n\ninterface Props {\n    children: React.ReactNode;\n    size: DOMSize;\n    gridSize?: number;\n    snapSize?: number;\n    tool?: CanvasTool;\n    structure: Structure;\n    setStructure?: Dispatch<SetStateAction<Structure>>;\n}\n\ntype AddForceFunction = (params: Omit<Force, 'id' | 'name'>) => void;\n\ninterface IStructureContext {\n    // 選択されているツール\n    tool: CanvasTool;\n    // キャンバスのサイズ\n    size: DOMSize;\n    // グリッドの幅\n    gridSize: number;\n    // スナップする単位\n    snapSize: number;\n    // 単位変換された構造データ\n    structure: Structure;\n    // Node の Map\n    nodes: Record<string, Node>;\n    // Beam の Map\n    beams: Record<string, BeamProps>;\n    // force の Map\n    forces: Record<string, ForceProps>;\n    // trapezoid の Map\n    trapezoids: Record<string, TrapezoidProps>;\n    // 集中荷重の追加\n    addForce: AddForceFunction;\n    // 集中荷重の削除\n    deleteForce: (id: string) => void;\n    // 分布荷重の削除\n    deleteTrapezoid: (id: string) => void;\n    // 梁要素の削除\n    deleteBeam: (id: string) => void;\n    // 構造データの更新\n    setStructure?: Dispatch<SetStateAction<Structure>>;\n}\n\n// Context | React TypeScript Cheatsheets\n// https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/context/\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const StructureContext = createContext<IStructureContext>(undefined!);\n\nconst StructureProvider: React.VFC<Props> = ({\n    children,\n    tool = 'select',\n    size,\n    gridSize = 25,\n    snapSize = 25,\n    structure,\n    setStructure,\n}) => {\n    const nodes = useMemo(() => {\n        const map: Record<string, Node> = {};\n\n        structure.nodes.forEach((node) => {\n            map[node.id] = node;\n        });\n\n        return map;\n    }, [structure.nodes]);\n\n    const beams = useMemo(() => {\n        const map: Record<string, BeamProps> = {};\n\n        structure.beams.forEach(({ nodeI, nodeJ, ...beam }) => {\n            const item: BeamProps = {\n                ...beam,\n                nodeI: nodes[nodeI],\n                nodeJ: nodes[nodeJ],\n            };\n            map[beam.id] = item;\n        });\n\n        return map;\n    }, [nodes, structure.beams]);\n\n    const forces = useMemo(() => {\n        const { forces: items } = structure;\n        const map: Record<string, ForceProps> = {};\n\n        if (items.length > 0) {\n            const total = items.map((item) => item.force).reduce((p, c) => p + c);\n            const average = total / items.length;\n            items.forEach(({ beam, force: value, ...force }) => {\n                const forceRatio = value / average;\n                map[force.id] = {\n                    ...force,\n                    force: value,\n                    forceRatio,\n                    beam: beams[beam],\n                };\n            });\n        }\n\n        return map;\n    }, [beams, structure]);\n\n    const trapezoids = useMemo(() => {\n        const { trapezoids: items } = structure;\n        const map: Record<string, TrapezoidProps> = {};\n\n        items.forEach(({ beam, ...props }) => {\n            map[props.id] = {\n                ...props,\n                beam: beams[beam],\n            };\n        });\n\n        return map;\n    }, [beams, structure]);\n\n    const addForce = useCallback(\n        (params: Omit<Force, 'id' | 'name'>) => {\n            const data = clone(structure);\n            const name = `Force_${data.forces.length + 1}`;\n            const force = createForce({ name, ...params });\n            data.forces.push(force);\n            setStructure && setStructure(data);\n        },\n        [setStructure, structure]\n    );\n\n    const deleteForce = useCallback(\n        (id: string) => {\n            const index = structure.forces.findIndex(({ id: itemId }) => itemId === id);\n            if (index >= 0) {\n                const data = clone(structure);\n                data.forces.splice(index, 1);\n                setStructure && setStructure(data);\n            }\n        },\n        [setStructure, structure]\n    );\n\n    const deleteTrapezoid = useCallback(\n        (id: string) => {\n            const index = structure.trapezoids.findIndex(({ id: itemId }) => itemId === id);\n            if (index >= 0) {\n                const data = clone(structure);\n                data.trapezoids.splice(index, 1);\n                setStructure && setStructure(data);\n            }\n        },\n        [setStructure, structure]\n    );\n\n    const deleteBeam = useCallback(\n        (id: string) => {\n            const index = structure.beams.findIndex(({ id: itemId }) => itemId === id);\n            if (index >= 0) {\n                const { nodeI, nodeJ } = structure.beams[index];\n                // 梁要素を削除\n                const data = clone(structure);\n                data.beams.splice(index, 1);\n\n                // beam の両端の節点について、該当 beam 以外で使用していなければ削除\n                [nodeI, nodeJ].forEach((node) => {\n                    // 他 beam で使用されていないかチェック\n                    const exists = data.beams.some(({ nodeI: i, nodeJ: j }) => {\n                        return node === i || node === j;\n                    });\n\n                    if (!exists) {\n                        // 該当 node を削除\n                        const i = data.nodes.findIndex(({ id: nodeId }) => nodeId === node);\n                        if (i >= 0) {\n                            data.nodes.splice(i, 1);\n                        }\n                    }\n                });\n\n                // beam に紐づく集中荷重を削除\n                const forces = data.forces.filter(({ beam }) => beam !== id);\n                data.forces = forces;\n                // beam に紐づく分布荷重を削除\n                const trapezoids = data.trapezoids.filter(({ beam }) => beam !== id);\n                data.trapezoids = trapezoids;\n\n                setStructure && setStructure(data);\n            }\n        },\n        [setStructure, structure]\n    );\n\n    return (\n        <StructureContext.Provider\n            value={{\n                tool,\n                size,\n                gridSize,\n                snapSize,\n                structure,\n                nodes,\n                beams,\n                forces,\n                trapezoids,\n                addForce,\n                deleteForce,\n                deleteTrapezoid,\n                deleteBeam,\n                setStructure,\n            }}\n        >\n            {children}\n        </StructureContext.Provider>\n    );\n};\n\nexport default StructureProvider;\n","import { useContext, useMemo } from 'react';\nimport { Layer, Line } from 'react-konva';\nimport { StructureContext } from '../provider/StructureProvider';\n\ninterface LineProps {\n    id: string;\n    points: number[];\n    stroke: string;\n    strokeWidth: number;\n    dash: [number, number];\n    listening: boolean;\n}\n\nconst defaultLineProps: LineProps = {\n    id: '',\n    points: [],\n    stroke: '#c9e1ff',\n    strokeWidth: 1,\n    dash: [5, 3],\n    listening: false,\n};\n\nconst GridLayer: React.VFC = () => {\n    // キャンバスサイズ, グリッドの幅\n    const { size, gridSize } = useContext(StructureContext);\n\n    const horizontalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let y = 0; y <= size.height; y += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Horizontal_${count}`,\n                points: [0, y, size.width, y],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    const verticalLines: LineProps[] = useMemo(() => {\n        const lines: LineProps[] = [];\n        let count = 1;\n        for (let x = 0; x <= size.width; x += gridSize) {\n            lines.push({\n                ...defaultLineProps,\n                id: `Vertical_${count}`,\n                points: [x, 0, x, size.height],\n            });\n            count++;\n        }\n        return lines;\n    }, [gridSize, size.height, size.width]);\n\n    return (\n        <Layer listening={false}>\n            {/* horizontal */}\n            {horizontalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n            {/* vertical */}\n            {verticalLines.map((props) => (\n                <Line key={props.id} {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GridLayer;\n","import { createContext, Dispatch, ReactNode, SetStateAction, useCallback } from 'react';\nimport { Shape } from '../types';\n\ninterface ISelectContext {\n    selected: Shape[];\n    setSelected: Dispatch<SetStateAction<Shape[]>>;\n    isSelected: (item: Shape) => boolean;\n    select: (item: Shape) => void;\n    toggle: (item: Shape) => void;\n}\n\ninterface Props {\n    value: Omit<ISelectContext, 'isSelected' | 'select' | 'toggle'>;\n    children: ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const SelectContext = createContext<ISelectContext>(undefined!);\n\n/**\n * 要素選択 provider\n */\nconst SelectProvider: React.VFC<Props> = ({ value: { selected, setSelected }, children }) => {\n    const isSelected = useCallback(\n        (item: Shape) => {\n            return selected.some(({ type, id }) => type === item.type && id === item.id);\n        },\n        [selected]\n    );\n\n    const select = useCallback(\n        (item: Shape) => {\n            if (!isSelected(item)) {\n                setSelected((state) => [...state, item]);\n            }\n        },\n        [isSelected, setSelected]\n    );\n\n    const toggle = useCallback(\n        (item: Shape) => {\n            if (isSelected(item)) {\n                // 削除\n                setSelected((state) =>\n                    state.filter(({ type, id }) => !(type === item.type && id === item.id))\n                );\n            } else {\n                // 追加\n                setSelected((state) => [...state, item]);\n            }\n        },\n        [isSelected, setSelected]\n    );\n\n    return (\n        <SelectContext.Provider\n            value={{\n                selected,\n                setSelected,\n                isSelected,\n                select,\n                toggle,\n            }}\n        >\n            {children}\n        </SelectContext.Provider>\n    );\n};\n\nexport default SelectProvider;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Vector2d } from 'konva/lib/types';\nimport { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { Line, Text } from 'react-konva';\nimport { Guide } from '.';\nimport { CanvasTool } from '../../../types/common';\nimport { SelectContext } from '../provider/SelectProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { BeamProps, Point } from '../types';\nimport { createForceParams, Vector, verticalNormalizeVector } from '../util';\n\ninterface Props extends BeamProps {\n    tool: CanvasTool;\n    selected?: boolean;\n    addForce: (point: Vector2d, vi: Vector, vj: Vector) => void;\n    onDelete: VoidFunction;\n    onSelect: VoidFunction;\n}\n\nconst Beam: React.VFC<Props> = ({\n    id,\n    name,\n    nodeI,\n    nodeJ,\n    tool,\n    selected = false,\n    addForce,\n    onDelete,\n    onSelect,\n}) => {\n    const [points, setPoints] = useState<number[]>([]);\n    const [labelPosition, setLabelPosition] = useState<Point>([0, 0]);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const [labelAngle, setLabelAngle] = useState(0);\n    const [guidePoints, setGuidePoints] = useState<[Point, Point]>([\n        [0, 0],\n        [0, 0],\n    ]);\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    /**\n     * beam をクリック\n     * - 該当位置に集中荷重を追加する\n     * - 該当要素を削除\n     */\n    const handleClick = useCallback(\n        (event: KonvaEventObject<MouseEvent>) => {\n            // 集中荷重の追加モードの場合\n            if (tool === 'force') {\n                // クリック位置\n                const point = event.target.getStage()?.getPointerPosition();\n                if (point) {\n                    addForce(point, viRef.current, vjRef.current);\n                    // イベントの伝播を止める\n                    event.cancelBubble = true;\n                }\n            } else if (tool === 'delete') {\n                // 梁要素の削除\n                onDelete();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            } else if (tool === 'select') {\n                // 梁要素の選択\n                onSelect();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            }\n        },\n        [addForce, onDelete, onSelect, tool]\n    );\n\n    useEffect(() => {\n        setPoints([nodeI.x, nodeI.y, nodeJ.x, nodeJ.y]);\n        viRef.current.x = nodeI.x;\n        viRef.current.y = nodeI.y;\n        vjRef.current.x = nodeJ.x;\n        vjRef.current.y = nodeJ.y;\n\n        if (selected) {\n            // 必ず左から右になるようにする\n            let vi = viRef.current;\n            let vj = vjRef.current;\n            if (vi.x > vj.x) {\n                [vi, vj] = [vj, vi];\n            }\n\n            // 梁要素の長さ\n            const distance = vi.distance(vj);\n            // 梁要素に対して垂直なベクトル\n            const dir = verticalNormalizeVector(vi, vj);\n            // ラベル位置\n            const label = vi.clone().add(dir.clone().multiplyScalar(16));\n            // ラベル方向\n            const angle = vj.clone().subtract(vi).angleDeg();\n            // 寸法線位置\n            const guideDir = dir.clone().multiplyScalar(75);\n            const guideI = vi.clone().add(guideDir);\n            const guideJ = vj.clone().add(guideDir);\n\n            setLabelWidth(distance);\n            setLabelPosition([label.x, label.y]);\n            setLabelAngle(angle);\n            setGuidePoints([\n                [guideI.x, guideI.y],\n                [guideJ.x, guideJ.y],\n            ]);\n        }\n    }, [nodeI.x, nodeI.y, nodeJ.x, nodeJ.y, selected]);\n\n    return (\n        <>\n            <Line\n                id={id}\n                type=\"beam\"\n                points={points}\n                stroke={selected ? 'blue' : 'black'}\n                strokeWidth={4}\n                onClick={handleClick}\n                onTap={handleClick}\n            />\n            {selected && (\n                <>\n                    {/* ラベル */}\n                    <Text\n                        x={labelPosition[0]}\n                        y={labelPosition[1]}\n                        rotation={labelAngle}\n                        text={name}\n                        fontSize={12}\n                        width={labelWidth}\n                        fill=\"blue\"\n                        align=\"center\"\n                        wrap=\"none\"\n                        ellipsis\n                        listening={false}\n                    />\n                    {/* 寸法線 */}\n                    <Guide start={guidePoints[0]} end={guidePoints[1]} />\n                </>\n            )}\n        </>\n    );\n};\n\nconst ConnectedBeam: React.VFC<BeamProps> = (props) => {\n    const { tool, addForce, deleteBeam } = useContext(StructureContext);\n    const { isSelected, toggle } = useContext(SelectContext);\n\n    const handleAddForce = useCallback(\n        (point: Vector2d, vi: Vector, vj: Vector) => {\n            const vp = new Vector(point.x, point.y);\n            const force = createForceParams(props.id, vi, vj, vp);\n            addForce(force);\n        },\n        [addForce, props.id]\n    );\n\n    const handleDelete = useCallback(() => {\n        deleteBeam(props.id);\n    }, [deleteBeam, props.id]);\n\n    const handleSelect = useCallback(() => {\n        toggle({ type: 'beams', id: props.id });\n    }, [props.id, toggle]);\n\n    return (\n        <Beam\n            {...props}\n            tool={tool}\n            selected={isSelected({ type: 'beams', id: props.id })}\n            addForce={handleAddForce}\n            onDelete={handleDelete}\n            onSelect={handleSelect}\n        />\n    );\n};\n\nexport default ConnectedBeam;\n","import { createContext, Dispatch, ReactNode, SetStateAction, useCallback, useState } from 'react';\nimport { PopupParams, PopupPosition, PopupType } from '../popup/types';\n\ninterface IPopupContext {\n    popupType?: PopupType;\n    setPopupType: Dispatch<SetStateAction<PopupType | undefined>>;\n    popupPosition: PopupPosition;\n    setPopupPosition: Dispatch<SetStateAction<PopupPosition>>;\n    open: (popup: PopupType, position: PopupPosition, popupParams?: PopupParams) => void;\n    close: VoidFunction;\n    popupParams?: PopupParams;\n}\n\ninterface Props {\n    value: Omit<IPopupContext, 'open' | 'close' | 'popupParams'>;\n    children: ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const PopupContext = createContext<IPopupContext>(undefined!);\n\nconst PopupProvider: React.VFC<Props> = ({\n    value: { popupType, setPopupType, popupPosition, setPopupPosition },\n    children,\n}) => {\n    const [popupParams, setPopupParams] = useState<PopupParams>({});\n\n    const open = useCallback(\n        (type: PopupType, position: PopupPosition, params?: PopupParams) => {\n            setPopupType(type);\n            setPopupPosition(position);\n            if (params) {\n                setPopupParams(params);\n            }\n        },\n        [setPopupPosition, setPopupType]\n    );\n\n    const close = useCallback(() => {\n        setPopupType(undefined);\n        setPopupPosition({ top: 0, left: 0 });\n        setPopupParams({});\n    }, [setPopupPosition, setPopupType]);\n\n    return (\n        <PopupContext.Provider\n            value={{\n                popupType,\n                setPopupType,\n                popupPosition,\n                setPopupPosition,\n                open,\n                close,\n                popupParams,\n            }}\n        >\n            {children}\n        </PopupContext.Provider>\n    );\n};\n\nexport default PopupProvider;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Arrow, Text } from 'react-konva';\nimport { CanvasTool } from '../../../types/common';\nimport { Force as IForce } from '../../../types/shape';\nimport { PopupParams, PopupPosition } from '../popup/types';\nimport { PopupContext } from '../provider/PopupProvider';\nimport { SelectContext } from '../provider/SelectProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { ForceProps, Point } from '../types';\nimport { lerp, Vector, verticalNormalizeVector, vX } from '../util';\n\ninterface Props extends ForceProps {\n    tool: CanvasTool;\n    selected?: boolean;\n    onDelete: VoidFunction;\n    onSelect: VoidFunction;\n    onEdit: (position: PopupPosition) => void;\n}\n\nconst BaseLength = 30;\n\nconst Force: React.VFC<Props> = ({\n    beam,\n    distanceI,\n    force,\n    forceRatio,\n    tool,\n    selected = false,\n    onDelete,\n    onSelect,\n    onEdit,\n}) => {\n    const [points, setPoints] = useState<number[]>([]);\n    const [distance, setDistance] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    const [labelPosition, setLabelPosition] = useState<Point>([0, 0]);\n\n    const viRef = useRef<Vector>(new Vector(0, 0));\n    const vjRef = useRef<Vector>(new Vector(0, 0));\n\n    useEffect(() => {\n        const { nodeI, nodeJ } = beam;\n\n        // i端、j端\n        viRef.current.x = nodeI.x;\n        viRef.current.y = nodeI.y;\n        vjRef.current.x = nodeJ.x;\n        vjRef.current.y = nodeJ.y;\n        // 矢印の先端\n        const tail = lerp(viRef.current, vjRef.current, distanceI);\n        // 梁に直交する単位ベクトル\n        const vertical = verticalNormalizeVector(viRef.current, vjRef.current);\n        // 矢印の開始点\n        const arrowLength = BaseLength * forceRatio;\n        const head = tail.clone().add(vertical.multiplyScalar(arrowLength));\n\n        setPoints([head.x, head.y, tail.x, tail.y]);\n\n        // ラベル描画用\n        setDistance(Math.max(arrowLength, 140));\n        const angle = vertical.clone().angleDeg();\n        setRotation(angle);\n        const dir = viRef.current.clone().subtract(vjRef.current).normalize();\n        if (vX.dot(dir) < 0) {\n            dir.invert();\n        }\n        const p = tail.clone().add(dir.multiplyScalar(6));\n        setLabelPosition([p.x, p.y]);\n    }, [beam, distanceI, forceRatio]);\n\n    const handleClick = useCallback(\n        (event: KonvaEventObject<MouseEvent>) => {\n            if (tool === 'delete') {\n                onDelete();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            } else if (tool === 'select') {\n                onSelect();\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            }\n        },\n        [onDelete, onSelect, tool]\n    );\n\n    const handleLabelClick = useCallback((event: KonvaEventObject<MouseEvent>) => {\n        // ダブルクリック時にはクリックイベントも発生する\n        // 何もバインドしていないと Stage のクリックイベント（選択解除）が発生するので\n        // イベントの伝播を止めるだけのイベントハンドラを設定する\n        event.cancelBubble = true;\n    }, []);\n\n    const handleLabelDoubleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                const { x, y } = point;\n                // ポップアップを開く\n                onEdit({ top: y, left: x });\n            }\n        },\n        [onEdit]\n    );\n\n    const color = useMemo(() => {\n        return selected ? 'red' : 'orange';\n    }, [selected]);\n\n    return (\n        <>\n            <Arrow\n                points={points}\n                pointerLength={6}\n                pointerWidth={6}\n                fill={color}\n                stroke={color}\n                strokeWidth={2}\n                onClick={handleClick}\n                onTap={handleClick}\n            />\n            {selected && (\n                <Text\n                    x={labelPosition[0]}\n                    y={labelPosition[1]}\n                    offsetX={-6}\n                    text={`${force}kN`}\n                    fontSize={12}\n                    width={distance}\n                    rotation={rotation}\n                    fill={color}\n                    wrap=\"none\"\n                    ellipsis\n                    onClick={handleLabelClick}\n                    onTap={handleLabelClick}\n                    onDblClick={handleLabelDoubleClick}\n                    onDblTap={handleLabelDoubleClick}\n                />\n            )}\n        </>\n    );\n};\n\nconst ConnectedForce: React.VFC<ForceProps> = (props) => {\n    const { tool, deleteForce } = useContext(StructureContext);\n    const { isSelected, toggle } = useContext(SelectContext);\n    const { open } = useContext(PopupContext);\n\n    const handleDelete = useCallback(() => {\n        deleteForce(props.id);\n    }, [deleteForce, props.id]);\n\n    const handleSelect = useCallback(() => {\n        toggle({ type: 'forces', id: props.id });\n    }, [props.id, toggle]);\n\n    const handleEdit = useCallback(\n        (position: PopupPosition) => {\n            const force: IForce = {\n                ...props,\n                beam: props.beam.id,\n            };\n            // ポップアップを表示\n            open('forces', position, force as unknown as PopupParams);\n        },\n        [open, props]\n    );\n\n    return (\n        <Force\n            {...props}\n            tool={tool}\n            selected={isSelected({ type: 'forces', id: props.id })}\n            onDelete={handleDelete}\n            onSelect={handleSelect}\n            onEdit={handleEdit}\n        />\n    );\n};\n\nexport default ConnectedForce;\n","import { useEffect, useRef, useState } from 'react';\nimport { Arrow, Group, Line, Text } from 'react-konva';\nimport { Point } from '../types';\nimport { Vector } from '../util';\n\ninterface Props {\n    start: Point;\n    end: Point;\n}\n\ninterface GuideProps {\n    fill: string;\n    stroke: string;\n    strokeWidth: number;\n    listening: boolean;\n}\n\ninterface GuideArrowProps extends GuideProps {\n    pointerLength: number;\n    pointerWidth: number;\n    pointerAtBeginning: boolean;\n}\n\nconst defaultGuideProps: GuideProps = {\n    fill: 'silver',\n    stroke: 'silver',\n    strokeWidth: 1,\n    listening: false,\n};\n\nconst defaultGuideArrowProps: GuideArrowProps = {\n    pointerLength: 6,\n    pointerWidth: 6,\n    pointerAtBeginning: true,\n    ...defaultGuideProps,\n};\n\nconst GuideLine: React.VFC<Props> = ({ start, end }) => {\n    const v1Ref = useRef<Vector>(new Vector(0, 0));\n    const v2Ref = useRef<Vector>(new Vector(0, 0));\n\n    const [distance, setDistance] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    const [basis, setBasis] = useState<Point>([0, 0]);\n\n    useEffect(() => {\n        v1Ref.current.x = start[0];\n        v1Ref.current.y = start[1];\n        v2Ref.current.x = end[0];\n        v2Ref.current.y = end[1];\n\n        const dist = v1Ref.current.distance(v2Ref.current);\n        const dir = v2Ref.current.clone().subtract(v1Ref.current).normalize();\n        const angle = dir.angleDeg();\n\n        setDistance(Math.round(dist));\n        setRotation(angle === 90 ? -90 : angle);\n        setBasis(angle === 90 ? end : start);\n    }, [end, start]);\n\n    return (\n        <Group x={basis[0]} y={basis[1]} rotation={rotation}>\n            {/* 左端 */}\n            <Line points={[0, 0, 0, 10]} {...defaultGuideProps} />\n            {/* 矢印部分 */}\n            <Arrow points={[0, 5, distance, 5]} {...defaultGuideArrowProps} />\n            {/* 右端 */}\n            <Line points={[distance, 0, distance, 10]} {...defaultGuideProps} />\n            {/* ラベル */}\n            <Text\n                x={0}\n                y={-8}\n                text={`${distance}px`}\n                fontSize={12}\n                fill=\"silver\"\n                width={distance}\n                align=\"center\"\n                listening={false}\n                wrap=\"none\"\n                ellipsis\n            />\n        </Group>\n    );\n};\n\nexport default GuideLine;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Vector2d } from 'konva/lib/types';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Circle, Image } from 'react-konva';\nimport useImage from 'use-image';\nimport { CanvasTool } from '../../../types/common';\nimport { Node as NodeProps, NodePinType } from '../../../types/shape';\nimport { PopupParams, PopupPosition } from '../popup/types';\nimport { PopupContext } from '../provider/PopupProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { clone, replaceNode, snap } from '../util';\n\ninterface Props extends NodeProps {\n    tool: CanvasTool;\n    draggable?: boolean;\n    onChange?: (node: NodeProps) => void;\n    onCommit?: (node: NodeProps) => void;\n    onEdit: (position: PopupPosition) => void;\n}\n\nconst Pins: Record<NodePinType, string> = {\n    free: '/assets/images/pins/pin_1.svg', // とりあえずダミーで指定\n    pin: '/assets/images/pins/pin_1.svg',\n    pinX: '/assets/images/pins/pin_2.svg',\n    pinZ: '/assets/images/pins/pin_2.svg',\n    fixX: '/assets/images/pins/pin_3.svg',\n    fix: '/assets/images/pins/pin_4.svg',\n};\n\nconst DrawInterval = 100;\n\nconst Node: React.VFC<Props> = ({\n    id,\n    x,\n    y,\n    pin = 'free',\n    tool,\n    draggable = false,\n    onChange,\n    onCommit,\n    onEdit,\n}) => {\n    const [isDragging, setIsDragging] = useState(false);\n    const pointRef = useRef<Vector2d>({ x, y });\n    const timerRef = useRef<NodeJS.Timer>();\n\n    const imageUrl = useMemo(() => {\n        return `${process.env.PUBLIC_URL}${Pins[pin]}`;\n    }, [pin]);\n\n    const [image] = useImage(imageUrl);\n\n    const redraw = useCallback(() => {\n        if (draggable) {\n            const node: NodeProps = { id, x: pointRef.current.x, y: pointRef.current.y };\n            onChange && onChange(node);\n        }\n    }, [draggable, id, onChange]);\n\n    const handleDragStart = useCallback((event: KonvaEventObject<DragEvent>) => {\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            pointRef.current = point;\n            setIsDragging(true);\n        }\n    }, []);\n\n    const handleDragMove = useCallback((event: KonvaEventObject<DragEvent>) => {\n        const point = event.target.getStage()?.getPointerPosition();\n        if (point) {\n            pointRef.current = point;\n        }\n    }, []);\n\n    const handleDragEnd = useCallback(\n        (event: KonvaEventObject<DragEvent>) => {\n            const point = event.target.getStage()?.getPointerPosition();\n            if (point) {\n                pointRef.current = point;\n                setIsDragging(false);\n                if (timerRef.current) {\n                    clearInterval(timerRef.current);\n                    timerRef.current = undefined;\n                }\n\n                // 節点のマージ処理\n                const node: NodeProps = { id, x: pointRef.current.x, y: pointRef.current.y };\n                onCommit && onCommit(node);\n            }\n        },\n        [id, onCommit]\n    );\n\n    const handleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                // イベントの伝播を止める\n                event.cancelBubble = true;\n            }\n        },\n        [tool]\n    );\n\n    const handleDoubleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                const point = event.target.getStage()?.getPointerPosition();\n                if (point) {\n                    const { x, y } = point;\n                    // ポップアップを開く\n                    onEdit({ top: y, left: x });\n                }\n            }\n        },\n        [onEdit, tool]\n    );\n\n    useEffect(() => {\n        const timer = timerRef.current;\n        if (draggable) {\n            if (isDragging) {\n                redraw();\n                timerRef.current = setInterval(redraw, DrawInterval);\n            }\n        }\n\n        return () => {\n            if (timer) {\n                clearInterval(timer);\n            }\n        };\n    }, [draggable, isDragging, redraw]);\n\n    return (\n        <>\n            <Circle\n                id={id}\n                x={x}\n                y={y}\n                fill={isDragging ? 'blue' : 'black'}\n                radius={4}\n                draggable={draggable}\n                onDragStart={handleDragStart}\n                onDragMove={handleDragMove}\n                onDragEnd={handleDragEnd}\n                onClick={handleClick}\n                onTap={handleClick}\n                onDblClick={handleDoubleClick}\n                onDblTap={handleDoubleClick}\n                _useStrictMode\n            />\n            {!isDragging && pin !== 'free' && (\n                <Image\n                    x={x}\n                    y={y}\n                    offsetX={12}\n                    offsetY={-4}\n                    rotation={pin === 'pinZ' ? -90 : 0}\n                    image={image}\n                    width={24}\n                    height={24}\n                    listening={false}\n                />\n            )}\n        </>\n    );\n};\n\nconst ConnectedNode: React.VFC<NodeProps> = (props) => {\n    const { tool, snapSize, setStructure } = useContext(StructureContext);\n    const { open } = useContext(PopupContext);\n\n    const draggable = useMemo(() => {\n        return tool !== 'pen' && Boolean(setStructure);\n    }, [setStructure, tool]);\n\n    const handleChange = useCallback(\n        ({ id, x, y }: NodeProps) => {\n            if (setStructure) {\n                const [px, py] = snap([x, y], snapSize);\n                setStructure((values) => {\n                    const data = clone(values);\n                    const node = data.nodes.find((item) => item.id === id);\n                    if (node) {\n                        node.x = px;\n                        node.y = py;\n                    }\n                    return data;\n                });\n            }\n        },\n        [setStructure, snapSize]\n    );\n\n    const handleCommit = useCallback(\n        ({ id, x, y }: NodeProps) => {\n            if (setStructure) {\n                const [px, py] = snap([x, y], snapSize);\n                setStructure((values) => {\n                    const data = clone(values);\n                    // 該当ID の index\n                    const index = data.nodes.findIndex((item) => item.id === id);\n                    if (index >= 0) {\n                        // 座標が一致する別の節点が存在する？\n                        const node = data.nodes.find((item) => {\n                            return item.id !== id && item.x === px && item.y === py;\n                        });\n                        if (node) {\n                            // 現在の node を座標が一致する node に置き換える\n                            replaceNode(data, id, node.id);\n                            // 不要となった現在の node を削除する\n                            data.nodes.splice(index, 1);\n                        }\n                    }\n\n                    return data;\n                });\n            }\n        },\n        [setStructure, snapSize]\n    );\n\n    const handleEdit = useCallback(\n        (position: PopupPosition) => {\n            // ポップアップを表示\n            open('nodes', position, props as unknown as PopupParams);\n        },\n        [open, props]\n    );\n\n    return (\n        <Node\n            {...props}\n            draggable={draggable}\n            tool={tool}\n            onChange={handleChange}\n            onCommit={handleCommit}\n            onEdit={handleEdit}\n        />\n    );\n};\n\nexport default ConnectedNode;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Arrow, Group, Line, Text } from 'react-konva';\nimport { CanvasTool } from '../../../types/common';\nimport { Trapezoid as ITrapezoid } from '../../../types/shape';\nimport { PopupParams, PopupPosition } from '../popup/types';\nimport { PopupContext } from '../provider/PopupProvider';\nimport { SelectContext } from '../provider/SelectProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { Point, TrapezoidProps } from '../types';\nimport { getInsidePoints, intercectPoint, Vector, vX } from '../util';\nimport Guide from './Guide';\n\ninterface Props extends TrapezoidProps {\n    tool: CanvasTool;\n    selected?: boolean;\n    onDelete: VoidFunction;\n    onSelect: VoidFunction;\n    onEdit: (position: PopupPosition) => void;\n}\n\ntype LinePoints = [number, number, number, number];\n\ninterface LineProps {\n    stroke: string;\n    strokeWidth: number;\n}\n\ninterface ArrowProps extends LineProps {\n    pointerLength: number;\n    pointerWidth: number;\n    fill: string;\n}\n\nconst defaultLineProps: LineProps = {\n    stroke: 'pink',\n    strokeWidth: 2,\n};\n\nconst defaultArrowProps: ArrowProps = {\n    pointerLength: 6,\n    pointerWidth: 6,\n    fill: 'pink',\n    ...defaultLineProps,\n};\n\ninterface LabelProps {\n    offsetX: number;\n    offsetY: number;\n    fontSize: number;\n    wrap: string;\n    ellipsis: boolean;\n}\nconst defaultLabelProps: LabelProps = {\n    offsetX: -6,\n    offsetY: 14,\n    fontSize: 12,\n    wrap: 'none',\n    ellipsis: true,\n};\n\ninterface LabelAttrs {\n    x: number;\n    y: number;\n    text: string;\n    width: number;\n    rotation: number;\n}\n\nconst Trapezoid: React.VFC<Props> = ({\n    beam,\n    forceI,\n    forceJ,\n    distanceI,\n    distanceJ,\n    angle = 90,\n    isGlobal = false,\n    tool,\n    selected = false,\n    onDelete,\n    onSelect,\n    onEdit,\n}) => {\n    // 分布荷重の矢印\n    const [arrows, setArrows] = useState<LinePoints[]>([]);\n    // 分布荷重の上端\n    const [line, setLine] = useState<LinePoints>([0, 0, 0, 0]);\n    // ラベル\n    const [labelI, setLabelI] = useState<LabelAttrs>();\n    const [labelJ, setLabelJ] = useState<LabelAttrs>();\n    // 寸法線\n    const [guidePoints, setGuidePoints] = useState<[Point, Point]>([\n        [0, 0],\n        [0, 0],\n    ]);\n\n    useEffect(() => {\n        // 梁要素\n        const { nodeI, nodeJ } = beam;\n        const vI = new Vector(nodeI.x, nodeI.y);\n        const vJ = new Vector(nodeJ.x, nodeJ.y);\n        // 梁要素の方向\n        const vd = vJ.clone().subtract(vI).normalize();\n        // 分布荷重の方向\n        let dir: Vector;\n        if (isGlobal) {\n            dir = vX.clone().rotateDeg(angle * -1);\n        } else {\n            dir = vd\n                .clone()\n                .rotateDeg(angle * -1)\n                .normalize();\n        }\n        // 梁要素の長さ\n        const beamLength = vI.distance(vJ);\n        // 分布荷重の下端の位置\n        const bi = vI.clone().add(vd.clone().multiplyScalar(beamLength * distanceI));\n        const bj = vJ.clone().add(\n            vd\n                .clone()\n                .invert()\n                .multiplyScalar(beamLength * distanceJ)\n        );\n        // 分布荷重の上端の位置\n        const pi = bi.clone().add(dir.clone().multiplyScalar(forceI * 10));\n        const pj = bj.clone().add(dir.clone().multiplyScalar(forceJ * 10));\n\n        // 下端を等間隔に分割する点を取得\n        const points = getInsidePoints(bi, bj, vd);\n        // 上端の傾き\n        const slope = pj.x - pi.x !== 0 ? (pj.y - pi.y) / (pj.x - pi.x) : NaN;\n        // 上端の切片\n        const intercept = isNaN(slope) ? NaN : pi.y - slope * pi.x;\n\n        // 内側の矢印\n        const insideArrows: LinePoints[] = [];\n        points.forEach((pd) => {\n            // pd から分布荷重の方向に線を伸ばして上端と交差する点\n            const pu = intercectPoint([pi, pj, slope, intercept], pd, dir);\n            if (pu) {\n                const arrow: LinePoints = [pu[0], pu[1], pd.x, pd.y];\n                insideArrows.push(arrow);\n            }\n        });\n\n        const labelAngle = dir.angleDeg();\n        // ラベル (i端)\n        setLabelI({\n            x: bi.x,\n            y: bi.y,\n            text: `${forceI}kN/m`,\n            width: bi.distance(pi),\n            rotation: labelAngle,\n        });\n        // ラベル (j端)\n        setLabelJ({\n            x: bj.x,\n            y: bj.y,\n            text: `${forceJ}kN/m`,\n            width: bj.distance(pj),\n            rotation: labelAngle,\n        });\n\n        // 寸法線の位置\n        const force = Math.max(forceI, forceJ) * 10;\n        const guidePosition = dir.clone().multiplyScalar(force + 50);\n        const gi = bi.clone().add(guidePosition);\n        const gj = bj.clone().add(guidePosition);\n        setGuidePoints([\n            [gi.x, gi.y],\n            [gj.x, gj.y],\n        ]);\n\n        // 上端\n        setLine([pi.x, pi.y, pj.x, pj.y]);\n        // 矢印\n        setArrows([\n            // 左端\n            [pi.x, pi.y, bi.x, bi.y],\n            // 内側の矢印\n            ...insideArrows,\n            // 右端\n            [pj.x, pj.y, bj.x, bj.y],\n        ]);\n    }, [angle, beam, distanceI, distanceJ, forceI, forceJ, isGlobal]);\n\n    const handleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                onSelect();\n            } else if (tool === 'delete') {\n                onDelete();\n            }\n            // イベントの伝播を止める\n            event.cancelBubble = true;\n        },\n        [onDelete, onSelect, tool]\n    );\n\n    const handleDoubleClick = useCallback(\n        (event: KonvaEventObject<Event>) => {\n            if (tool === 'select') {\n                const point = event.target.getStage()?.getPointerPosition();\n                if (point) {\n                    const { x, y } = point;\n                    // ポップアップを開く\n                    onEdit({ top: y, left: x });\n                }\n            }\n        },\n        [onEdit, tool]\n    );\n\n    const color = useMemo(() => {\n        return selected ? 'red' : 'pink';\n    }, [selected]);\n\n    return (\n        <Group\n            onClick={handleClick}\n            onTap={handleClick}\n            onDblClick={handleDoubleClick}\n            onDblTap={handleDoubleClick}\n        >\n            {/* 上端 */}\n            <Line points={line} {...defaultLineProps} stroke={color} />\n            {/* 矢印 */}\n            {arrows.map((arrow, index) => (\n                <Arrow\n                    key={`arrow_${index}`}\n                    points={arrow}\n                    {...defaultArrowProps}\n                    stroke={color}\n                    fill={color}\n                />\n            ))}\n            {/* ラベルと寸法線 */}\n            {selected && (\n                <>\n                    {/* I端側ラベル */}\n                    <Text {...defaultLabelProps} {...labelI} fill={color} />\n                    {/* J端側ラベル */}\n                    <Text {...defaultLabelProps} {...labelJ} fill={color} />\n                    {/* 寸法線 */}\n                    <Guide start={guidePoints[0]} end={guidePoints[1]} />\n                </>\n            )}\n        </Group>\n    );\n};\n\nconst ConnectedTrapezoid: React.VFC<TrapezoidProps> = (props) => {\n    const { tool, deleteTrapezoid } = useContext(StructureContext);\n    const { isSelected, toggle } = useContext(SelectContext);\n    const { open } = useContext(PopupContext);\n\n    const handleDelete = useCallback(() => {\n        deleteTrapezoid(props.id);\n    }, [deleteTrapezoid, props.id]);\n\n    const handleSelect = useCallback(() => {\n        toggle({ type: 'trapezoids', id: props.id });\n    }, [props.id, toggle]);\n\n    const handleEdit = useCallback(\n        (position: PopupPosition) => {\n            const trapezoid: ITrapezoid = {\n                ...props,\n                beam: props.beam.id,\n            };\n            // ポップアップを表示\n            open('trapezoids', position, trapezoid as unknown as PopupParams);\n        },\n        [open, props]\n    );\n\n    return (\n        <Trapezoid\n            {...props}\n            tool={tool}\n            selected={isSelected({ type: 'trapezoids', id: props.id })}\n            onDelete={handleDelete}\n            onSelect={handleSelect}\n            onEdit={handleEdit}\n        />\n    );\n};\n\nexport default ConnectedTrapezoid;\n","import { useContext, useMemo } from 'react';\nimport { Layer } from 'react-konva';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { Guide as GuideLine } from '../shape';\n\ninterface GuideLineProps {\n    key: string;\n    start: [number, number];\n    end: [number, number];\n}\n\ninterface GuidePoint {\n    minX: number;\n    maxX: number;\n    guidesX: GuideLineProps[];\n    minY: number;\n    maxY: number;\n    guidesY: GuideLineProps[];\n}\n\nconst GuideInterval = 25;\n\nconst GuideLayer: React.VFC = () => {\n    const { nodes } = useContext(StructureContext);\n\n    const { minX, maxX, guidesX, minY, maxY, guidesY }: GuidePoint = useMemo(() => {\n        const guide: GuidePoint = {\n            maxX: Number.MIN_SAFE_INTEGER,\n            minX: Number.MAX_SAFE_INTEGER,\n            guidesX: [],\n            maxY: Number.MIN_SAFE_INTEGER,\n            minY: Number.MAX_SAFE_INTEGER,\n            guidesY: [],\n        };\n\n        const pointsX = new Set<number>();\n        const pointsY = new Set<number>();\n        Object.values(nodes).forEach(({ x, y }) => {\n            if (guide.maxX < x) {\n                guide.maxX = x;\n            }\n            if (guide.minX > x) {\n                guide.minX = x;\n            }\n            if (!pointsX.has(x)) {\n                pointsX.add(x);\n            }\n            if (guide.maxY < y) {\n                guide.maxY = y;\n            }\n            if (guide.minY > y) {\n                guide.minY = y;\n            }\n            if (!pointsY.has(y)) {\n                pointsY.add(y);\n            }\n        });\n\n        // ガイドの生成\n        if (pointsX.size > 1) {\n            const array = Array.from(pointsX).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideX_${i}`,\n                    start: [prev, guide.maxY + GuideInterval * 4],\n                    end: [current, guide.maxY + GuideInterval * 4],\n                };\n                prev = current;\n                guide.guidesX.push(props);\n            }\n        }\n        if (pointsY.size > 1) {\n            const array = Array.from(pointsY).sort((a, b) => (a < b ? -1 : 1));\n            let prev = array[0];\n            const localX = Math.max(guide.minX - GuideInterval * 4, GuideInterval * 2);\n            for (let i = 1; i < array.length; i++) {\n                const current = array[i];\n                const props: GuideLineProps = {\n                    key: `LocalGuideY_${i}`,\n                    start: [localX, prev],\n                    end: [localX, current],\n                };\n                prev = current;\n                guide.guidesY.push(props);\n            }\n        }\n\n        return guide;\n    }, [nodes]);\n\n    const GlobalVerticalGuidePositionX = useMemo(() => {\n        if (minX !== Number.MAX_SAFE_INTEGER) {\n            return Math.max(GuideInterval, minX - GuideInterval * 5);\n        }\n        return 0;\n    }, [minX]);\n\n    const GlobalHorizontalGuidePositionY = useMemo(() => {\n        if (maxY !== Number.MIN_SAFE_INTEGER) {\n            return maxY + GuideInterval * 5;\n        }\n        return 0;\n    }, [maxY]);\n\n    return (\n        <Layer listening={false}>\n            {/* Horizontal */}\n            {minX !== Number.MAX_SAFE_INTEGER && maxX !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[minX, GlobalHorizontalGuidePositionY]}\n                    end={[maxX, GlobalHorizontalGuidePositionY]}\n                />\n            )}\n            {guidesX.map((props) => (\n                <GuideLine {...props} />\n            ))}\n            {/* Vertical */}\n            {minY !== Number.MAX_SAFE_INTEGER && maxY !== Number.MIN_SAFE_INTEGER && (\n                <GuideLine\n                    start={[GlobalVerticalGuidePositionX, minY]}\n                    end={[GlobalVerticalGuidePositionX, maxY]}\n                />\n            )}\n            {guidesY.map((props) => (\n                <GuideLine {...props} />\n            ))}\n        </Layer>\n    );\n};\n\nexport default GuideLayer;\n","import { Button, InputAdornment, Paper, Stack, TextField } from '@mui/material';\nimport { ChangeEvent, FormEvent, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Force, isForce } from '../../../types/shape';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (force: Force) => void;\n}\n\ninterface ForceEditorProps extends Omit<Props, 'values'> {\n    force: Force;\n}\n\nconst ForceEditor: React.VFC<ForceEditorProps> = ({ force, onChange, onClose }) => {\n    const [value, setValue] = useState('');\n    const [error, setError] = useState<string>();\n\n    const handleSubmit = useCallback(\n        (event: FormEvent<HTMLFormElement>) => {\n            event.preventDefault();\n\n            if (event.currentTarget.checkValidity() && typeof error === 'undefined') {\n                const num = parseFloat(value);\n                if (!isNaN(num)) {\n                    // 更新\n                    onChange({\n                        ...force,\n                        force: num,\n                    });\n                    // ポップアップ閉じる\n                    onClose();\n                }\n            }\n        },\n        [error, onChange, onClose, value, force]\n    );\n\n    const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.currentTarget;\n        let errorMessage: string | undefined;\n        setValue(value);\n\n        // 必須\n        if (value.length === 0) {\n            errorMessage = '数値を入力してください';\n        }\n        // 数値？\n        const num = parseFloat(value);\n        if (isNaN(num)) {\n            errorMessage = '数値を入力してください';\n        }\n        if (0 > num || num > Number.MAX_SAFE_INTEGER) {\n            errorMessage = '0 より大きい値を入力してください';\n        }\n\n        setError(errorMessage);\n    }, []);\n\n    useEffect(() => {\n        setValue(`${force.force}`);\n        setError(undefined);\n    }, [force]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"集中荷重\"\n                    value={value}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN</InputAdornment>,\n                    }}\n                    error={Boolean(error)}\n                    helperText={error}\n                />\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedForceEditor: React.VFC<Props> = ({ values, ...props }) => {\n    const force = useMemo(() => {\n        if (isForce(values)) {\n            return values;\n        }\n        // 空の force を渡す\n        return {\n            id: '',\n            name: '',\n            beam: '',\n            force: 0,\n            distanceI: 0,\n        };\n    }, [values]);\n\n    return <ForceEditor {...props} force={force} />;\n};\n\nexport default ConnectedForceEditor;\n","var _path, _circle, _circle2, _line;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80 0 L30 80 L130 80 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 45,\n    cy: 115,\n    r: 20\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 115,\n    cy: 115,\n    r: 20\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 30,\n    y1: 150,\n    x2: 130,\n    y2: 150,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin2);\nexport default __webpack_public_path__ + \"static/media/pin_2.2b2bb714.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _circle, _circle2, _line;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin3(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    style: {\n      width: 64\n    },\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30 3 L30 80 L130 80 L130 3 Z\",\n    strokeWidth: 6,\n    stroke: \"gray\",\n    fill: \"transparent\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 45,\n    cy: 115,\n    r: 20\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"gray\",\n    strokeWidth: 6,\n    fill: \"transparent\",\n    cx: 115,\n    cy: 115,\n    r: 20\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 30,\n    y1: 150,\n    x2: 130,\n    y2: 150,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin3);\nexport default __webpack_public_path__ + \"static/media/pin_3.d7b6571b.svg\";\nexport { ForwardRef as ReactComponent };","var _line, _line2, _line3, _line4, _line5;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPin4(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    style: {\n      width: 64\n    },\n    viewBox: \"0 0 160 160\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 0,\n    y1: 3,\n    x2: 160,\n    y2: 3,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 20,\n    y1: 0,\n    x2: 0,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line3 || (_line3 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 60,\n    y1: 0,\n    x2: 40,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line4 || (_line4 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 100,\n    y1: 0,\n    x2: 80,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })), _line5 || (_line5 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 140,\n    y1: 0,\n    x2: 120,\n    y2: 60,\n    stroke: \"gray\",\n    strokeWidth: 6\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPin4);\nexport default __webpack_public_path__ + \"static/media/pin_4.4442f3d6.svg\";\nexport { ForwardRef as ReactComponent };","import CircleOutlinedIcon from '@mui/icons-material/CircleOutlined';\nimport {\n    Button,\n    Paper,\n    Stack,\n    SvgIcon,\n    ToggleButton,\n    ToggleButtonGroup,\n    ToggleButtonProps,\n    Typography,\n} from '@mui/material';\nimport {\n    FormEvent,\n    MouseEvent,\n    ReactElement,\n    useCallback,\n    useEffect,\n    useMemo,\n    useState,\n} from 'react';\nimport { isNode, isNodePinType, Node, NodePinType } from '../../../types/shape';\nimport { ReactComponent as PinIcon1 } from './pins/pin_1.svg';\nimport { ReactComponent as PinIcon2 } from './pins/pin_2.svg';\nimport { ReactComponent as PinIcon3 } from './pins/pin_3.svg';\nimport { ReactComponent as PinIcon4 } from './pins/pin_4.svg';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (node: Node) => void;\n}\n\ninterface PinSelectorProps extends Omit<Props, 'values'> {\n    node: Node;\n}\n\ninterface PinButtonProps {\n    type: NodePinType;\n    icon: ReactElement;\n    label: string;\n}\n\nconst PinButtons: Readonly<Record<NodePinType, PinButtonProps>> = {\n    free: {\n        type: 'free',\n        icon: <CircleOutlinedIcon />,\n        label: '完全フリー',\n    },\n    pin: {\n        type: 'pin',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon1 />\n            </SvgIcon>\n        ),\n        label: '完全ピン',\n    },\n    pinX: {\n        type: 'pinX',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon2 />\n            </SvgIcon>\n        ),\n        label: 'ピンXローラー',\n    },\n    pinZ: {\n        type: 'pinZ',\n        icon: (\n            <SvgIcon sx={{ width: 24, transform: 'rotate(-90deg)' }} viewBox=\"0 0 160 160\">\n                <PinIcon2 />\n            </SvgIcon>\n        ),\n        label: 'ピンZローラー',\n    },\n    fixX: {\n        type: 'fixX',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon3 />\n            </SvgIcon>\n        ),\n        label: '固定Xローラー',\n    },\n    fix: {\n        type: 'fix',\n        icon: (\n            <SvgIcon sx={{ width: 24 }} viewBox=\"0 0 160 160\">\n                <PinIcon4 />\n            </SvgIcon>\n        ),\n        label: '完全固定',\n    },\n};\n\nconst defaultButtonProps: Partial<ToggleButtonProps> = {\n    sx: { justifyContent: 'flex-start', alignItems: 'center' },\n};\n\nconst PinSelector: React.VFC<PinSelectorProps> = ({ node, onChange, onClose }) => {\n    const [pin, setPin] = useState<NodePinType>();\n\n    const handleSubmit = useCallback(\n        (event: FormEvent) => {\n            event.preventDefault();\n\n            const values: Node = {\n                ...node,\n                pin,\n            };\n            onChange(values);\n            onClose();\n        },\n        [node, onChange, onClose, pin]\n    );\n\n    const handleChange = useCallback((_: MouseEvent<HTMLElement>, newValue: string | null) => {\n        if (newValue !== null && isNodePinType(newValue)) {\n            setPin(newValue);\n        }\n    }, []);\n\n    useEffect(() => {\n        setPin(node.pin ?? 'free');\n    }, [node.pin]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                <ToggleButtonGroup\n                    orientation=\"vertical\"\n                    value={pin}\n                    size=\"small\"\n                    exclusive\n                    fullWidth\n                    onChange={handleChange}\n                >\n                    {Object.entries(PinButtons).map(([key, { icon, label }]) => (\n                        <ToggleButton key={key} value={key} {...defaultButtonProps}>\n                            {icon}\n                            <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                                {label}\n                            </Typography>\n                        </ToggleButton>\n                    ))}\n                </ToggleButtonGroup>\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedPinSelector: React.VFC<Props> = ({ values, ...props }) => {\n    const node = useMemo(() => {\n        if (isNode(values)) {\n            return values;\n        }\n        return {\n            id: '',\n            x: 0,\n            y: 0,\n        };\n    }, [values]);\n\n    return <PinSelector {...props} node={node} />;\n};\n\nexport default ConnectedPinSelector;\n","import {\n    Button,\n    Checkbox,\n    FormControlLabel,\n    InputAdornment,\n    Paper,\n    Stack,\n    TextField,\n} from '@mui/material';\nimport { ChangeEvent, FormEvent, useCallback, useEffect, useMemo, useState } from 'react';\nimport { isTrapezoid, Trapezoid } from '../../../types/shape';\nimport { round } from '../util';\nimport { PopupParams } from './types';\n\ninterface Props {\n    values: PopupParams;\n    onClose: VoidFunction;\n    onChange: (trapezoid: Trapezoid) => void;\n}\n\ninterface FormProps extends Omit<Props, 'values'> {\n    trapezoid: Trapezoid;\n}\n\ninterface TrapezoidAttrs {\n    forceI: number;\n    forceJ: number;\n    angle: number;\n    isGlobal: boolean;\n}\ninterface FormValues {\n    forceI: string;\n    forceJ: string;\n    angle: string;\n    isGlobal: boolean;\n}\n\ntype ValidateTuple = [value: number, valid: boolean, error: string];\n\n/**\n * 必須かつ 0以上の数値\n * @param value\n */\nconst validateForce = (value: string): ValidateTuple => {\n    if (value.length === 0) {\n        // 必須\n        return [NaN, false, '数値を入力してください'];\n    } else {\n        const val = parseFloat(value);\n        if (isNaN(val)) {\n            // 数値でない\n            return [NaN, false, '数値を入力してください'];\n        } else if (0 >= val && val > Number.MAX_SAFE_INTEGER) {\n            // 数値が範囲外\n            return [val, false, '0 以上の数値を入力してください'];\n        }\n        // OK\n        return [round(val, 3), true, ''];\n    }\n};\n\n/**\n * -180 から 180 の範囲の数値\n * -180 の場合は 180 とする\n * @param value\n */\nconst validateAngle = (value: string): ValidateTuple => {\n    if (value.length > 0) {\n        let val = parseInt(value, 10);\n        if (isNaN(val) || value.indexOf('.') >= 0) {\n            // 整数でない\n            return [NaN, false, '整数を入力してください'];\n        } else if (-180 > val || 180 < val) {\n            // 180 から 180 の範囲外\n            return [val, false, '-180 〜 180 で入力してください'];\n        }\n        if (val === -180) {\n            // -180 の場合は 180 とする\n            val = 180;\n        }\n        // OK\n        return [val, true, ''];\n    }\n    // 未指定の場合は 90 を返す\n    return [90, true, ''];\n};\n\nconst parseFormValues = (values: Partial<FormValues>): [boolean, TrapezoidAttrs] => {\n    const attrs: TrapezoidAttrs = {\n        forceI: 0,\n        forceJ: 0,\n        angle: 90,\n        isGlobal: false,\n    };\n\n    // forceI\n    const [value1, valid1] = validateForce(values.forceI ?? '');\n    const [value2, valid2] = validateForce(values.forceJ ?? '');\n    const [value3, valid3] = validateAngle(values.angle ?? '');\n    const valid = valid1 && valid2 && valid3;\n\n    attrs.forceI = value1;\n    attrs.forceJ = value2;\n    attrs.angle = value3;\n    attrs.isGlobal = values.isGlobal ?? false;\n\n    return [valid, attrs];\n};\n\nconst toFormValues = (trapezoid: Trapezoid): Partial<FormValues> => {\n    const values: Partial<FormValues> = {};\n\n    values.forceI = `${trapezoid.forceI}`;\n    values.forceJ = `${trapezoid.forceJ}`;\n    values.angle = `${trapezoid.angle ?? ''}`;\n    values.isGlobal = trapezoid.isGlobal;\n\n    return values;\n};\n\nconst TrapezoidEditor: React.VFC<FormProps> = ({ trapezoid, onChange, onClose }) => {\n    const [values, setValues] = useState<Partial<FormValues>>({});\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    const handleSubmit = useCallback(\n        (event: FormEvent<HTMLFormElement>) => {\n            event.preventDefault();\n\n            if (event.currentTarget.checkValidity()) {\n                // エラーがあれば更新しない\n                const invalid = Object.values(errors).some((error) => error.length > 0);\n                if (!invalid) {\n                    // values を TrapezoidAttrs に変換する\n                    const [valid, attrs] = parseFormValues(values);\n                    console.log(valid, attrs);\n                    if (valid) {\n                        // 更新\n                        onChange({\n                            ...trapezoid,\n                            ...attrs,\n                        });\n                    }\n                    // ポップアップ閉じる\n                    onClose();\n                }\n            }\n        },\n        [errors, onChange, onClose, trapezoid, values]\n    );\n\n    const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target;\n        let errorMessage = '';\n        switch (name) {\n            case 'forceI':\n            case 'forceJ':\n                // 必須かつ 0以上の数値\n                const [, valid1, error1] = validateForce(value);\n                if (!valid1) {\n                    errorMessage = error1;\n                }\n                break;\n            case 'angle':\n                const [, valid2, error2] = validateAngle(value);\n                if (!valid2) {\n                    errorMessage = error2;\n                }\n                break;\n        }\n\n        // エラー情報の更新\n        setErrors((state) => ({\n            ...state,\n            [name]: errorMessage,\n        }));\n\n        // 値を更新\n        setValues((state) => ({\n            ...state,\n            [name]: value,\n        }));\n    }, []);\n\n    const handleChangeIsGlobal = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        const { checked } = event.target;\n        setValues((state) => ({\n            ...state,\n            isGlobal: checked,\n        }));\n    }, []);\n\n    useEffect(() => {\n        setValues(toFormValues(trapezoid));\n        setErrors({});\n    }, [trapezoid]);\n\n    return (\n        <Paper>\n            <Stack\n                direction=\"column\"\n                spacing={1}\n                sx={{ p: 1, width: 240 }}\n                component=\"form\"\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                {/* forceI */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"I端側の荷重\"\n                    name=\"forceI\"\n                    value={values['forceI'] ?? ''}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN/m</InputAdornment>,\n                    }}\n                    error={Boolean(errors['forceI'])}\n                    helperText={errors['forceI'] ?? ''}\n                />\n                {/* forceJ */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"J端側の荷重\"\n                    name=\"forceJ\"\n                    value={values['forceJ'] ?? ''}\n                    required\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kN/m</InputAdornment>,\n                    }}\n                    error={Boolean(errors['forceJ'])}\n                    helperText={errors['forceJ'] ?? ''}\n                />\n                {/* angle */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    size=\"small\"\n                    label=\"角度\"\n                    name=\"angle\"\n                    value={values['angle'] ?? ''}\n                    fullWidth\n                    onChange={handleChange}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">°</InputAdornment>,\n                    }}\n                    error={Boolean(errors['angle'])}\n                    helperText={errors['angle'] ?? ''}\n                />\n                {/* isGlobal */}\n                <FormControlLabel\n                    label=\"全体座標系\"\n                    control={\n                        <Checkbox\n                            name=\"isGlobal\"\n                            size=\"small\"\n                            checked={values.isGlobal ?? false}\n                            onChange={handleChangeIsGlobal}\n                        />\n                    }\n                />\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n                    <Button size=\"small\" onClick={onClose}>\n                        キャンセル\n                    </Button>\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                        OK\n                    </Button>\n                </Stack>\n            </Stack>\n        </Paper>\n    );\n};\n\nconst ConnectedTrapezoidEditor: React.VFC<Props> = ({ values, ...props }) => {\n    const trapezoid = useMemo(() => {\n        if (isTrapezoid(values)) {\n            return values;\n        }\n        // 空データを返す\n        return {\n            id: '',\n            name: '',\n            beam: '',\n            forceI: 0,\n            distanceI: 0,\n            forceJ: 0,\n            distanceJ: 0,\n        };\n    }, [values]);\n\n    return <TrapezoidEditor {...props} trapezoid={trapezoid} />;\n};\n\nexport default ConnectedTrapezoidEditor;\n","import { useCallback, useContext, useMemo } from 'react';\nimport { Html } from 'react-konva-utils';\nimport { Force, Node, Trapezoid } from '../../../types/shape';\nimport { PopupContext } from '../provider/PopupProvider';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { clone } from '../util';\nimport ForceEditor from './ForceEditor';\nimport PinSelector from './PinSelector';\nimport TrapezoidEditor from './TrapezoidEditor';\n\nconst Popup: React.VFC = () => {\n    const { popupType, popupPosition, popupParams, close } = useContext(PopupContext);\n    const { setStructure } = useContext(StructureContext);\n\n    const divProps = useMemo(() => {\n        const { top, left } = popupPosition;\n        return {\n            style: {\n                zIndex: 5000,\n                top: `${top}px`,\n                left: `${left}px`,\n            },\n        };\n    }, [popupPosition]);\n\n    const handleChangeForce = useCallback(\n        (force: Force) => {\n            setStructure &&\n                setStructure((structure) => {\n                    const data = clone(structure);\n\n                    const index = data.forces.findIndex(({ id }) => id === force.id);\n                    if (index >= 0) {\n                        data.forces[index] = {\n                            ...force,\n                        };\n                    }\n\n                    return data;\n                });\n        },\n        [setStructure]\n    );\n\n    const handleChangeTrapezoid = useCallback(\n        (trapezoid: Trapezoid) => {\n            setStructure &&\n                setStructure((structure) => {\n                    const data = clone(structure);\n                    const index = data.trapezoids.findIndex(({ id }) => id === trapezoid.id);\n                    if (index >= 0) {\n                        data.trapezoids[index] = {\n                            ...trapezoid,\n                        };\n                    }\n                    return data;\n                });\n        },\n        [setStructure]\n    );\n\n    const handleChangeNode = useCallback(\n        (node: Node) => {\n            setStructure &&\n                setStructure((structure) => {\n                    const data = clone(structure);\n                    const index = data.nodes.findIndex(({ id }) => id === node.id);\n                    if (index >= 0) {\n                        data.nodes[index] = {\n                            ...node,\n                        };\n                    }\n                    return data;\n                });\n        },\n        [setStructure]\n    );\n\n    if (typeof popupType === 'undefined') {\n        return null;\n    }\n\n    return (\n        <Html divProps={divProps}>\n            {popupType === 'forces' && (\n                <ForceEditor\n                    values={popupParams ?? {}}\n                    onClose={close}\n                    onChange={handleChangeForce}\n                />\n            )}\n            {popupType === 'trapezoids' && (\n                <TrapezoidEditor\n                    values={popupParams ?? {}}\n                    onClose={close}\n                    onChange={handleChangeTrapezoid}\n                />\n            )}\n            {popupType === 'nodes' && (\n                <PinSelector\n                    values={popupParams ?? {}}\n                    onClose={close}\n                    onChange={handleChangeNode}\n                />\n            )}\n        </Html>\n    );\n};\n\nexport default Popup;\n","import { useContext } from 'react';\nimport { Layer } from 'react-konva';\nimport Popup from '../popup';\nimport { StructureContext } from '../provider/StructureProvider';\nimport { Beam, Force, Node, Trapezoid } from '../shape';\n\nconst ShapeLayer: React.VFC = () => {\n    const { nodes, beams, forces, trapezoids } = useContext(StructureContext);\n\n    return (\n        <Layer>\n            {Object.entries(beams).map(([key, beam]) => (\n                <Beam key={key} {...beam} />\n            ))}\n            {Object.entries(nodes).map(([key, node]) => (\n                <Node key={key} {...node} />\n            ))}\n            {Object.entries(forces).map(([key, force]) => (\n                <Force key={key} {...force} />\n            ))}\n            {Object.entries(trapezoids).map(([key, trapezoid]) => (\n                <Trapezoid key={key} {...trapezoid} />\n            ))}\n            {/* ポップアップ */}\n            <Popup />\n        </Layer>\n    );\n};\n\nexport default ShapeLayer;\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Dispatch, SetStateAction, useCallback, useContext } from 'react';\nimport { Stage } from 'react-konva';\nimport { CanvasTool, DOMSize } from '../../types/common';\nimport { Structure } from '../../types/shape';\nimport DrawLayer from './layer/DrawLayer';\nimport GridLayer from './layer/GridLayer';\nimport GuideLayer from './layer/GuideLayer';\nimport ShapeLayer from './layer/ShapeLayer';\nimport DrawProvider, { DrawContext } from './provider/DrawProvider';\nimport PopupProvider, { PopupContext } from './provider/PopupProvider';\nimport SelectProvider, { SelectContext } from './provider/SelectProvider';\nimport StructureProvider from './provider/StructureProvider';\n\nexport interface CanvasProps {\n    tool: CanvasTool;\n    structure: Structure;\n    size: DOMSize;\n    readonly?: boolean;\n    setStructure?: Dispatch<SetStateAction<Structure>>;\n}\n\nconst CanvasCore: React.VFC<CanvasProps> = ({\n    tool,\n    structure,\n    size,\n    readonly = false,\n    setStructure,\n}) => {\n    const { selected, setSelected } = useContext(SelectContext);\n    const { popupType, setPopupType, popupPosition, setPopupPosition, close } =\n        useContext(PopupContext);\n    const { points, onPointerDown, onPointerMove, onPointerUp, ...drawContextValues } =\n        useContext(DrawContext);\n\n    /**\n     * Stage のクリック\n     */\n    const handleClick = useCallback(\n        (_: KonvaEventObject<PointerEvent>) => {\n            // ポップオーバーを閉じる\n            close();\n\n            if (tool === 'select') {\n                // 選択解除\n                setSelected([]);\n            }\n        },\n        [close, setSelected, tool]\n    );\n\n    return (\n        <Stage\n            width={size.width}\n            height={size.height}\n            onClick={handleClick}\n            onTap={handleClick}\n            {...{ onPointerDown, onPointerMove, onPointerUp }}\n        >\n            <StructureProvider\n                size={size}\n                structure={structure}\n                tool={tool}\n                setStructure={setStructure}\n            >\n                <PopupProvider value={{ popupType, setPopupType, popupPosition, setPopupPosition }}>\n                    <SelectProvider value={{ selected, setSelected }}>\n                        <DrawProvider value={{ points, ...drawContextValues }}>\n                            <GridLayer />\n                            <GuideLayer />\n                            <ShapeLayer />\n                            <DrawLayer />\n                        </DrawProvider>\n                    </SelectProvider>\n                </PopupProvider>\n            </StructureProvider>\n        </Stage>\n    );\n};\n\nexport default CanvasCore;\n","import { Box } from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\nimport { CanvasTool, DOMSize } from '../../types/common';\nimport CanvasCore, { CanvasProps } from './core';\nimport { PopupPosition, PopupType } from './popup/types';\nimport DrawProvider from './provider/DrawProvider';\nimport PopupProvider from './provider/PopupProvider';\nimport SelectProvider from './provider/SelectProvider';\nimport { Shape } from './types';\n\ninterface Props extends Omit<CanvasProps, 'size' | 'tool'> {\n    tool?: CanvasTool;\n}\n\nconst Canvas: React.VFC<Props> = ({ tool = 'select', ...props }) => {\n    // キャンバス表示領域\n    const [size, setSize] = useState<DOMSize>({ width: 0, height: 0 });\n    // 選択要素\n    const [selected, setSelected] = useState<Shape[]>([]);\n    // ポップオーバーの表示\n    const [popupType, setPopupType] = useState<PopupType>();\n    const [popupPosition, setPopupPosition] = useState<PopupPosition>({ top: 0, left: 0 });\n    // 描画する点\n    const [points, setPoints] = useState<number[]>([]);\n\n    // キャンバスの親要素\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    // 要素のリサイズを監視\n    useEffect(() => {\n        const observer = new ResizeObserver((entries) => {\n            const { width, height } = entries[0].contentRect;\n            setSize({\n                width,\n                height,\n            });\n        });\n\n        if (containerRef.current) {\n            observer.observe(containerRef.current);\n        }\n\n        return () => {\n            observer.disconnect();\n        };\n    }, []);\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{\n                width: 'auto',\n                height: '100%',\n                backgroundColor: '#ffffff',\n                overscrollBehavior: 'contain',\n            }}\n        >\n            <PopupProvider value={{ popupType, setPopupType, popupPosition, setPopupPosition }}>\n                <SelectProvider value={{ selected, setSelected }}>\n                    <DrawProvider value={{ points, setPoints, tool, ...props }}>\n                        <CanvasCore size={size} tool={tool} {...props} />\n                    </DrawProvider>\n                </SelectProvider>\n            </PopupProvider>\n        </Box>\n    );\n};\n\nexport default Canvas;\n","import { Box } from '@mui/material';\nimport { useContext, useState } from 'react';\nimport { ConfigurationContext } from '../providers/ConfigurationProvider';\nimport { emptyStructure } from '../types/shape';\nimport Canvas from './Canvas';\n\nconst CanvasContainer: React.VFC = () => {\n    const { tool } = useContext(ConfigurationContext);\n    const [structure, setStructure] = useState(emptyStructure);\n\n    return (\n        <Box\n            sx={{\n                boxSizing: 'border-box',\n                ml: 1,\n                mb: 1,\n                flex: 1,\n                border: (theme) => `1px solid ${theme.palette.divider}`,\n                borderRadius: 1,\n                overflow: 'hidden',\n            }}\n        >\n            <Canvas tool={tool} structure={structure} setStructure={setStructure} />\n        </Box>\n    );\n};\n\nexport default CanvasContainer;\n","import { Typography } from '@mui/material';\n\nconst hash = process.env.REACT_APP_GIT_COMMIT_HASH?.substring(0, 7) ?? '';\nconst date = process.env.REACT_APP_GIT_COMMIT_DATE ?? '';\nconst version = process.env.REACT_APP_PACKAGE_VERSION ?? '';\n\nconst Version: React.VFC = () => {\n    return (\n        <Typography\n            variant=\"caption\"\n            sx={{ ml: 2 }}\n        >{`ver ${version} (${hash}: ${date})`}</Typography>\n    );\n};\n\nexport default Version;\n","import { AppBar, Toolbar, Typography } from '@mui/material';\nimport Version from './Version';\n\nconst Header: React.VFC = () => {\n    return (\n        <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\">\n                    Drawing Sample\n                </Typography>\n                <Version />\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Header;\n","import { ArrowDownward, Delete, Edit, PanToolAlt, Texture } from '@mui/icons-material';\nimport { Stack, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { MouseEvent, ReactElement, useCallback, useContext } from 'react';\nimport { ConfigurationContext } from '../../providers/ConfigurationProvider';\nimport { CanvasTool, isCanvasTool } from '../../types/common';\n\ninterface Props {\n    tool: CanvasTool;\n    onChange: (tool: CanvasTool) => void;\n}\n\ninterface ButtonProps {\n    tool: CanvasTool;\n    icon: ReactElement;\n    label: string;\n}\n\nconst ToolboxButtons: Readonly<Record<CanvasTool, ButtonProps>> = {\n    select: {\n        tool: 'select',\n        icon: <PanToolAlt />,\n        label: '選択',\n    },\n    pen: {\n        tool: 'pen',\n        icon: <Edit />,\n        label: '梁要素の描画',\n    },\n    force: {\n        tool: 'force',\n        icon: <ArrowDownward />,\n        label: '集中荷重の追加',\n    },\n    trapezoid: {\n        tool: 'trapezoid',\n        icon: <Texture />,\n        label: '分布荷重の追加',\n    },\n    delete: {\n        tool: 'delete',\n        icon: <Delete />,\n        label: '要素の削除',\n    },\n};\n\nconst ToolboxCore: React.VFC<Props> = ({ tool, onChange }) => {\n    /**\n     * ツールの変更\n     */\n    const handleChange = useCallback(\n        (_: MouseEvent<HTMLElement>, newValue: string | null) => {\n            if (newValue !== null && isCanvasTool(newValue)) {\n                onChange(newValue);\n            }\n        },\n        [onChange]\n    );\n\n    return (\n        <Stack sx={{ width: 160 }} alignItems=\"flex-start\">\n            <Typography variant=\"caption\">Toolbox</Typography>\n            <ToggleButtonGroup\n                orientation=\"vertical\"\n                value={tool}\n                exclusive\n                fullWidth\n                onChange={handleChange}\n            >\n                {Object.entries(ToolboxButtons).map(([key, { icon, label }]) => (\n                    <ToggleButton\n                        key={key}\n                        value={key}\n                        sx={{ justifyContent: 'flex-start', alignItems: 'center' }}\n                    >\n                        {icon}\n                        <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                            {label}\n                        </Typography>\n                    </ToggleButton>\n                ))}\n            </ToggleButtonGroup>\n        </Stack>\n    );\n};\n\nconst Toolbox: React.VFC = () => {\n    const { tool, setTool } = useContext(ConfigurationContext);\n    return <ToolboxCore tool={tool} onChange={setTool} />;\n};\n\nexport default Toolbox;\n","import { Box } from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport { DOMSize } from '../types/common';\nimport CanvasContainer from './CanvasContainer';\nimport Header from './Header';\nimport Toolbox from './Toolbox';\n\nconst Layout: React.VFC = () => {\n    const [windowRect, setWindowRect] = useState<DOMSize>({ width: 0, height: 0 });\n\n    const fitWindowSize = useCallback(() => {\n        const { innerHeight, innerWidth } = window;\n        setWindowRect({\n            height: innerHeight,\n            width: innerWidth,\n        });\n    }, []);\n\n    useEffect(() => {\n        fitWindowSize();\n        window.addEventListener('resize', fitWindowSize);\n\n        return () => {\n            window.removeEventListener('resize', fitWindowSize);\n        };\n    }, [fitWindowSize]);\n\n    return (\n        <Box sx={{ ...windowRect, overflow: 'hidden' }}>\n            <Header />\n            <Box\n                sx={{\n                    boxSizing: 'border-box',\n                    width: 'auto',\n                    height: 'calc(100% - 48px)',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    flexWrap: 'nowrap',\n                    alignItems: 'stretch',\n                    pt: 1,\n                    px: 1,\n                }}\n            >\n                <Toolbox />\n                <CanvasContainer />\n            </Box>\n        </Box>\n    );\n};\n\nexport default Layout;\n","import { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport React from 'react';\nimport ConfigurationProvider from '../providers/ConfigurationProvider';\nimport Layout from './Layout';\n\nconst theme = createTheme();\n\nconst App: React.VFC = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <ConfigurationProvider>\n                <CssBaseline />\n                <Layout />\n            </ConfigurationProvider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}